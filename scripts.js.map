{"version":3,"sources":["src/assets/js/via.component.js"],"names":[],"mappings":";;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,2BAA2B;;AAE3B;AACA;;AAEA;AACA,2BAA2B;;AAE3B;AACA;;AAEA;AACA,4BAA4B;;AAE5B;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;;AAEA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qCAAqC;AACrC;AACA,uCAAuC;AACvC;AACA;;AAEA,sCAAsC;AACtC;AACA;AACA;AACA;AACA,wCAAwC;AACxC,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,2BAA2B;AAC3B,2BAA2B,qBAAqB;AAChD,2BAA2B;AAC3B,0BAA0B;AAC1B,6BAA6B;AAC7B,8BAA8B;;AAE9B,6BAA6B,QAAQ,gBAAgB;AACrD,6BAA6B;;AAE7B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA,yEAAyE;AACzE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,sBAAsB;AACtB;AACA;AACA,uBAAuB;;AAEvB;AACA,mCAAmC;AACnC;AACA;;AAEA;AACA;;AAEA;AACA,kDAAkD,KAAK;AACvD,0CAA0C,YAAY,WAAW;AACjE;;AAEA;AACA,yCAAyC;;AAEzC;AACA;AACA;AACA;;AAEA;AACA;AACA,+CAA+C,KAAK;AACpD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C,4CAA4C;AAC5C,4CAA4C,KAAK;AACjD,4CAA4C,KAAK;AACjD,4CAA4C;;AAE5C;AACA,4CAA4C;AAC5C,4CAA4C;;AAE5C;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA,iDAAiD;AACjD,iDAAiD;AACjD;AACA;AACA,iDAAiD;AACjD,iDAAiD;AACjD,iDAAiD,KAAK;AACtD,iDAAiD,KAAK;AACtD;AACA,iDAAiD;;AAEjD;AACA,2DAA2D;AAC3D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iDAAiD;AACjD,kDAAkD;AAClD,iDAAiD;;AAEjD;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,+DAA+D;AAC/D,0EAA0E;AAC1E;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,8CAA8C;AAC9C,gDAAgD;AAChD,+CAA+C;AAC/C,8CAA8C;AAC9C,8CAA8C;AAC9C,4BAA4B;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB,qBAAqB;AACrB,4BAA4B;AAC5B;;AAEA;AACA,8BAA8B;AAC9B,8BAA8B;AAC9B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,mBAAmB;AACjC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,+BAA+B;AACpD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,2BAA2B;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,2BAA2B;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,oDAAoD;AACpD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;;AAEA;AACA;AACA,4DAA4D;AAC5D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,sDAAsD;AACtD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA,8HAA8H;AAC9H,6HAA6H;;AAE7H;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yBAAyB,iCAAiC;AAC1D;AACA;AACA;AACA;AACA;;AAEA,0BAA0B,uBAAuB,yBAAyB;AAC1E;AACA;AACA;;AAEA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA,WAAW;AACX,4CAA4C;AAC5C;AACA;AACA,4BAA4B,4CAA4C;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,0CAA0C;AAC1C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,8CAA8C;AAC9C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,SAAS,sDAAsD;AAC/D;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,4BAA4B;AACvC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,0BAA0B,cAAc;AACxC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,yCAAyC,KAAK;AAC9C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA,cAAc,UAAU;AACxB,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,2CAA2C,GAAG;;AAEtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,oBAAoB;;AAEpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,wBAAwB,aAAa;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,wBAAwB,aAAa;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,2CAA2C;AAC3C,GAAG;AACH;;AAEA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAoB,qDAAqD;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,oBAAoB;AACtC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,8CAA8C;AAC7D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,4BAA4B;;AAE5B;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,6EAA6E;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,6BAA6B;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,+BAA+B;AAC/B,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qEAAqE;AACrE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,+BAA+B;AAC/B,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kDAAkD,mBAAmB;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,6BAA6B;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,OAAO;;AAE7B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,OAAO;;AAE7B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC,qCAAqC;;AAErC;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA;;AAEA,iBAAiB,oBAAoB;AACrC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,gCAAgC;AAC/C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kDAAkD,mBAAmB;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,yBAAyB;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,yBAAyB;AAC3C;AACA;AACA;AACA,4DAA4D;AAC5D;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,yBAAyB;AAC3C;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,kBAAkB,yBAAyB;AAC3C;AACA;AACA;AACA,4DAA4D;AAC5D;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,qDAAqD;AACvE;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,yBAAyB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa;AACb;AACA;AACA;AACA,cAAc,SAAS,QAAQ;AAC/B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kCAAkC;;AAElC,kBAAkB,gCAAgC;AAClcAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,yBAAyB;AACzwBAAwB;AACxB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,0DAA0D;AAC1D;AACA,sCAAsC;AACtC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,oBAAoB,gCAAgC;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,oBAAoB,8BAA8B;AAClD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,qDAAqD;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,sCAAsC;AAC1D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,gBAAgB;AAChB,eAAe,kBAAkB,sGAAsG;AACvI,mCAAmC,8UAA8U;AACjX,kCAAkC,6UAA6U;AAC/W,yBAAyB,uSAAuS;AAChU,6CAA6C,yEAAyE;AACtH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,sBAAsB;AACpC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB,sCAAsC;AACtD;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB;AAChB,eAAe,kBAAkB,wGAAwG;AACzI,mCAAmC,qXAAqX;AACxZ,kCAAkC,mXAAmX;AACrZ,yBAAyB,2TAA2T;AACpV;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc,sBAAsB;AACpC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB,sCAAsC;AACtD;AACA;AACA;AACA,2DAA2D,QAAQ;AACnE;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,8BAA8B,YAAY,GAAG;AAC7C,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,8BAA8B,6CAA6C,GAAG;AAC9E,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,8BAA8B,2BAA2B,GAAG;AAC5D,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,8BAA8B,2BAA2B,GAAG;AAC5D,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA,6BAA6B;AAC7B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,gBAAgB;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,6DAA6D;AAC7D,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,qCAAqC;AACzD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,cAAc,oBAAoB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,qCAAqC;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,8CAA8C;AAC5D;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB,2BAA2B;AAC3B;AACA;AACA,kBAAkB,YAAY;AAC9B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB,qCAAqC;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,8CAA8C;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA,uCAAuC;AACvC,YAAY;AACZ;;AAEA,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA,iBAAiB,cAAc,8FAA8F;AAC7H,6BAA6B;AAC7B;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,GAAG;AACH,cAAc;AACd;;AAEA,eAAe,cAAc,2EAA2E;AACxG,2BAA2B;AAC3B;;AAEA;AACA,0BAA0B;AAC1B,GAAG;AACH,8BAA8B,mFAAmF;AACjH,8BAA8B;AAC9B;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,gDAAgD;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,gDAAgD;AACnE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,wBAAwB;AACxB;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,qGAAqG,QAAQ;AAC7G;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,kBAAkB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT,2BAA2B,0DAA0D;AACrF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,WAAW;AACjcAAc,wBAAwB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,OAAO;AACzB;AACA;;AAEA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,kBAAkB,OAAO;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,gBAAgB;AAChB,eAAe,kBAAkB,8FAA8F;AAC/H,oCAAoC,kHAAkH;AACtJ,mCAAmC,wEAAwE;AAC3G,qCAAqC,qEAAqE;AAC1G,sDAAsD,gFAAgF;AACtI,iDAAiD,2JAA2J;AAC5M;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,6BAA6B,iBAAiB,eAAe;;AAE7D;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,YAAY,WAAW;AAC9C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,+CAA+C;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,gBAAgB;AAChB,eAAe,eAAe,iFAAiF;AAC/G,4BAA4B,sEAAsE;AAClG,gCAAgC;AAChC;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,iCAAiC;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA,gBAAgB;AAChB,eAAe,mBAAmB,8GAA8G;AAChJ,yBAAyB;AACzB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB;AAChB,eAAe,SAAS,uIAAuI;AAC/J,eAAe;AACf;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB;AAClB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,wBAAwB;AAC3C;;AAEA;AACA;;AAEA;AACA;AACA,kBAAkB,2BAA2B;AAC7C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,OAAO;AACzB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC,iDAAiD;AACjD;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA,2EAA2E;;AAE3E;AACA;AACA,wCAAwC;AACxC;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC,yDAAyD;AACzD;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;;AAEA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,8BAA8B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,2BAA2B,KAAK;AAChC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kBAAkB,SAAS;AAC3B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,2CAA2C;AACzD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,0BAA0B;AAC1B;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA,0BAA0B,OAAO;AACjC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;;AAEA;AACA;AACA;AACA,qCAAqC,gGAAgG;;AAErI;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA,qCAAqC,8GAA8G;AACnJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA,kBAAkB,kBAAkB;AACpC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB,kBAAkB;AAClC;AACA;AACA;;AAEA,8BAA8B,sCAAsC;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,OAAO;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,OAAO;AACzB;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,OAAO;AACzB;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,oCAAoC;AACpC;;AAEA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;;AAEhD;AACA;AACA;AACA;;AAEA;AACA,4DAA4D;;AAE5D;AACA,sBAAsB;AACtB,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,+BAA+B;AAC/B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE;AAChE;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;;AAEP,mCAAmC,2BAA2B;AAC9D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE;AAChE;AACA,OAAO;AACP;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;;AAEA,cAAc,OAAO;AACrB;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,uCAAuC;AACrD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,2BAA2B;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,0BAA0B;AAC5C;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,sBAAsB;AACxC;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iIAAiI,iCAAiC,SAAS;AAC3K;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,oBAAoB;AACpC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;;AAEL,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,uBAAuB;AACrC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,cAAc,uBAAuB;AACrC;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,gBAAgB,sCAAsC;AACtD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,gCAAgC;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,2BAA2B;AAC7C;AACA;AACA,wCAAwC;AACxC;AACA;AACA,sBAAsB,QAAQ;AAC9B;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,kBAAkB,qCAAqC;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"scripts.js","sourcesContent":["\n\nfunction _via_load_submodules() {\n  _via_basic_demo_load_img();\n  //_via_basic_demo_draw_default_regions();\n  _via_basic_demo_define_attributes();\n  _via_basic_demo_define_annotations();\n\n  toggle_attributes_editor();\n  update_attributes_update_panel();\n\n  annotation_editor_show();\n}\n\nfunction _via_basic_demo_load_img() {\n  // add files\n  var i, n;\n  var file_count = 0;\n  n = _via_basic_demo_img.length;\n  for ( i = 0; i < n; ++i ) {\n    project_file_add_url('getPath()')\n    file_count += 1;\n  }\n\n  _via_show_img(0);\n  update_img_fn_list();\n}\n\nfunction _via_basic_demo_draw_default_regions() {\n  var csv_annotations = '{}';\n\n  import_annotations_from_csv(csv_annotations);\n}\n\nfunction _via_basic_demo_define_attributes() {\n  var attributes_json = '{}';\n\n  project_import_attributes_from_json(attributes_json);\n}\n\nfunction _via_basic_demo_define_annotations() {\n  var annotations_json = '{}';\n\n  import_annotations_from_json(annotations_json);\n}\n\nvar _via_basic_demo_img = [];\nvar _via_basic_demo_img_filename = ['current_img.jpg',];\n\n// adutta_swan.jpg\n\n// // wikimedia_death_of_socrates.jpg\n\nvar VIA_VERSION      = '2.0.10';\nvar VIA_NAME         = 'VGG Image Annotator';\nvar VIA_SHORT_NAME   = 'VIA';\nvar VIA_REGION_SHAPE = { RECT:'rect',\n                         CIRCLE:'circle',\n                         ELLIPSE:'ellipse',\n                         POLYGON:'polygon',\n                         POINT:'point',\n                         POLYLINE:'polyline'\n                       };\n\nvar VIA_ATTRIBUTE_TYPE = { TEXT:'text',\n                           CHECKBOX:'checkbox',\n                           RADIO:'radio',\n                           IMAGE:'image',\n                           DROPDOWN:'dropdown'\n                         };\n\nvar VIA_DISPLAY_AREA_CONTENT_NAME = {IMAGE:'image_panel',\n                                     IMAGE_GRID:'image_grid_panel',\n                                     SETTINGS:'settings_panel',\n                                     PAGE_404:'page_404',\n                                     PAGE_GETTING_STARTED:'page_getting_started',\n                                     PAGE_ABOUT:'page_about',\n                                     PAGE_START_INFO:'page_start_info',\n                                     PAGE_LICENSE:'page_license'\n                                    };\n\nvar VIA_ANNOTATION_EDITOR_MODE    = {SINGLE_REGION:'single_region',\n                                     ALL_REGIONS:'all_regions'};\nvar VIA_ANNOTATION_EDITOR_PLACEMENT = {NEAR_REGION:'NEAR_REGION',\n                                       IMAGE_BOTTOM:'IMAGE_BOTTOM',\n                                       DISABLE:'DISABLE'};\n\nvar VIA_REGION_EDGE_TOL           = 5;   // pixel\nvar VIA_REGION_CONTROL_POINT_SIZE = 2;\nvar VIA_POLYGON_VERTEX_MATCH_TOL  = 5;\nvar VIA_REGION_MIN_DIM            = 3;\nvar VIA_MOUSE_CLICK_TOL           = 2;\nvar VIA_ELLIPSE_EDGE_TOL          = 0.2; // euclidean distance\nvar VIA_THETA_TOL                 = Math.PI/18; // 10 degrees\nvar VIA_POLYGON_RESIZE_VERTEX_OFFSET  = 100;\nvar VIA_CANVAS_DEFAULT_ZOOM_LEVEL_INDEX = 3;\nvar VIA_CANVAS_ZOOM_LEVELS = [0.25, 0.5, 0.75, 1.0, 1.5, 2.0, 2.5, 3.0, 4, 5, 6, 7, 8, 9, 10];\nvar VIA_REGION_COLOR_LIST = [\"#E69F00\", \"#56B4E9\", \"#009E73\", \"#D55E00\", \"#CC79A7\", \"#F0E442\", \"#ffffff\"];\n// radius of control points in all shapes\nvar VIA_REGION_SHAPES_POINTS_RADIUS = 3;\n// radius of control points in a point\nvar VIA_REGION_POINT_RADIUS         = 3;\nvar VIA_REGION_POINT_RADIUS_DEFAULT = 3;\n\nvar VIA_THEME_REGION_BOUNDARY_WIDTH = 3;\nvar VIA_THEME_BOUNDARY_LINE_COLOR   = \"black\";\nvar VIA_THEME_BOUNDARY_FILL_COLOR   = \"yellow\";\nvar VIA_THEME_SEL_REGION_FILL_COLOR = \"#808080\";\nvar VIA_THEME_SEL_REGION_FILL_BOUNDARY_COLOR = \"yellow\";\nvar VIA_THEME_SEL_REGION_OPACITY    = 0.5;\nvar VIA_THEME_MESSAGE_TIMEOUT_MS    = 6000;\nvar VIA_THEME_CONTROL_POINT_COLOR   = '#ff0000';\n\nvar VIA_CSV_SEP        = ',';\nvar VIA_CSV_QUOTE_CHAR = '\"';\nvar VIA_CSV_KEYVAL_SEP = ':';\n\nvar _via_img_metadata = {};   // data structure to store loaded images metadata\nvar _via_img_src      = {};   // image content {abs. path, url, base64 data, etc}\nvar _via_img_fileref  = {};   // reference to local images selected by using browser file selector\nvar _via_img_count    = 0;    // count of the loaded images\nvar _via_canvas_regions = []; // image regions spec. in canvas space\nvar _via_canvas_scale   = 1.0;// current scale of canvas image\n\nvar _via_image_id       = ''; // id={filename+length} of current image\nvar _via_image_index    = -1; // index\n\nvar _via_current_image_filename;\nvar _via_current_image;\nvar _via_current_image_width;\nvar _via_current_image_height;\n\n// a record of image statistics (e.g. width, height)\nvar _via_img_stat     = {};\nvar _via_is_all_img_stat_read_ongoing = false;\nvar _via_img_stat_current_img_index = false;\n\n// image canvas\nvar _via_display_area = document.getElementById('display_area');\nvar _via_img_panel    = document.getElementById('image_panel');\nvar _via_reg_canvas   = document.getElementById('region_canvas');\nvar _via_reg_ctx; // initialized in _via_init()\nvar _via_canvas_width, _via_canvas_height;\n\n// canvas zoom\nvar _via_canvas_zoom_level_index   = VIA_CANVAS_DEFAULT_ZOOM_LEVEL_INDEX; // 1.0\nvar _via_canvas_scale_without_zoom = 1.0;\n\n// state of the application\nvar _via_is_user_drawing_region  = false;\nvar _via_current_image_loaded    = false;\nvar _via_is_window_resized       = false;\nvar _via_is_user_resizing_region = false;\nvar _via_is_user_moving_region   = false;\nvar _via_is_user_drawing_polygon = false;\nvar _via_is_region_selected      = false;\nvar _via_is_all_region_selected  = false;\nvar _via_is_loaded_img_list_visible  = false;\nvar _via_is_attributes_panel_visible = false;\nvar _via_is_reg_attr_panel_visible   = false;\nvar _via_is_file_attr_panel_visible  = false;\nvar _via_is_canvas_zoomed            = false;\nvar _via_is_loading_current_image    = false;\nvar _via_is_region_id_visible        = true;\nvar _via_is_region_boundary_visible  = true;\nvar _via_is_region_info_visible      = false;\nvar _via_is_ctrl_pressed             = false;\nvar _via_is_debug_mode               = false;\n\n// region\nvar _via_current_shape             = VIA_REGION_SHAPE.RECT;\nvar _via_current_polygon_region_id = -1;\nvar _via_user_sel_region_id        = -1;\nvar _via_click_x0 = 0; var _via_click_y0 = 0;\nvar _via_click_x1 = 0; var _via_click_y1 = 0;\nvar _via_region_click_x, _via_region_click_y;\nvar _via_region_edge          = [-1, -1];\nvar _via_current_x = 0; var _via_current_y = 0;\n\n// region copy/paste\nvar _via_region_selected_flag = []; // region select flag for current image\nvar _via_copied_image_regions = [];\nvar _via_paste_to_multiple_images_input;\n\n// message\nvar _via_message_clear_timer;\n\n// attributes\nvar _via_attribute_being_updated       = 'region'; // {region, file}\nvar _via_attributes                    = { 'region':{}, 'file':{} };\nvar _via_current_attribute_id          = '';\n\n// region group color\nvar _via_canvas_regions_group_color = {}; // color of each region\n\n// invoke a method after receiving user input\nvar _via_user_input_ok_handler     = null;\nvar _via_user_input_cancel_handler = null;\nvar _via_user_input_data           = {};\n\n// annotation editor\nvar _via_annotaion_editor_panel     = document.getElementById('annotation_editor_panel');\nvar _via_metadata_being_updated     = 'region'; // {region, file}\nvar _via_annotation_editor_mode     = VIA_ANNOTATION_EDITOR_MODE.SINGLE_REGION;\n\n// persistence to local storage\nvar _via_is_local_storage_available = false;\nvar _via_is_save_ongoing            = false;\n\n// all the image_id and image_filename of images added by the user is\n// stored in _via_image_id_list and _via_image_filename_list\n//\n// Image filename list (img_fn_list) contains a filtered list of images\n// currently accessible by the user. The img_fn_list is visible in the\n// left side toolbar. image_grid, next/prev, etc operations depend on\n// the contents of _via_img_fn_list_img_index_list.\nvar _via_image_id_list                 = []; // array of all image id (in order they were added by user)\nvar _via_image_filename_list           = []; // array of all image filename\nvar _via_image_load_error              = []; // {true, false}\nvar _via_image_filepath_resolved       = []; // {true, false}\nvar _via_image_filepath_id_list        = []; // path for each file\n\nvar _via_reload_img_fn_list_table      = true;\nvar _via_img_fn_list_img_index_list    = []; // image index list of images show in img_fn_list\nvar _via_img_fn_list_html              = []; // html representation of image filename list\n\n// image grid\nvar image_grid_panel                        = document.getElementById('image_grid_panel');\nvar _via_display_area_content_name          = ''; // describes what is currently shown in display area\nvar _via_display_area_content_name_prev     = '';\nvar _via_image_grid_requires_update         = false;\nvar _via_image_grid_content_overflow        = false;\nvar _via_image_grid_load_ongoing            = false;\nvar _via_image_grid_page_first_index        = 0; // array index in _via_img_fn_list_img_index_list[]\nvar _via_image_grid_page_last_index         = -1;\nvar _via_image_grid_selected_img_index_list = [];\nvar _via_image_grid_page_img_index_list     = []; // list of all image index in current page of image grid\nvar _via_image_grid_visible_img_index_list  = []; // list of images currently visible in grid\nvar _via_image_grid_mousedown_img_index     = -1;\nvar _via_image_grid_mouseup_img_index       = -1;\nvar _via_image_grid_img_index_list          = []; // list of all image index in the image grid\nvar _via_image_grid_region_index_list       = []; // list of all image index in the image grid\nvar _via_image_grid_group                   = {}; // {'value':[image_index_list]}\nvar _via_image_grid_group_var               = []; // {type, name, value}\nvar _via_image_grid_group_show_all          = false;\nvar _via_image_grid_stack_prev_page         = []; // stack of first img index of every page navigated so far\n\n// image buffer\nvar VIA_IMG_PRELOAD_INDICES         = [1, -1, 2, 3, -2, 4]; // for any image, preload previous 2 and next 4 images\nvar VIA_IMG_PRELOAD_COUNT           = 4;\nvar _via_buffer_preload_img_index   = -1;\nvar _via_buffer_img_index_list      = [];\nvar _via_buffer_img_shown_timestamp = [];\nvar _via_preload_img_promise_list   = [];\n\n// via settings\nvar _via_settings = {};\n_via_settings.ui  = {};\n_via_settings.ui.annotation_editor_height   = 25; // in percent of the height of browser window\n_via_settings.ui.annotation_editor_fontsize = 0.8;// in rem\n_via_settings.ui.leftsidebar_width          = 18;  // in rem\n\n_via_settings.ui.image_grid = {};\n_via_settings.ui.image_grid.img_height          = 80;  // in pixel\n_via_settings.ui.image_grid.rshape_fill         = 'none';\n_via_settings.ui.image_grid.rshape_fill_opacity = 0.3;\n_via_settings.ui.image_grid.rshape_stroke       = 'yellow';\n_via_settings.ui.image_grid.rshape_stroke_width = 2;\n_via_settings.ui.image_grid.show_region_shape   = true;\n_via_settings.ui.image_grid.show_image_policy   = 'all';\n\n_via_settings.ui.image = {};\n_via_settings.ui.image.region_label      = '__via_region_id__'; // default: region_id\n_via_settings.ui.image.region_color      = '__via_default_region_color__'; // default color: yellow\n_via_settings.ui.image.region_label_font = '10px Sans';\n_via_settings.ui.image.on_image_annotation_editor_placement = VIA_ANNOTATION_EDITOR_PLACEMENT.NEAR_REGION;\n\n_via_settings.core                  = {};\n_via_settings.core.buffer_size      = 4*VIA_IMG_PRELOAD_COUNT + 2;\n_via_settings.core.filepath         = {};\n_via_settings.core.default_filepath = '';\n\n// UI html elements\nvar invisible_file_input = document.getElementById(\"invisible_file_input\");\nvar display_area    = document.getElementById(\"display_area\");\nvar ui_top_panel    = document.getElementById(\"ui_top_panel\");\nvar image_panel     = document.getElementById(\"image_panel\");\nvar img_buffer_now  = document.getElementById(\"img_buffer_now\");\n\nvar annotation_list_snippet = document.getElementById(\"annotation_list_snippet\");\nvar annotation_textarea     = document.getElementById(\"annotation_textarea\");\n\nvar img_fn_list_panel     = document.getElementById('img_fn_list_panel');\nvar img_fn_list           = document.getElementById('img_fn_list');\nvar attributes_panel      = document.getElementById('attributes_panel');\nvar leftsidebar           = document.getElementById('leftsidebar');\n\nvar BBOX_LINE_WIDTH       = 4;\nvar BBOX_SELECTED_OPACITY = 0.3;\nvar BBOX_BOUNDARY_FILL_COLOR_ANNOTATED = \"#f2f2f2\";\nvar BBOX_BOUNDARY_FILL_COLOR_NEW       = \"#aaeeff\";\nvar BBOX_BOUNDARY_LINE_COLOR           = \"#1a1a1a\";\nvar BBOX_SELECTED_FILL_COLOR           = \"#ffffff\";\n\nvar VIA_ANNOTATION_EDITOR_HEIGHT_CHANGE   = 5;   // in percent\nvar VIA_ANNOTATION_EDITOR_FONTSIZE_CHANGE = 0.1; // in rem\nvar VIA_IMAGE_GRID_IMG_HEIGHT_CHANGE      = 20;  // in percent\nvar VIA_LEFTSIDEBAR_WIDTH_CHANGE          = 1;   // in rem\nvar VIA_POLYGON_SEGMENT_SUBTENDED_ANGLE   = 5;   // in degree (used to approximate shapes using polygon)\nvar VIA_FLOAT_PRECISION = 3; // number of decimal places to include in float values\n\n// COCO Export\nvar VIA_COCO_EXPORT_RSHAPE = ['rect', 'circle', 'ellipse', 'polygon', 'point'];\nvar VIA_COCO_EXPORT_ATTRIBUTE_TYPE = [VIA_ATTRIBUTE_TYPE.DROPDOWN,\n                                      VIA_ATTRIBUTE_TYPE.RADIO];\n//\n// Data structure to store metadata about file and regions\n//\nfunction file_metadata(filename, size) {\n  this.filename = filename;\n  this.size     = size;         // file size in bytes\n  this.regions  = [];           // array of file_region()\n  this.file_attributes = {};    // image attributes\n}\n\nfunction file_region() {\n  this.shape_attributes  = {}; // region shape attributes\n  this.region_attributes = {}; // region attributes\n}\n\n//\n// Initialization routine\n//\nfunction _via_init() {\n  console.log(VIA_NAME);\n  show_message(VIA_NAME + ' (' + VIA_SHORT_NAME + ') version ' + VIA_VERSION +\n               '. Ready !', 2*VIA_THEME_MESSAGE_TIMEOUT_MS);\n\n  if ( _via_is_debug_mode ) {\n    document.getElementById('ui_top_panel').innerHTML += '<span>DEBUG MODE</span>';\n  }\n\n  document.getElementById('img_fn_list').style.display = 'block';\n  document.getElementById('leftsidebar').style.display = 'table-cell';\n\n  // initialize default project\n  project_init_default_project();\n\n  // initialize region canvas 2D context\n  _via_init_reg_canvas_context();\n\n  // initialize user input handlers (for both window and via_reg_canvas)\n  // handles drawing of regions by user over the image\n  _via_init_keyboard_handlers();\n  _via_init_mouse_handlers();\n\n  // initialize image grid\n  image_grid_init();\n\n  show_single_image_view();\n  init_leftsidebar_accordion();\n  attribute_update_panel_set_active_button();\n  annotation_editor_set_active_button();\n  init_message_panel();\n\n  // run attached sub-modules (if any)\n  // e.g. demo modules\n  if (typeof _via_load_submodules === 'function') {\n    console.log('Loading VIA submodule');\n    setTimeout( async function() {\n      await _via_load_submodules();\n    }, 100);\n  }\n\n}\n\nfunction _via_init_reg_canvas_context() {\n  _via_reg_ctx  = _via_reg_canvas.getContext('2d');\n}\n\nfunction _via_init_keyboard_handlers() {\n  window.addEventListener('keydown', _via_window_keydown_handler, false);\n  _via_reg_canvas.addEventListener('keydown', _via_reg_canvas_keydown_handler, false);\n  _via_reg_canvas.addEventListener('keyup', _via_reg_canvas_keyup_handler, false);\n}\n\n// handles drawing of regions over image by the user\nfunction _via_init_mouse_handlers() {\n  _via_reg_canvas.addEventListener('dblclick', _via_reg_canvas_dblclick_handler, false);\n  _via_reg_canvas.addEventListener('mousedown', _via_reg_canvas_mousedown_handler, false);\n  _via_reg_canvas.addEventListener('mouseup', _via_reg_canvas_mouseup_handler, false);\n  _via_reg_canvas.addEventListener('mouseover', _via_reg_canvas_mouseover_handler, false);\n  _via_reg_canvas.addEventListener('mousemove', _via_reg_canvas_mousemove_handler, false);\n  _via_reg_canvas.addEventListener('wheel', _via_reg_canvas_mouse_wheel_listener, false);\n  // touch screen event handlers\n  // @todo: adapt for mobile users\n  _via_reg_canvas.addEventListener('touchstart', _via_reg_canvas_mousedown_handler, false);\n  _via_reg_canvas.addEventListener('touchend', _via_reg_canvas_mouseup_handler, false);\n  _via_reg_canvas.addEventListener('touchmove', _via_reg_canvas_mousemove_handler, false);\n}\n\n//\n// Download image with annotations\n//\n\nfunction download_as_image() {\n  if ( _via_display_area_content_name !== VIA_DISPLAY_AREA_CONTENT_NAME['IMAGE'] ) {\n    show_message('This functionality is only available in single image view mode');\n    return;\n  } else {\n    var c = document.createElement('canvas');\n\n    // ensures that downloaded image is scaled at current zoom level\n    c.width  = _via_reg_canvas.width;\n    c.height = _via_reg_canvas.height;\n\n    var ct = c.getContext('2d');\n    // draw current image\n    ct.drawImage(_via_current_image, 0, 0, _via_reg_canvas.width, _via_reg_canvas.height);\n    // draw current regions\n    ct.drawImage(_via_reg_canvas, 0, 0);\n\n    var cur_img_mime = 'image/jpeg';\n    if ( _via_current_image.src.startsWith('data:') )  {\n      var c1 = _via_current_image.src.indexOf(':', 0);\n      var c2 = _via_current_image.src.indexOf(';', c1);\n      cur_img_mime = _via_current_image.src.substring(c1 + 1, c2);\n    }\n\n    // extract image data from canvas\n    var saved_img = c.toDataURL(cur_img_mime);\n    saved_img.replace(cur_img_mime, \"image/octet-stream\");\n\n    // simulate user click to trigger download of image\n    var a      = document.createElement('a');\n    a.href     = saved_img;\n    a.target   = '_blank';\n    a.download = _via_current_image_filename;\n\n    // simulate a mouse click event\n    var event = new MouseEvent('click', {\n      view: window,\n      bubbles: true,\n      cancelable: true\n    });\n\n    a.dispatchEvent(event);\n  }\n}\n\n//\n// Display area content\n//\nfunction clear_display_area() {\n  var panels = document.getElementsByClassName('display_area_content');\n  var i;\n  for ( i = 0; i < panels.length; ++i ) {\n    panels[i].classList.add('display_none');\n  }\n}\n\nfunction is_content_name_valid(content_name) {\n  var e;\n  for ( e in VIA_DISPLAY_AREA_CONTENT_NAME ) {\n    if ( VIA_DISPLAY_AREA_CONTENT_NAME[e] === content_name ) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction show_home_panel() {\n  show_single_image_view();\n}\n\nfunction set_display_area_content(content_name) {\n  if ( is_content_name_valid(content_name) ) {\n    _via_display_area_content_name_prev = _via_display_area_content_name;\n    clear_display_area();\n    var p = document.getElementById(content_name);\n    p.classList.remove('display_none');\n    _via_display_area_content_name = content_name;\n  }\n}\n\nfunction show_single_image_view() {\n  if (_via_current_image_loaded) {\n    img_fn_list_clear_all_style();\n    _via_show_img(_via_image_index);\n    set_display_area_content(VIA_DISPLAY_AREA_CONTENT_NAME.IMAGE);\n    annotation_editor_update_content();\n\n    var p = document.getElementById('toolbar_image_grid_toggle');\n    p.firstChild.setAttribute('xlink:href', '#icon_gridon');\n    p.childNodes[1].innerHTML = 'Switch to Image Grid View';\n  } else {\n    set_display_area_content(VIA_DISPLAY_AREA_CONTENT_NAME.PAGE_START_INFO);\n  }\n}\n\nfunction show_image_grid_view() {\n  if (_via_current_image_loaded) {\n    img_fn_list_clear_all_style();\n    set_display_area_content(VIA_DISPLAY_AREA_CONTENT_NAME.IMAGE_GRID);\n    image_grid_toolbar_update_group_by_select();\n\n    if ( _via_image_grid_group_var.length === 0 ) {\n      image_grid_show_all_project_images();\n    }\n    annotation_editor_update_content();\n\n    var p = document.getElementById('toolbar_image_grid_toggle');\n    p.firstChild.setAttribute('xlink:href', '#icon_gridoff');\n    p.childNodes[1].innerHTML = 'Switch to Single Image View';\n\n    //edit_file_metadata_in_annotation_editor();\n  } else {\n    set_display_area_content(VIA_DISPLAY_AREA_CONTENT_NAME.PAGE_START_INFO);\n  }\n}\n\n//\n// Handlers for top navigation bar\n//\nfunction sel_local_images() {\n  // source: https://developer.mozilla.org/en-US/docs/Using_files_from_web_applications\n  if (invisible_file_input) {\n    invisible_file_input.setAttribute('multiple', 'multiple');\n    invisible_file_input.accept   = '.jpg,.jpeg,.png,.bmp';\n    invisible_file_input.onchange = project_file_add_local;\n    invisible_file_input.click();\n  }\n}\n\n// invoked by menu-item buttons in HTML UI\nfunction download_all_region_data(type, file_extension) {\n  if ( typeof(file_extension) === 'undefined' ) {\n    file_extension = type;\n  }\n  // Javascript strings (DOMString) is automatically converted to utf-8\n  // see: https://developer.mozilla.org/en-US/docs/Web/API/Blob/Blob\n  pack_via_metadata(type).then( function(data) {\n    var blob_attr = {type: 'text/'+file_extension+';charset=utf-8'};\n    var all_region_data_blob = new Blob(data, blob_attr);\n\n    var filename = 'via_export';\n    if(typeof(_via_settings) !== 'undefined' &&\n       _via_settings.hasOwnProperty('project') &&\n       _via_settings['project']['name'] !== '') {\n      filename = _via_settings['project']['name'];\n    }\n    if ( file_extension !== 'csv' || file_extension !== 'json' ) {\n      filename += '_' + type + '.' + file_extension;\n    }\n    save_data_to_local_file(all_region_data_blob, filename);\n  }.bind(this), function(err) {\n    show_message('Failed to download data: [' + err + ']');\n  }.bind(this));\n}\n\nfunction sel_local_data_file(type) {\n  if (invisible_file_input) {\n    switch(type) {\n    case 'annotations':\n      invisible_file_input.accept='.csv,.json';\n      invisible_file_input.onchange = import_annotations_from_file;\n      break;\n\n    case 'annotations_coco':\n      invisible_file_input.accept='.json';\n      invisible_file_input.onchange = load_coco_annotations_json_file;\n      break;\n\n    case 'files_url':\n      invisible_file_input.accept='';\n      invisible_file_input.onchange = import_files_url_from_file;\n      break;\n\n    case 'attributes':\n      invisible_file_input.accept='json';\n      invisible_file_input.onchange = project_import_attributes_from_file;\n      break;\n\n    default:\n      console.log('sel_local_data_file() : unknown type ' + type);\n      return;\n    }\n    invisible_file_input.removeAttribute('multiple');\n    invisible_file_input.click();\n  }\n}\n\n//\n// Data Importer\n//\nfunction import_files_url_from_file(event) {\n  var selected_files = event.target.files;\n  var i, file;\n  for ( i = 0; i < selected_files.length; ++i ) {\n    file = selected_files[i];\n    load_text_file(file, import_files_url_from_csv);\n  }\n}\n\nfunction import_annotations_from_file(event) {\n  var selected_files = event.target.files;\n  var i, file;\n  for ( i = 0; i < selected_files.length; ++i ) {\n    file = selected_files[i];\n    switch ( file.type ) {\n    case '': // Fall-through // Windows 10: Firefox and Chrome do not report filetype\n      show_message('File type for ' + file.name + ' cannot be determined! Assuming text/plain.');\n    case 'text/plain': // Fall-through\n    case 'application/vnd.ms-excel': // Fall-through // @todo: filetype of VIA csv annotations in Windows 10 , fix this (reported by @Eli Walker)\n    case 'text/csv':\n      load_text_file(file, import_annotations_from_csv);\n      break;\n\n    case 'text/json': // Fall-through\n    case 'application/json':\n      load_text_file(file, import_annotations_from_json);\n      break;\n\n    default:\n      show_message('Annotations cannot be imported from file of type ' + file.type);\n      break;\n    }\n  }\n}\n\nfunction load_coco_annotations_json_file(event) {\n  load_text_file(event.target.files[0], import_coco_annotations_from_json);\n}\n\nfunction import_annotations_from_csv(data) {\n  return new Promise( function(ok_callback, err_callback) {\n    if ( data === '' || typeof(data) === 'undefined') {\n      err_callback();\n    }\n\n    var region_import_count = 0;\n    var malformed_csv_lines_count = 0;\n    var file_added_count = 0;\n\n    var line_split_regex = new RegExp('\\n|\\r|\\r\\n', 'g');\n    var csvdata = data.split(line_split_regex);\n\n    var parsed_header = parse_csv_header_line(csvdata[0]);\n    if ( ! parsed_header.is_header ) {\n      show_message('Header line missing in the CSV file');\n      err_callback();\n      return;\n    }\n\n    var n = csvdata.length;\n    var i;\n    var first_img_id = '';\n    for ( i = 1; i < n; ++i ) {\n      // ignore blank lines\n      if (csvdata[i].charAt(0) === '\\n' || csvdata[i].charAt(0) === '') {\n        continue;\n      }\n\n      var d = parse_csv_line(csvdata[i]);\n\n      // check if csv line was malformed\n      if ( d.length !== parsed_header.csv_column_count ) {\n        malformed_csv_lines_count += 1;\n        continue;\n      }\n\n      var filename = d[parsed_header.filename_index];\n      var size     = d[parsed_header.size_index];\n      var img_id   = _via_get_image_id(filename, size);\n\n      // check if file is already present in this project\n      if ( ! _via_img_metadata.hasOwnProperty(img_id) ) {\n        img_id = project_add_new_file(filename, size);\n        if ( _via_settings.core.default_filepath === '' ) {\n          _via_img_src[img_id] = filename;\n        } else {\n          _via_file_resolve_file_to_default_filepath(img_id);\n        }\n        file_added_count += 1;\n\n        if ( first_img_id === '' ) {\n          first_img_id = img_id;\n        }\n      }\n\n      // copy file attributes\n      if ( d[parsed_header.file_attr_index] !== '\"{}\"') {\n        var fattr = d[parsed_header.file_attr_index];\n        fattr     = remove_prefix_suffix_quotes( fattr );\n        fattr     = unescape_from_csv( fattr );\n\n        var m = json_str_to_map( fattr );\n        for( var key in m ) {\n          _via_img_metadata[img_id].file_attributes[key] = m[key];\n\n          // add this file attribute to _via_attributes\n          if ( ! _via_attributes['file'].hasOwnProperty(key) ) {\n            _via_attributes['file'][key] = { 'type':'text' };\n          }\n        }\n      }\n\n      var region_i = new file_region();\n      // copy regions shape attributes\n      if ( d[parsed_header.region_shape_attr_index] !== '\"{}\"' ) {\n        var sattr = d[parsed_header.region_shape_attr_index];\n        sattr     = remove_prefix_suffix_quotes( sattr );\n        sattr     = unescape_from_csv( sattr );\n\n        var m = json_str_to_map( sattr );\n        for ( var key in m ) {\n          region_i.shape_attributes[key] = m[key];\n        }\n      }\n\n      // copy region attributes\n      if ( d[parsed_header.region_attr_index] !== '\"{}\"' ) {\n        var rattr = d[parsed_header.region_attr_index];\n        rattr     = remove_prefix_suffix_quotes( rattr );\n        rattr     = unescape_from_csv( rattr );\n\n        var m = json_str_to_map( rattr );\n        for ( var key in m ) {\n          region_i.region_attributes[key] = m[key];\n\n          // add this region attribute to _via_attributes\n          if ( ! _via_attributes['region'].hasOwnProperty(key) ) {\n            _via_attributes['region'][key] = { 'type':'text' };\n          }\n        }\n      }\n\n      // add regions only if they are present\n      if (Object.keys(region_i.shape_attributes).length > 0 ||\n          Object.keys(region_i.region_attributes).length > 0 ) {\n        _via_img_metadata[img_id].regions.push(region_i);\n        region_import_count += 1;\n      }\n    }\n    show_message('Import Summary : [' + file_added_count + '] new files, ' +\n                 '[' + region_import_count + '] regions, ' +\n                 '[' + malformed_csv_lines_count  + '] malformed csv lines.');\n\n    if ( file_added_count ) {\n      update_img_fn_list();\n    }\n\n    if ( _via_current_image_loaded ) {\n      if ( region_import_count ) {\n        update_attributes_update_panel();\n        annotation_editor_update_content();\n        _via_load_canvas_regions(); // image to canvas space transform\n        _via_redraw_reg_canvas();\n        _via_reg_canvas.focus();\n      }\n    } else {\n      if ( file_added_count ) {\n        var first_img_index = _via_image_id_list.indexOf(first_img_id);\n        _via_show_img( first_img_index );\n      }\n    }\n    ok_callback([file_added_count, region_import_count, malformed_csv_lines_count]);\n  });\n}\n\nfunction parse_csv_header_line(line) {\n  var header_via_10x = '#filename,file_size,file_attributes,region_count,region_id,region_shape_attributes,region_attributes'; // VIA versions 1.0.x\n  var header_via_11x = 'filename,file_size,file_attributes,region_count,region_id,region_shape_attributes,region_attributes'; // VIA version 1.1.x\n\n  if ( line === header_via_10x || line === header_via_11x ) {\n    return { 'is_header':true,\n             'filename_index': 0,\n             'size_index': 1,\n             'file_attr_index': 2,\n             'region_shape_attr_index': 5,\n             'region_attr_index': 6,\n             'csv_column_count': 7\n           }\n  } else {\n    return { 'is_header':false };\n  }\n}\n\n// see http://cocodataset.org/#format-data\nfunction import_coco_annotations_from_json(data_str) {\n  return new Promise( function(ok_callback, err_callback) {\n    if (data_str === '' || typeof(data_str) === 'undefined') {\n      show_message('Empty file');\n      return;\n    }\n    var coco = JSON.parse(data_str);\n    if( !coco.hasOwnProperty('info') ||\n        !coco.hasOwnProperty('categories') ||\n        !coco.hasOwnProperty('annotations') ||\n        !coco.hasOwnProperty('images') ) {\n      show_message('File does not contain valid annotations in COCO format.');\n      return;\n    }\n\n    // create _via_attributes from coco['categories']\n    var category_id_to_attribute_name = {};\n    for( var i in coco['categories'] ) {\n      var sc    = coco['categories'][i]['supercategory'];\n      var cid   = coco['categories'][i]['id'];\n      var cname = coco['categories'][i]['name'];\n      if( !_via_attributes['region'].hasOwnProperty(sc)) {\n        _via_attributes['region'][sc] = {'type':VIA_ATTRIBUTE_TYPE.RADIO,\n                                         'description':'coco[\"categories\"][' + i + ']=' + JSON.stringify(coco['categories'][i]),\n                                         'options':{},\n                                         'default_options':{}\n                                        };\n      }\n      _via_attributes['region'][sc]['options'][cid] = cname;\n      category_id_to_attribute_name[cid] = sc;\n    }\n    // if more than 5 options, convert the attribute type to DROPDOWN\n    for( var attr_name in _via_attributes['region'] ) {\n      if( Object.keys(_via_attributes['region'][attr_name]['options']).length > 5 ) {\n        _via_attributes['region'][attr_name]['type'] = VIA_ATTRIBUTE_TYPE.DROPDOWN;\n      }\n    }\n\n    // create an map of image_id and their annotations\n    var image_id_to_annotation_index = {};\n    for ( var annotation_index in coco['annotations'] ) {\n      var coco_image_id = coco.annotations[annotation_index]['image_id'];\n      if ( !image_id_to_annotation_index.hasOwnProperty(coco_image_id) ) {\n        image_id_to_annotation_index[coco_image_id] = [];\n      }\n      image_id_to_annotation_index[coco_image_id].push( annotation_index );\n    }\n\n    // add all files and annotations\n    _via_img_metadata = {};\n    _via_image_id_list = [];\n    _via_image_filename_list = [];\n    _via_img_count = 0;\n    var imported_file_count = 0;\n    var imported_region_count = 0;\n    for ( var coco_img_index in coco['images'] ) {\n      var coco_img_id = coco['images'][coco_img_index]['id'];\n      var filename;\n      if ( coco.images[coco_img_index].hasOwnProperty('coco_url') &&\n           coco.images[coco_img_index]['coco_url'] !== \"\") {\n        filename = coco.images[coco_img_index]['coco_url'];\n      } else {\n        filename = coco.images[coco_img_index]['file_name'];\n      }\n      _via_img_metadata[coco_img_id] = { 'filename':filename,\n                                         'size'    :-1,\n                                         'regions' :[],\n                                         'file_attributes': {\n                                           'width' :coco.images[coco_img_index]['width'],\n                                           'height':coco.images[coco_img_index]['height']\n                                         },\n                                       };\n      _via_image_id_list.push(coco_img_id);\n      _via_image_filename_list.push(filename);\n      _via_img_count = _via_img_count + 1;\n\n      // add all annotations associated with this file\n      if ( image_id_to_annotation_index.hasOwnProperty(coco_img_id) ) {\n        for ( var i in image_id_to_annotation_index[coco_img_id] ) {\n          var annotation_i = coco['annotations'][ image_id_to_annotation_index[coco_img_id][i] ];\n          var bbox_from_polygon = polygon_to_bbox(annotation_i['segmentation']);\n\n          // ensure rectangles get imported as rectangle (and not as polygon)\n          var is_rectangle = true;\n          for (var j = 0; i < annotation_i['bbox'].length; ++j) {\n            if (annotation_i['bbox'][j] !== bbox_from_polygon[j]) {\n              is_rectangle = false;\n              break;\n            }\n          }\n\n          var region_i = { 'shape_attributes': {}, 'region_attributes': {} };\n          var attribute_name = category_id_to_attribute_name[ annotation_i['category_id'] ];\n          var attribute_value = annotation_i['category_id'].toString();\n          region_i['region_attributes'][attribute_name] = attribute_value;\n\n          if ( annotation_i['segmentation'][0].length === 8 && is_rectangle ) {\n            region_i['shape_attributes'] = { 'name':'rect',\n                                             'x': annotation_i['bbox'][0],\n                                             'y': annotation_i['bbox'][1],\n                                             'width': annotation_i['bbox'][2],\n                                             'height': annotation_i['bbox'][3]};\n          } else {\n            region_i['shape_attributes'] = { 'name':'polygon',\n                                             'all_points_x':[],\n                                             'all_points_y':[]};\n            for ( var j = 0; j < annotation_i['segmentation'][0].length; j = j + 2 ) {\n              region_i['shape_attributes']['all_points_x'].push( annotation_i['segmentation'][0][j] );\n              region_i['shape_attributes']['all_points_y'].push( annotation_i['segmentation'][0][j+1] );\n            }\n          }\n          _via_img_metadata[coco_img_id]['regions'].push(region_i);\n          imported_region_count = imported_region_count + 1;\n        }\n      }\n    }\n    show_message('Import Summary : [' + _via_img_count + '] new files, ' +\n                 '[' + imported_region_count + '] regions.');\n\n    if(_via_img_count) {\n      update_img_fn_list();\n    }\n\n    if(_via_current_image_loaded) {\n      if(imported_region_count) {\n        update_attributes_update_panel();\n        annotation_editor_update_content();\n        _via_load_canvas_regions(); // image to canvas space transform\n        _via_redraw_reg_canvas();\n        _via_reg_canvas.focus();\n      }\n    } else {\n      if(_via_img_count) {\n        _via_show_img(0);\n      }\n    }\n    ok_callback([_via_img_count, imported_region_count, 0]);\n  });\n}\n\nfunction import_annotations_from_json(data_str) {\n  return new Promise( function(ok_callback, err_callback) {\n    if (data_str === '' || typeof(data_str) === 'undefined') {\n      return;\n    }\n\n    var d = JSON.parse(data_str);\n    var region_import_count = 0;\n    var file_added_count    = 0;\n    var malformed_entries_count    = 0;\n    for (var img_id in d) {\n      if ( ! _via_img_metadata.hasOwnProperty(img_id) ) {\n        project_add_new_file(d[img_id].filename, d[img_id].size, img_id);\n        if ( _via_settings.core.default_filepath === '' ) {\n          _via_img_src[img_id] = d[img_id].filename;\n        } else {\n          _via_file_resolve_file_to_default_filepath(img_id);\n        }\n        file_added_count += 1;\n      }\n\n      // copy file attributes\n      for ( var key in d[img_id].file_attributes ) {\n        if ( key === '' ) {\n          continue;\n        }\n\n        _via_img_metadata[img_id].file_attributes[key] = d[img_id].file_attributes[key];\n\n        // add this file attribute to _via_attributes\n        if ( ! _via_attributes['file'].hasOwnProperty(key) ) {\n          _via_attributes['file'][key] = { 'type':'text' };\n        }\n      }\n\n      // copy regions\n      var regions = d[img_id].regions;\n      for ( var i in regions ) {\n        var region_i = new file_region();\n        for ( var sid in regions[i].shape_attributes ) {\n          region_i.shape_attributes[sid] = regions[i].shape_attributes[sid];\n        }\n        for ( var rid in regions[i].region_attributes ) {\n          if ( rid === '' ) {\n            continue;\n          }\n\n          region_i.region_attributes[rid] = regions[i].region_attributes[rid];\n\n          // add this region attribute to _via_attributes\n          if ( ! _via_attributes['region'].hasOwnProperty(rid) ) {\n            _via_attributes['region'][rid] = { 'type':'text' };\n          }\n        }\n\n        // add regions only if they are present\n        if ( Object.keys(region_i.shape_attributes).length > 0 ||\n             Object.keys(region_i.region_attributes).length > 0 ) {\n          _via_img_metadata[img_id].regions.push(region_i);\n          region_import_count += 1;\n        }\n      }\n    }\n    show_message('Import Summary : [' + file_added_count + '] new files, ' +\n                 '[' + region_import_count + '] regions, ' +\n                 '[' + malformed_entries_count + '] malformed entries.');\n\n    if ( file_added_count ) {\n      update_img_fn_list();\n    }\n\n    if ( _via_current_image_loaded ) {\n      if ( region_import_count ) {\n        update_attributes_update_panel();\n        annotation_editor_update_content();\n        _via_load_canvas_regions(); // image to canvas space transform\n        _via_redraw_reg_canvas();\n        _via_reg_canvas.focus();\n      }\n    } else {\n      if ( file_added_count ) {\n        _via_show_img(0);\n      }\n    }\n\n    ok_callback([file_added_count, region_import_count, malformed_entries_count]);\n  });\n}\n\n// assumes that csv line follows the RFC 4180 standard\n// see: https://en.wikipedia.org/wiki/Comma-separated_values\nfunction parse_csv_line(s, field_separator) {\n  if (typeof(s) === 'undefined' || s.length === 0 ) {\n    return [];\n  }\n\n  if (typeof(field_separator) === 'undefined') {\n    field_separator = ',';\n  }\n  var double_quote_seen = false;\n  var start = 0;\n  var d = [];\n\n  var i = 0;\n  while ( i < s.length) {\n    if (s.charAt(i) === field_separator) {\n      if (double_quote_seen) {\n        // field separator inside double quote is ignored\n        i = i + 1;\n      } else {\n        //var part = s.substr(start, i - start);\n        d.push( s.substr(start, i - start) );\n        start = i + 1;\n        i = i + 1;\n      }\n    } else {\n      if (s.charAt(i) === '\"') {\n        if (double_quote_seen) {\n          if (s.charAt(i+1) === '\"') {\n            // ignore escaped double quotes\n            i = i + 2;\n          } else {\n            // closing of double quote\n            double_quote_seen = false;\n            i = i + 1;\n          }\n        } else {\n          double_quote_seen = true;\n          start = i;\n          i = i + 1;\n        }\n      } else {\n        i = i + 1;\n      }\n    }\n\n  }\n  // extract the last field (csv rows have no trailing comma)\n  d.push( s.substr(start) );\n  return d;\n}\n\n// s = '{\"name\":\"rect\",\"x\":188,\"y\":90,\"width\":243,\"height\":233}'\nfunction json_str_to_map(s) {\n  if (typeof(s) === 'undefined' || s.length === 0 ) {\n    return {};\n  }\n\n  return JSON.parse(s);\n}\n\n// ensure the exported json string conforms to RFC 4180\n// see: https://en.wikipedia.org/wiki/Comma-separated_values\nfunction map_to_json(m) {\n  var s = [];\n  for ( var key in m ) {\n    var v   = m[key];\n    var si  = JSON.stringify(key);\n    si += VIA_CSV_KEYVAL_SEP;\n    si += JSON.stringify(v);\n    s.push( si );\n  }\n  return '{' + s.join(VIA_CSV_SEP) + '}';\n}\n\nfunction escape_for_csv(s) {\n  return s.replace(/[\"]/g, '\"\"');\n}\n\nfunction unescape_from_csv(s) {\n  return s.replace(/\"\"/g, '\"');\n}\n\nfunction remove_prefix_suffix_quotes(s) {\n  if ( s.charAt(0) === '\"' && s.charAt(s.length-1) === '\"' ) {\n    return s.substr(1, s.length-2);\n  } else {\n    return s;\n  }\n}\n\nfunction clone_image_region(r0) {\n  var r1 = new file_region();\n\n  // copy shape attributes\n  for ( var key in r0.shape_attributes ) {\n    r1.shape_attributes[key] = clone_value(r0.shape_attributes[key]);\n  }\n\n  // copy region attributes\n  for ( var key in r0.region_attributes ) {\n    r1.region_attributes[key] = clone_value(r0.region_attributes[key]);\n  }\n  return r1;\n}\n\nfunction clone_value(value) {\n  if ( typeof(value) === 'object' ) {\n    if ( Array.isArray(value) ) {\n      return value.slice(0);\n    } else {\n      var copy = {};\n      for ( var p in value ) {\n        if ( value.hasOwnProperty(p) ) {\n          copy[p] = clone_value(value[p]);\n        }\n      }\n      return copy;\n    }\n  }\n  return value;\n}\n\nfunction _via_get_image_id(filename, size) {\n  if ( typeof(size) === 'undefined' ) {\n    return filename;\n  } else {\n    return filename + size;\n  }\n}\n\nfunction load_text_file(text_file, callback_function) {\n  if (text_file) {\n    var text_reader = new FileReader();\n    text_reader.addEventListener( 'progress', function(e) {\n      show_message('Loading data from file : ' + text_file.name + ' ... ');\n    }, false);\n\n    text_reader.addEventListener( 'error', function() {\n      show_message('Error loading data text file :  ' + text_file.name + ' !');\n      callback_function('');\n    }, false);\n\n    text_reader.addEventListener( 'load', function() {\n      callback_function(text_reader.result);\n    }, false);\n    text_reader.readAsText(text_file, 'utf-8');\n  }\n}\n\nfunction import_files_url_from_csv(data) {\n  return new Promise( function(ok_callback, err_callback) {\n    if ( data === '' || typeof(data) === 'undefined') {\n      err_callback();\n    }\n\n    var malformed_url_count = 0;\n    var url_added_count = 0;\n\n    var line_split_regex = new RegExp('\\n|\\r|\\r\\n', 'g');\n    var csvdata = data.split(line_split_regex);\n\n    var percent_completed = 0;\n    var n = csvdata.length;\n    var i;\n    var img_id;\n    var first_img_id = '';\n    for ( i=0; i < n; ++i ) {\n      // ignore blank lines\n      if (csvdata[i].charAt(0) === '\\n' || csvdata[i].charAt(0) === '') {\n        malformed_url_count += 1;\n        continue;\n      } else {\n        img_id = project_file_add_url(csvdata[i]);\n        if ( first_img_id === '' ) {\n          first_img_id = img_id;\n        }\n        url_added_count += 1;\n      }\n    }\n    show_message('Added ' + url_added_count + ' files to project');\n    if ( url_added_count ) {\n      var first_img_index = _via_image_id_list.indexOf(first_img_id);\n      _via_show_img(first_img_index);\n      update_img_fn_list();\n    }\n  });\n}\n\n//\n// Data Exporter\n//\nfunction pack_via_metadata(return_type) {\n  return new Promise( function(ok_callback, err_callback) {\n    if( return_type === 'csv' ) {\n      var csvdata = [];\n      var csvheader = 'filename,file_size,file_attributes,region_count,region_id,region_shape_attributes,region_attributes';\n      csvdata.push(csvheader);\n\n      for ( var image_id in _via_img_metadata ) {\n        var fattr = map_to_json( _via_img_metadata[image_id].file_attributes );\n        fattr = escape_for_csv( fattr );\n\n        var prefix = '\\n' + _via_img_metadata[image_id].filename;\n        prefix += ',' + _via_img_metadata[image_id].size;\n        prefix += ',\"' + fattr + '\"';\n\n        var r = _via_img_metadata[image_id].regions;\n\n        if ( r.length !==0 ) {\n          for ( var i = 0; i < r.length; ++i ) {\n            var csvline = [];\n            csvline.push(prefix);\n            csvline.push(r.length);\n            csvline.push(i);\n\n            var sattr = map_to_json( r[i].shape_attributes );\n            sattr = '\"' +  escape_for_csv( sattr ) + '\"';\n            csvline.push(sattr);\n\n            var rattr = map_to_json( r[i].region_attributes );\n            rattr = '\"' +  escape_for_csv( rattr ) + '\"';\n            csvline.push(rattr);\n            csvdata.push( csvline.join(VIA_CSV_SEP) );\n          }\n        } else {\n          // @todo: reconsider this practice of adding an empty entry\n          csvdata.push(prefix + ',0,0,\"{}\",\"{}\"');\n        }\n      }\n      ok_callback(csvdata);\n    }\n\n    // see http://cocodataset.org/#format-data\n    if( return_type === 'coco' ) {\n      img_stat_set_all().then( function(ok) {\n        var coco = export_project_to_coco_format();\n        ok_callback( [ coco ] );\n      }.bind(this), function(err) {\n        err_callback(err);\n      }.bind(this));\n    } else {\n      // default format is JSON\n      ok_callback( [ JSON.stringify(_via_img_metadata) ] );\n    }\n  }.bind(this));\n}\n\nfunction export_project_to_coco_format() {\n  var coco = { 'info':{}, 'images':[], 'annotations':[], 'licenses':[], 'categories':[] };\n  coco['info'] = { 'year': new Date().getFullYear(),\n                   'version': '1.0',\n                   'description': 'VIA project exported to COCO format using VGG Image Annotator (http://www.robots.ox.ac.uk/~vgg/software/via/)',\n                   'contributor': '',\n                   'url': 'http://www.robots.ox.ac.uk/~vgg/software/via/',\n                   'date_created': new Date().toString(),\n                 };\n  coco['licenses'] = [ {'id':0, 'name':'Unknown License', 'url':''} ]; // indicates that license is unknown\n\n  var skipped_annotation_count = 0;\n  // We want to ensure that a COCO project imported in VIA and then exported again back to\n  // COCO format using VIA retains the image_id and category_id present in the original COCO project.\n  // A VIA project that has been created by importing annotations from a COCO project contains\n  // unique image_id of type integer and contains all unique option id. If we detect this, we reuse\n  // the existing image_id and category_id, otherwise we assign a new unique id sequentially.\n  // Currently, it is not possible to preserve the annotation_id\n  var assign_unique_id = false;\n  for(var img_id in _via_img_metadata) {\n    if(Number.isNaN(parseInt(img_id))) {\n      assign_unique_id = true; // since COCO only supports image_id of type integer, we cannot reuse the VIA's image-id\n      break;\n    }\n  }\n  if(assign_unique_id) {\n    // check if all the options have unique id\n    var attribute_option_id_list = [];\n    for(var attr_name in _via_attributes) {\n      if( !VIA_COCO_EXPORT_ATTRIBUTE_TYPE.includes(_via_attributes[attr_name]['type']) ) {\n        continue; // skip this attribute as it will not be included in COCO export\n      }\n\n      for(var attr_option_id in _via_attributes[attr_name]['options']) {\n        if(attribute_option_id_list.includes(attr_option_id) ||\n           Number.isNaN(parseInt(attr_option_id)) ) {\n          assign_unique_id = true;\n          break;\n        } else {\n          attribute_option_id_list.push(assign_unique_id);\n        }\n      }\n    }\n  }\n\n  // add categories\n  var attr_option_id_list = [];\n  var attr_option_id_to_category_id = {};\n  var unique_category_id = 1;\n  for(var attr_name in _via_attributes['region']) {\n    if( VIA_COCO_EXPORT_ATTRIBUTE_TYPE.includes(_via_attributes['region'][attr_name]['type']) ) {\n      for(var attr_option_id in _via_attributes['region'][attr_name]['options']) {\n        var category_id;\n        if(assign_unique_id) {\n          category_id = unique_category_id;\n          unique_category_id = unique_category_id + 1;\n        } else {\n          category_id = parseInt(attr_option_id);\n        }\n        coco['categories'].push({\n          'supercategory':attr_name,\n          'id':category_id,\n          'name':_via_attributes['region'][attr_name]['options'][attr_option_id]\n        });\n        attr_option_id_to_category_id[attr_option_id] = category_id;\n      }\n    }\n  }\n\n  // add files and all their associated annotations\n  var annotation_id = 1;\n  var unique_img_id = 1;\n  for( var img_index in _via_image_id_list ) {\n    var img_id = _via_image_id_list[img_index];\n    var file_src = _via_settings['core']['default_filepath'] + _via_img_metadata[img_id].filename;\n    if ( _via_img_fileref[img_id] instanceof File ) {\n      file_src = _via_img_fileref[img_id].filename;\n    }\n\n    var coco_img_id;\n    if(assign_unique_id) {\n      coco_img_id = unique_img_id;\n      unique_img_id = unique_img_id + 1;\n    } else {\n      coco_img_id = parseInt(img_id);\n    }\n\n    coco['images'].push( {\n      'id':coco_img_id,\n      'width':_via_img_stat[img_index][0],\n      'height':_via_img_stat[img_index][1],\n      'file_name':_via_img_metadata[img_id].filename,\n      'license':0,\n      'flickr_url':file_src,\n      'coco_url':file_src,\n      'date_captured':'',\n    } );\n\n    // add all annotations associated with this file\n    for( var rindex in _via_img_metadata[img_id].regions ) {\n      var region = _via_img_metadata[img_id].regions[rindex];\n      if( !VIA_COCO_EXPORT_RSHAPE.includes(region.shape_attributes['name']) ) {\n        skipped_annotation_count = skipped_annotation_count + 1;\n        continue; // skip this region as COCO does not allow it\n      }\n\n      var coco_annotation = via_region_shape_to_coco_annotation(region.shape_attributes);\n      coco_annotation['id'] = annotation_id;\n      coco_annotation['image_id'] = coco_img_id;\n\n      var region_aid_list = Object.keys(region['region_attributes']);\n      for(var region_attribute_id in region['region_attributes']) {\n        var region_attribute_value = region['region_attributes'][region_attribute_id];\n        if(attr_option_id_to_category_id.hasOwnProperty(region_attribute_value)) {\n          coco_annotation['category_id'] = attr_option_id_to_category_id[region_attribute_value];\n          coco['annotations'].push(coco_annotation);\n          annotation_id = annotation_id + 1;\n        } else {\n          skipped_annotation_count = skipped_annotation_count + 1;\n          continue; // skip attribute value not supported by COCO format\n        }\n      }\n    }\n  }\n\n  show_message('Skipped ' + skipped_annotation_count + ' annotations. COCO format only supports the following attribute types: ' + JSON.stringify(VIA_COCO_EXPORT_ATTRIBUTE_TYPE) + ' and region shapes: ' + JSON.stringify(VIA_COCO_EXPORT_RSHAPE));\n  return [ JSON.stringify(coco) ];\n}\n\nfunction via_region_shape_to_coco_annotation(shape_attributes) {\n  var annotation = { 'segmentation':[[]], 'area':[], 'bbox':[], 'iscrowd':0 };\n\n  switch(shape_attributes['name']) {\n  case 'rect':\n    var x0 = shape_attributes['x'];\n    var y0 = shape_attributes['y'];\n    var w  = parseInt(shape_attributes['width']);\n    var h  = parseInt(shape_attributes['height']);\n    var x1 = x0 + w;\n    var y1 = y0 + h;\n    annotation['segmentation'][0] = [x0, y0, x1, y0, x1, y1, x0, y1];\n    annotation['area'] =  w * h ;\n\n    annotation['bbox'] = [x0, y0, w, h];\n    break;\n\n  case 'point':\n    var cx = shape_attributes['cx'];\n    var cy = shape_attributes['cy'];\n    // 2 is for visibility - currently set to always inside segmentation.\n    // see Keypoint Detection: http://cocodataset.org/#format-data\n    annotation['keypoints'] = [cx, cy, 2];\n    annotation['num_keypoints'] = 1;\n    break;\n\n  case 'circle':\n    var a,b;\n    a = shape_attributes['r'];\n    b = shape_attributes['r'];\n    var theta_to_radian = Math.PI/180;\n\n    for ( var theta = 0; theta < 360; theta = theta + VIA_POLYGON_SEGMENT_SUBTENDED_ANGLE ) {\n      var theta_radian = theta * theta_to_radian;\n      var x = shape_attributes['cx'] + a * Math.cos(theta_radian);\n      var y = shape_attributes['cy'] + b * Math.sin(theta_radian);\n      annotation['segmentation'][0].push( fixfloat(x), fixfloat(y) );\n    }\n    annotation['bbox'] = polygon_to_bbox(annotation['segmentation'][0]);\n    annotation['area'] = annotation['bbox'][2] * annotation['bbox'][3];\n    break;\n\n  case 'ellipse':\n    var a,b;\n    a = shape_attributes['rx'];\n    b = shape_attributes['ry'];\n    var rotation = 0;\n    // older version of VIA2 did not support rotated ellipse and hence 'theta' attribute may not be available\n    if( shape_attributes.hasOwnProperty('theta') ) {\n      rotation = shape_attributes['theta'];\n    }\n\n    var theta_to_radian = Math.PI/180;\n\n    for ( var theta = 0; theta < 360; theta = theta + VIA_POLYGON_SEGMENT_SUBTENDED_ANGLE ) {\n      var theta_radian = theta * theta_to_radian;\n      var x = shape_attributes['cx'] +\n              ( a * Math.cos(theta_radian) * Math.cos(rotation) ) -\n              ( b * Math.sin(theta_radian) * Math.sin(rotation) );\n      var y = shape_attributes['cy'] +\n              ( a * Math.cos(theta_radian) * Math.sin(rotation) ) +\n              ( b * Math.sin(theta_radian) * Math.cos(rotation) );\n      annotation['segmentation'][0].push( fixfloat(x), fixfloat(y) );\n    }\n    annotation['bbox'] = polygon_to_bbox(annotation['segmentation'][0]);\n    annotation['area'] = annotation['bbox'][2] * annotation['bbox'][3];\n    break;\n\n  case 'polygon':\n    annotation['segmentation'][0] = [];\n    var x0 = +Infinity;\n    var y0 = +Infinity;\n    var x1 = -Infinity;\n    var y1 = -Infinity;\n    for ( var i in shape_attributes['all_points_x'] ) {\n      annotation['segmentation'][0].push( shape_attributes['all_points_x'][i] );\n      annotation['segmentation'][0].push( shape_attributes['all_points_y'][i] );\n      if ( shape_attributes['all_points_x'][i] < x0 ) {\n        x0 = shape_attributes['all_points_x'][i];\n      }\n      if ( shape_attributes['all_points_y'][i] < y0 ) {\n        y0 = shape_attributes['all_points_y'][i];\n      }\n      if ( shape_attributes['all_points_x'][i] > x1 ) {\n        x1 = shape_attributes['all_points_x'][i];\n      }\n      if ( shape_attributes['all_points_y'][i] > y1 ) {\n        y1 = shape_attributes['all_points_y'][i];\n      }\n    }\n    var w = x1 - x0;\n    var h = y1 - y0;\n    annotation['bbox'] = [x0, y0, w, h];\n    annotation['area'] = w * h; // approximate area\n  }\n  return annotation;\n}\n\nfunction save_data_to_local_file(data, filename) {\n  var a      = document.createElement('a');\n  a.href     = URL.createObjectURL(data);\n  a.download = filename;\n\n  // simulate a mouse click event\n  var event = new MouseEvent('click', {\n    view: window,\n    bubbles: true,\n    cancelable: true\n  });\n  a.dispatchEvent(event);\n\n  // @todo: replace a.dispatchEvent() with a.click()\n  // a.click() based trigger is supported in Chrome 70 and Safari 11/12 but **not** in Firefox 63\n  //a.click();\n}\n\n//\n// Maintainers of user interface\n//\n\nfunction init_message_panel() {\n  var p = document.getElementById('message_panel');\n  p.addEventListener('mousedown', function() {\n    this.style.display = 'none';\n  }, false);\n  p.addEventListener('mouseover', function() {\n    clearTimeout(_via_message_clear_timer); // stop any previous timeouts\n  }, false);\n}\n\nfunction show_message(msg, t) {\n  if ( _via_message_clear_timer ) {\n    clearTimeout(_via_message_clear_timer); // stop any previous timeouts\n  }\n  var timeout = t;\n  if ( typeof t === 'undefined' ) {\n    timeout = VIA_THEME_MESSAGE_TIMEOUT_MS;\n  }\n  document.getElementById('message_panel_content').innerHTML = msg;\n  document.getElementById('message_panel').style.display = 'block';\n\n  _via_message_clear_timer = setTimeout( function() {\n    document.getElementById('message_panel').style.display = 'none';\n  }, timeout);\n}\n\nfunction _via_regions_group_color_init() {\n  _via_canvas_regions_group_color = {};\n  var aid = _via_settings.ui.image.region_color;\n  if ( aid !== '__via_default_region_color__' ) {\n    var avalue;\n    for ( var i = 0; i < _via_img_metadata[_via_image_id].regions.length; ++i ) {\n      avalue = _via_img_metadata[_via_image_id].regions[i].region_attributes[aid];\n      _via_canvas_regions_group_color[avalue] = 1;\n    }\n    var color_index = 0;\n    for ( avalue in _via_canvas_regions_group_color ) {\n      _via_canvas_regions_group_color[avalue] = VIA_REGION_COLOR_LIST[ color_index % VIA_REGION_COLOR_LIST.length ];\n      color_index = color_index + 1;\n    }\n  }\n}\n\n// transform regions in image space to canvas space\nfunction _via_load_canvas_regions() {\n  _via_regions_group_color_init();\n\n  // load all existing annotations into _via_canvas_regions\n  var regions = _via_img_metadata[_via_image_id].regions;\n  _via_canvas_regions  = [];\n  for ( var i = 0; i < regions.length; ++i ) {\n    var region_i = new file_region();\n    for ( var key in regions[i].shape_attributes ) {\n      region_i.shape_attributes[key] = regions[i].shape_attributes[key];\n    }\n    _via_canvas_regions.push(region_i);\n\n    switch(_via_canvas_regions[i].shape_attributes['name']) {\n    case VIA_REGION_SHAPE.RECT:\n      var x      = regions[i].shape_attributes['x'] / _via_canvas_scale;\n      var y      = regions[i].shape_attributes['y'] / _via_canvas_scale;\n      var width  = regions[i].shape_attributes['width']  / _via_canvas_scale;\n      var height = regions[i].shape_attributes['height'] / _via_canvas_scale;\n\n      _via_canvas_regions[i].shape_attributes['x'] = Math.round(x);\n      _via_canvas_regions[i].shape_attributes['y'] = Math.round(y);\n      _via_canvas_regions[i].shape_attributes['width'] = Math.round(width);\n      _via_canvas_regions[i].shape_attributes['height'] = Math.round(height);\n      break;\n\n    case VIA_REGION_SHAPE.CIRCLE:\n      var cx = regions[i].shape_attributes['cx'] / _via_canvas_scale;\n      var cy = regions[i].shape_attributes['cy'] / _via_canvas_scale;\n      var r  = regions[i].shape_attributes['r']  / _via_canvas_scale;\n      _via_canvas_regions[i].shape_attributes['cx'] = Math.round(cx);\n      _via_canvas_regions[i].shape_attributes['cy'] = Math.round(cy);\n      _via_canvas_regions[i].shape_attributes['r'] = Math.round(r);\n      break;\n\n    case VIA_REGION_SHAPE.ELLIPSE:\n      var cx = regions[i].shape_attributes['cx'] / _via_canvas_scale;\n      var cy = regions[i].shape_attributes['cy'] / _via_canvas_scale;\n      var rx = regions[i].shape_attributes['rx'] / _via_canvas_scale;\n      var ry = regions[i].shape_attributes['ry'] / _via_canvas_scale;\n      // rotation in radians\n      var theta = regions[i].shape_attributes['theta'];\n      _via_canvas_regions[i].shape_attributes['cx'] = Math.round(cx);\n      _via_canvas_regions[i].shape_attributes['cy'] = Math.round(cy);\n      _via_canvas_regions[i].shape_attributes['rx'] = Math.round(rx);\n      _via_canvas_regions[i].shape_attributes['ry'] = Math.round(ry);\n      _via_canvas_regions[i].shape_attributes['theta'] = theta;\n      break;\n\n    case VIA_REGION_SHAPE.POLYLINE: // handled by polygon\n    case VIA_REGION_SHAPE.POLYGON:\n      var all_points_x = regions[i].shape_attributes['all_points_x'].slice(0);\n      var all_points_y = regions[i].shape_attributes['all_points_y'].slice(0);\n      for (var j=0; j<all_points_x.length; ++j) {\n        all_points_x[j] = Math.round(all_points_x[j] / _via_canvas_scale);\n        all_points_y[j] = Math.round(all_points_y[j] / _via_canvas_scale);\n      }\n      _via_canvas_regions[i].shape_attributes['all_points_x'] = all_points_x;\n      _via_canvas_regions[i].shape_attributes['all_points_y'] = all_points_y;\n      break;\n\n    case VIA_REGION_SHAPE.POINT:\n      var cx = regions[i].shape_attributes['cx'] / _via_canvas_scale;\n      var cy = regions[i].shape_attributes['cy'] / _via_canvas_scale;\n\n      _via_canvas_regions[i].shape_attributes['cx'] = Math.round(cx);\n      _via_canvas_regions[i].shape_attributes['cy'] = Math.round(cy);\n      break;\n    }\n  }\n}\n\n// updates currently selected region shape\nfunction select_region_shape(sel_shape_name) {\n  for ( var shape_name in VIA_REGION_SHAPE ) {\n    var ui_element = document.getElementById('region_shape_' + VIA_REGION_SHAPE[shape_name]);\n    ui_element.classList.remove('selected');\n  }\n\n  _via_current_shape = sel_shape_name;\n  var ui_element = document.getElementById('region_shape_' + _via_current_shape);\n  ui_element.classList.add('selected');\n\n  switch(_via_current_shape) {\n  case VIA_REGION_SHAPE.RECT: // Fall-through\n  case VIA_REGION_SHAPE.CIRCLE: // Fall-through\n  case VIA_REGION_SHAPE.ELLIPSE:\n    show_message('Press single click and drag mouse to draw ' +\n                 _via_current_shape + ' region');\n    break;\n\n  case VIA_REGION_SHAPE.POLYLINE:\n  case VIA_REGION_SHAPE.POLYGON:\n    _via_is_user_drawing_polygon = false;\n    _via_current_polygon_region_id = -1;\n\n    show_message('[Single Click] to define polygon/polyline vertices, ' +\n                 '[Backspace] to delete last vertex, [Enter] to finish, [Esc] to cancel drawing.' );\n    break;\n\n  case VIA_REGION_SHAPE.POINT:\n    show_message('Press single click to define points (or landmarks)');\n    break;\n\n  default:\n    show_message('Unknown shape selected!');\n    break;\n  }\n}\n\nfunction set_all_canvas_size(w, h) {\n  _via_reg_canvas.height = h;\n  _via_reg_canvas.width = w;\n\n  image_panel.style.height = h + 'px';\n  image_panel.style.width  = w + 'px';\n}\n\nfunction set_all_canvas_scale(s) {\n  _via_reg_ctx.scale(s, s);\n}\n\nfunction show_all_canvas() {\n  image_panel.style.display = 'inline-block';\n}\n\nfunction hide_all_canvas() {\n  image_panel.style.display = 'none';\n}\n\nfunction jump_to_image(image_index) {\n  if ( _via_img_count <= 0 ) {\n    return;\n  }\n\n  switch(_via_display_area_content_name) {\n  case VIA_DISPLAY_AREA_CONTENT_NAME.IMAGE_GRID:\n    if ( image_index >= 0 && image_index < _via_img_count) {\n      // @todo: jump to image grid page view with the given first image index\n      show_single_image_view();\n      _via_show_img(image_index);\n    }\n    break;\n  default:\n    if ( image_index >= 0 && image_index < _via_img_count) {\n      _via_show_img(image_index);\n    }\n    break;\n  }\n}\n\nfunction count_missing_region_attr(img_id) {\n  var miss_region_attr_count = 0;\n  var attr_count = Object.keys(_via_region_attributes).length;\n  for( var i=0; i < _via_img_metadata[img_id].regions.length; ++i ) {\n    var set_attr_count = Object.keys(_via_img_metadata[img_id].regions[i].region_attributes).length;\n    miss_region_attr_count += ( attr_count - set_attr_count );\n  }\n  return miss_region_attr_count;\n}\n\nfunction count_missing_file_attr(img_id) {\n  return Object.keys(_via_file_attributes).length - Object.keys(_via_img_metadata[img_id].file_attributes).length;\n}\n\nfunction toggle_all_regions_selection(is_selected) {\n  var n = _via_img_metadata[_via_image_id].regions.length;\n  var i;\n  _via_region_selected_flag = [];\n  for ( i = 0; i < n; ++i) {\n    _via_region_selected_flag[i] = is_selected;\n  }\n  _via_is_all_region_selected = is_selected;\n  annotation_editor_hide();\n  if ( _via_annotation_editor_mode === VIA_ANNOTATION_EDITOR_MODE.ALL_REGIONS ) {\n    annotation_editor_clear_row_highlight();\n  }\n}\n\nfunction select_only_region(region_id) {\n  toggle_all_regions_selection(false);\n  set_region_select_state(region_id, true);\n  _via_is_region_selected = true;\n  _via_is_all_region_selected = false;\n  _via_user_sel_region_id = region_id;\n}\n\nfunction set_region_select_state(region_id, is_selected) {\n  _via_region_selected_flag[region_id] = is_selected;\n}\n\nfunction show_annotation_data() {\n  pack_via_metadata('csv').then( function(data) {\n    var hstr = '<pre>' + data.join('') + '</pre>';\n    var window_features = 'toolbar=no,menubar=no,location=no,resizable=yes,scrollbars=yes,status=no';\n    window_features += ',width=800,height=600';\n    var annotation_data_window = window.open('', 'Annotations (preview) ', window_features);\n    annotation_data_window.document.body.innerHTML = hstr;\n  }.bind(this), function(err) {\n    show_message('Failed to collect annotation data!');\n  }.bind(this));\n}\n\n//\n// Image click handlers\n//\n\n// enter annotation mode on double click\nfunction _via_reg_canvas_dblclick_handler(e) {\n  e.stopPropagation();\n  // @todo: use double click in future\n}\n\n// user clicks on the canvas\nfunction _via_reg_canvas_mousedown_handler(e) {\n  e.stopPropagation();\n  _via_click_x0 = e.offsetX; _via_click_y0 = e.offsetY;\n  _via_region_edge = is_on_region_corner(_via_click_x0, _via_click_y0);\n  var region_id = is_inside_region(_via_click_x0, _via_click_y0);\n\n  if ( _via_is_region_selected ) {\n    // check if user clicked on the region boundary\n    if ( _via_region_edge[1] > 0 ) {\n      if ( !_via_is_user_resizing_region ) {\n        if ( _via_region_edge[0] !== _via_user_sel_region_id ) {\n          _via_user_sel_region_id = _via_region_edge[0];\n        }\n        // resize region\n        _via_is_user_resizing_region = true;\n      }\n    } else {\n      var yes = is_inside_this_region(_via_click_x0,\n                                      _via_click_y0,\n                                      _via_user_sel_region_id);\n      if (yes) {\n        if( !_via_is_user_moving_region ) {\n          _via_is_user_moving_region = true;\n          _via_region_click_x = _via_click_x0;\n          _via_region_click_y = _via_click_y0;\n        }\n      }\n      if ( region_id === -1 ) {\n        // mousedown on outside any region\n        _via_is_user_drawing_region = true;\n        // unselect all regions\n        _via_is_region_selected = false;\n        _via_user_sel_region_id = -1;\n        toggle_all_regions_selection(false);\n      }\n    }\n  } else {\n    if ( region_id === -1 ) {\n      // mousedown outside a region\n      if (_via_current_shape !== VIA_REGION_SHAPE.POLYGON &&\n          _via_current_shape !== VIA_REGION_SHAPE.POLYLINE &&\n          _via_current_shape !== VIA_REGION_SHAPE.POINT) {\n        // this is a bounding box drawing event\n        _via_is_user_drawing_region = true;\n      }\n    } else {\n      // mousedown inside a region\n      // this could lead to (1) region selection or (2) region drawing\n      _via_is_user_drawing_region = true;\n    }\n  }\n}\n\n// implements the following functionalities:\n//  - new region drawing (including polygon)\n//  - moving/resizing/select/unselect existing region\nfunction _via_reg_canvas_mouseup_handler(e) {\n  e.stopPropagation();\n  _via_click_x1 = e.offsetX; _via_click_y1 = e.offsetY;\n\n  var click_dx = Math.abs(_via_click_x1 - _via_click_x0);\n  var click_dy = Math.abs(_via_click_y1 - _via_click_y0);\n\n  // indicates that user has finished moving a region\n  if ( _via_is_user_moving_region ) {\n    _via_is_user_moving_region = false;\n    _via_reg_canvas.style.cursor = \"default\";\n\n    var move_x = Math.round(_via_click_x1 - _via_region_click_x);\n    var move_y = Math.round(_via_click_y1 - _via_region_click_y);\n\n    if (Math.abs(move_x) > VIA_MOUSE_CLICK_TOL ||\n        Math.abs(move_y) > VIA_MOUSE_CLICK_TOL) {\n      // move all selected regions\n      _via_move_selected_regions(move_x, move_y);\n    } else {\n      // indicates a user click on an already selected region\n      // this could indicate the user's intention to select another\n      // nested region within this region\n      // OR\n      // draw a nested region (i.e. region inside a region)\n\n      // traverse the canvas regions in alternating ascending\n      // and descending order to solve the issue of nested regions\n      var nested_region_id = is_inside_region(_via_click_x0, _via_click_y0, true);\n      if (nested_region_id >= 0 &&\n          nested_region_id !== _via_user_sel_region_id) {\n        _via_user_sel_region_id = nested_region_id;\n        _via_is_region_selected = true;\n        _via_is_user_moving_region = false;\n\n        // de-select all other regions if the user has not pressed Shift\n        if ( !e.shiftKey ) {\n          toggle_all_regions_selection(false);\n        }\n        set_region_select_state(nested_region_id, true);\n        annotation_editor_show();\n      } else {\n        // user clicking inside an already selected region\n        // indicates that the user intends to draw a nested region\n        toggle_all_regions_selection(false);\n        _via_is_region_selected = false;\n\n        switch (_via_current_shape) {\n        case VIA_REGION_SHAPE.POLYLINE: // handled by case for POLYGON\n        case VIA_REGION_SHAPE.POLYGON:\n          // user has clicked on the first point in a new polygon\n          // see also event 'mouseup' for _via_is_user_drawing_polygon=true\n          _via_is_user_drawing_polygon = true;\n\n          var canvas_polygon_region = new file_region();\n          canvas_polygon_region.shape_attributes['name'] = _via_current_shape;\n          canvas_polygon_region.shape_attributes['all_points_x'] = [Math.round(_via_click_x0)];\n          canvas_polygon_region.shape_attributes['all_points_y'] = [Math.round(_via_click_y0)];\n          var new_length = _via_canvas_regions.push(canvas_polygon_region);\n          _via_current_polygon_region_id = new_length - 1;\n          break;\n\n        case VIA_REGION_SHAPE.POINT:\n          // user has marked a landmark point\n          var point_region = new file_region();\n          point_region.shape_attributes['name'] = VIA_REGION_SHAPE.POINT;\n          point_region.shape_attributes['cx'] = Math.round(_via_click_x0 * _via_canvas_scale);\n          point_region.shape_attributes['cy'] = Math.round(_via_click_y0 * _via_canvas_scale);\n          _via_img_metadata[_via_image_id].regions.push(point_region);\n\n          var canvas_point_region = new file_region();\n          canvas_point_region.shape_attributes['name'] = VIA_REGION_SHAPE.POINT;\n          canvas_point_region.shape_attributes['cx'] = Math.round(_via_click_x0);\n          canvas_point_region.shape_attributes['cy'] = Math.round(_via_click_y0);\n          _via_canvas_regions.push(canvas_point_region);\n          break;\n        }\n        annotation_editor_update_content();\n      }\n    }\n    _via_redraw_reg_canvas();\n    _via_reg_canvas.focus();\n    return;\n  }\n\n  // indicates that user has finished resizing a region\n  if ( _via_is_user_resizing_region ) {\n    // _via_click(x0,y0) to _via_click(x1,y1)\n    _via_is_user_resizing_region = false;\n    _via_reg_canvas.style.cursor = \"default\";\n\n    // update the region\n    var region_id = _via_region_edge[0];\n    var image_attr = _via_img_metadata[_via_image_id].regions[region_id].shape_attributes;\n    var canvas_attr = _via_canvas_regions[region_id].shape_attributes;\n\n    switch (canvas_attr['name']) {\n    case VIA_REGION_SHAPE.RECT:\n      var d = [canvas_attr['x'], canvas_attr['y'], 0, 0];\n      d[2] = d[0] + canvas_attr['width'];\n      d[3] = d[1] + canvas_attr['height'];\n\n      var mx = _via_current_x;\n      var my = _via_current_y;\n      var preserve_aspect_ratio = false;\n\n      // constrain (mx,my) to lie on a line connecting a diagonal of rectangle\n      if ( _via_is_ctrl_pressed ) {\n        preserve_aspect_ratio = true;\n      }\n\n      rect_update_corner(_via_region_edge[1], d, mx, my, preserve_aspect_ratio);\n      rect_standardize_coordinates(d);\n\n      var w = Math.abs(d[2] - d[0]);\n      var h = Math.abs(d[3] - d[1]);\n\n      image_attr['x'] = Math.round(d[0] * _via_canvas_scale);\n      image_attr['y'] = Math.round(d[1] * _via_canvas_scale);\n      image_attr['width'] = Math.round(w * _via_canvas_scale);\n      image_attr['height'] = Math.round(h * _via_canvas_scale);\n\n      canvas_attr['x'] = Math.round( image_attr['x'] / _via_canvas_scale);\n      canvas_attr['y'] = Math.round( image_attr['y'] / _via_canvas_scale);\n      canvas_attr['width'] = Math.round( image_attr['width'] / _via_canvas_scale);\n      canvas_attr['height'] = Math.round( image_attr['height'] / _via_canvas_scale);\n      break;\n\n    case VIA_REGION_SHAPE.CIRCLE:\n      var dx = Math.abs(canvas_attr['cx'] - _via_current_x);\n      var dy = Math.abs(canvas_attr['cy'] - _via_current_y);\n      var new_r = Math.sqrt( dx*dx + dy*dy );\n\n      image_attr['r'] = fixfloat(new_r * _via_canvas_scale);\n      canvas_attr['r'] = Math.round( image_attr['r'] / _via_canvas_scale);\n      break;\n\n    case VIA_REGION_SHAPE.ELLIPSE:\n      var new_rx = canvas_attr['rx'];\n      var new_ry = canvas_attr['ry'];\n      var new_theta = canvas_attr['theta'];\n      var dx = Math.abs(canvas_attr['cx'] - _via_current_x);\n      var dy = Math.abs(canvas_attr['cy'] - _via_current_y);\n\n      switch(_via_region_edge[1]) {\n      case 5:\n        new_ry = Math.sqrt(dx*dx + dy*dy);\n        new_theta = Math.atan2(- (_via_current_x - canvas_attr['cx']), (_via_current_y - canvas_attr['cy']));\n        break;\n\n      case 6:\n        new_rx = Math.sqrt(dx*dx + dy*dy);\n        new_theta = Math.atan2((_via_current_y - canvas_attr['cy']), (_via_current_x - canvas_attr['cx']));\n        break;\n\n      default:\n        new_rx = dx;\n        new_ry = dy;\n        new_theta = 0;\n        break;\n      }\n\n      image_attr['rx'] = fixfloat(new_rx * _via_canvas_scale);\n      image_attr['ry'] = fixfloat(new_ry * _via_canvas_scale);\n      image_attr['theta'] = fixfloat(new_theta);\n\n      canvas_attr['rx'] = Math.round(image_attr['rx'] / _via_canvas_scale);\n      canvas_attr['ry'] = Math.round(image_attr['ry'] / _via_canvas_scale);\n      canvas_attr['theta'] = fixfloat(new_theta);\n      break;\n\n    case VIA_REGION_SHAPE.POLYLINE: // handled by polygon\n    case VIA_REGION_SHAPE.POLYGON:\n      var moved_vertex_id = _via_region_edge[1] - VIA_POLYGON_RESIZE_VERTEX_OFFSET;\n\n      if ( e.ctrlKey ) {\n        // if on vertex, delete it\n        // if on edge, add a new vertex\n        var r = _via_canvas_regions[_via_user_sel_region_id].shape_attributes;\n        var shape = r.name;\n        var is_on_vertex = is_on_polygon_vertex(r['all_points_x'], r['all_points_y'], _via_current_x, _via_current_y);\n\n        if ( is_on_vertex === _via_region_edge[1] ) {\n          // click on vertex, hence delete vertex\n          if ( _via_polygon_del_vertex(region_id, moved_vertex_id) ) {\n            show_message('Deleted vertex ' + moved_vertex_id + ' from region');\n          }\n        } else {\n          var is_on_edge = is_on_polygon_edge(r['all_points_x'], r['all_points_y'], _via_current_x, _via_current_y);\n          if ( is_on_edge === _via_region_edge[1] ) {\n            // click on edge, hence add new vertex\n            var vertex_index = is_on_edge - VIA_POLYGON_RESIZE_VERTEX_OFFSET;\n            var canvas_x0 = Math.round(_via_click_x1);\n            var canvas_y0 = Math.round(_via_click_y1);\n            var img_x0 = Math.round( canvas_x0 * _via_canvas_scale );\n            var img_y0 = Math.round( canvas_y0 * _via_canvas_scale );\n            canvas_x0 = Math.round( img_x0 / _via_canvas_scale );\n            canvas_y0 = Math.round( img_y0 / _via_canvas_scale );\n\n            _via_canvas_regions[region_id].shape_attributes['all_points_x'].splice(vertex_index+1, 0, canvas_x0);\n            _via_canvas_regions[region_id].shape_attributes['all_points_y'].splice(vertex_index+1, 0, canvas_y0);\n            _via_img_metadata[_via_image_id].regions[region_id].shape_attributes['all_points_x'].splice(vertex_index+1, 0, img_x0);\n            _via_img_metadata[_via_image_id].regions[region_id].shape_attributes['all_points_y'].splice(vertex_index+1, 0, img_y0);\n\n            show_message('Added 1 new vertex to ' + shape + ' region');\n          }\n        }\n      } else {\n        // update coordinate of vertex\n        var imx = Math.round(_via_current_x * _via_canvas_scale);\n        var imy = Math.round(_via_current_y * _via_canvas_scale);\n        image_attr['all_points_x'][moved_vertex_id] = imx;\n        image_attr['all_points_y'][moved_vertex_id] = imy;\n        canvas_attr['all_points_x'][moved_vertex_id] = Math.round( imx / _via_canvas_scale );\n        canvas_attr['all_points_y'][moved_vertex_id] = Math.round( imy / _via_canvas_scale );\n      }\n      break;\n    } // end of switch()\n    _via_redraw_reg_canvas();\n    _via_reg_canvas.focus();\n    return;\n  }\n\n  // denotes a single click (= mouse down + mouse up)\n  if ( click_dx < VIA_MOUSE_CLICK_TOL ||\n       click_dy < VIA_MOUSE_CLICK_TOL ) {\n    // if user is already drawing polygon, then each click adds a new point\n    if ( _via_is_user_drawing_polygon ) {\n      var canvas_x0 = Math.round(_via_click_x1);\n      var canvas_y0 = Math.round(_via_click_y1);\n      var n = _via_canvas_regions[_via_current_polygon_region_id].shape_attributes['all_points_x'].length;\n      var last_x0 = _via_canvas_regions[_via_current_polygon_region_id].shape_attributes['all_points_x'][n-1];\n      var last_y0 = _via_canvas_regions[_via_current_polygon_region_id].shape_attributes['all_points_y'][n-1];\n      // discard if the click was on the last vertex\n      if ( canvas_x0 !== last_x0 || canvas_y0 !== last_y0 ) {\n        // user clicked on a new polygon point\n        _via_canvas_regions[_via_current_polygon_region_id].shape_attributes['all_points_x'].push(canvas_x0);\n        _via_canvas_regions[_via_current_polygon_region_id].shape_attributes['all_points_y'].push(canvas_y0);\n      }\n    } else {\n      var region_id = is_inside_region(_via_click_x0, _via_click_y0);\n      if ( region_id >= 0 ) {\n        // first click selects region\n        _via_user_sel_region_id     = region_id;\n        _via_is_region_selected     = true;\n        _via_is_user_moving_region  = false;\n        _via_is_user_drawing_region = false;\n\n        // de-select all other regions if the user has not pressed Shift\n        if ( !e.shiftKey ) {\n          annotation_editor_clear_row_highlight();\n          toggle_all_regions_selection(false);\n        }\n        set_region_select_state(region_id, true);\n\n        // show annotation editor only when a single region is selected\n        if ( !e.shiftKey ) {\n          annotation_editor_show();\n        } else {\n          annotation_editor_hide();\n        }\n\n        // show the region info\n        if (_via_is_region_info_visible) {\n          var canvas_attr = _via_canvas_regions[region_id].shape_attributes;\n\n          switch (canvas_attr['name']) {\n          case VIA_REGION_SHAPE.RECT:\n            break;\n\n          case VIA_REGION_SHAPE.CIRCLE:\n            var rf = document.getElementById('region_info');\n            var attr = _via_canvas_regions[_via_user_sel_region_id].shape_attributes;\n            rf.innerHTML +=  ',' + ' Radius:' + attr['r'];\n            break;\n\n          case VIA_REGION_SHAPE.ELLIPSE:\n            var rf = document.getElementById('region_info');\n            var attr = _via_canvas_regions[_via_user_sel_region_id].shape_attributes;\n            rf.innerHTML +=  ',' + ' X-radius:' + attr['rx'] + ',' + ' Y-radius:' + attr['ry'];\n            break;\n\n          case VIA_REGION_SHAPE.POLYLINE:\n          case VIA_REGION_SHAPE.POLYGON:\n            break;\n          }\n        }\n\n        show_message('Region selected. If you intended to draw a region, click again inside the selected region to start drawing a region.')\n      } else {\n        if ( _via_is_user_drawing_region ) {\n          // clear all region selection\n          _via_is_user_drawing_region = false;\n          _via_is_region_selected     = false;\n          toggle_all_regions_selection(false);\n          annotation_editor_hide();\n        } else {\n          switch (_via_current_shape) {\n          case VIA_REGION_SHAPE.POLYLINE: // handled by case for POLYGON\n          case VIA_REGION_SHAPE.POLYGON:\n            // user has clicked on the first point in a new polygon\n            // see also event 'mouseup' for _via_is_user_moving_region=true\n            _via_is_user_drawing_polygon = true;\n\n            var canvas_polygon_region = new file_region();\n            canvas_polygon_region.shape_attributes['name'] = _via_current_shape;\n            canvas_polygon_region.shape_attributes['all_points_x'] = [ Math.round(_via_click_x0) ];\n            canvas_polygon_region.shape_attributes['all_points_y'] = [ Math.round(_via_click_y0)] ;\n\n            var new_length = _via_canvas_regions.push(canvas_polygon_region);\n            _via_current_polygon_region_id = new_length - 1;\n            break;\n\n          case VIA_REGION_SHAPE.POINT:\n            // user has marked a landmark point\n            var point_region = new file_region();\n            point_region.shape_attributes['name'] = VIA_REGION_SHAPE.POINT;\n            point_region.shape_attributes['cx'] = Math.round(_via_click_x0 * _via_canvas_scale);\n            point_region.shape_attributes['cy'] = Math.round(_via_click_y0 * _via_canvas_scale);\n            _via_img_metadata[_via_image_id].regions.push(point_region);\n\n            var canvas_point_region = new file_region();\n            canvas_point_region.shape_attributes['name'] = VIA_REGION_SHAPE.POINT;\n            canvas_point_region.shape_attributes['cx'] = Math.round(_via_click_x0);\n            canvas_point_region.shape_attributes['cy'] = Math.round(_via_click_y0);\n            _via_canvas_regions.push(canvas_point_region);\n\n            annotation_editor_update_content();\n            break;\n          }\n        }\n      }\n    }\n    _via_redraw_reg_canvas();\n    _via_reg_canvas.focus();\n    return;\n  }\n\n  // indicates that user has finished drawing a new region\n  if ( _via_is_user_drawing_region ) {\n    _via_is_user_drawing_region = false;\n    var region_x0 = _via_click_x0;\n    var region_y0 = _via_click_y0;\n    var region_x1 = _via_click_x1;\n    var region_y1 = _via_click_y1;\n\n    var original_img_region = new file_region();\n    var canvas_img_region = new file_region();\n    var region_dx = Math.abs(region_x1 - region_x0);\n    var region_dy = Math.abs(region_y1 - region_y0);\n    var new_region_added = false;\n\n    if ( region_dx > VIA_REGION_MIN_DIM && region_dy > VIA_REGION_MIN_DIM ) { // avoid regions with 0 dim\n      switch(_via_current_shape) {\n      case VIA_REGION_SHAPE.RECT:\n        // ensure that (x0,y0) is top-left and (x1,y1) is bottom-right\n        if ( _via_click_x0 < _via_click_x1 ) {\n          region_x0 = _via_click_x0;\n          region_x1 = _via_click_x1;\n        } else {\n          region_x0 = _via_click_x1;\n          region_x1 = _via_click_x0;\n        }\n\n        if ( _via_click_y0 < _via_click_y1 ) {\n          region_y0 = _via_click_y0;\n          region_y1 = _via_click_y1;\n        } else {\n          region_y0 = _via_click_y1;\n          region_y1 = _via_click_y0;\n        }\n\n        var x = Math.round(region_x0 * _via_canvas_scale);\n        var y = Math.round(region_y0 * _via_canvas_scale);\n        var width  = Math.round(region_dx * _via_canvas_scale);\n        var height = Math.round(region_dy * _via_canvas_scale);\n        original_img_region.shape_attributes['name'] = 'rect';\n        original_img_region.shape_attributes['x'] = x;\n        original_img_region.shape_attributes['y'] = y;\n        original_img_region.shape_attributes['width'] = width;\n        original_img_region.shape_attributes['height'] = height;\n\n        canvas_img_region.shape_attributes['name'] = 'rect';\n        canvas_img_region.shape_attributes['x'] = Math.round( x / _via_canvas_scale );\n        canvas_img_region.shape_attributes['y'] = Math.round( y / _via_canvas_scale );\n        canvas_img_region.shape_attributes['width'] = Math.round( width / _via_canvas_scale );\n        canvas_img_region.shape_attributes['height'] = Math.round( height / _via_canvas_scale );\n\n        new_region_added = true;\n        break;\n\n      case VIA_REGION_SHAPE.CIRCLE:\n        var cx = Math.round(region_x0 * _via_canvas_scale);\n        var cy = Math.round(region_y0 * _via_canvas_scale);\n        var r  = Math.round( Math.sqrt(region_dx*region_dx + region_dy*region_dy) * _via_canvas_scale );\n\n        original_img_region.shape_attributes['name'] = 'circle';\n        original_img_region.shape_attributes['cx'] = cx;\n        original_img_region.shape_attributes['cy'] = cy;\n        original_img_region.shape_attributes['r'] = r;\n\n        canvas_img_region.shape_attributes['name'] = 'circle';\n        canvas_img_region.shape_attributes['cx'] = Math.round( cx / _via_canvas_scale );\n        canvas_img_region.shape_attributes['cy'] = Math.round( cy / _via_canvas_scale );\n        canvas_img_region.shape_attributes['r'] = Math.round( r / _via_canvas_scale );\n\n        new_region_added = true;\n        break;\n\n      case VIA_REGION_SHAPE.ELLIPSE:\n        var cx = Math.round(region_x0 * _via_canvas_scale);\n        var cy = Math.round(region_y0 * _via_canvas_scale);\n        var rx = Math.round(region_dx * _via_canvas_scale);\n        var ry = Math.round(region_dy * _via_canvas_scale);\n        var theta = 0;\n\n        original_img_region.shape_attributes['name'] = 'ellipse';\n        original_img_region.shape_attributes['cx'] = cx;\n        original_img_region.shape_attributes['cy'] = cy;\n        original_img_region.shape_attributes['rx'] = rx;\n        original_img_region.shape_attributes['ry'] = ry;\n        original_img_region.shape_attributes['theta'] = theta;\n\n        canvas_img_region.shape_attributes['name'] = 'ellipse';\n        canvas_img_region.shape_attributes['cx'] = Math.round( cx / _via_canvas_scale );\n        canvas_img_region.shape_attributes['cy'] = Math.round( cy / _via_canvas_scale );\n        canvas_img_region.shape_attributes['rx'] = Math.round( rx / _via_canvas_scale );\n        canvas_img_region.shape_attributes['ry'] = Math.round( ry / _via_canvas_scale );\n        canvas_img_region.shape_attributes['theta'] = theta;\n\n        new_region_added = true;\n        break;\n\n      case VIA_REGION_SHAPE.POINT:    // handled by case VIA_REGION_SHAPE.POLYGON\n      case VIA_REGION_SHAPE.POLYLINE: // handled by case VIA_REGION_SHAPE.POLYGON\n      case VIA_REGION_SHAPE.POLYGON:\n        // handled by _via_is_user_drawing_polygon\n        break;\n      } // end of switch\n\n      if ( new_region_added ) {\n        var n1 = _via_img_metadata[_via_image_id].regions.push(original_img_region);\n        var n2 = _via_canvas_regions.push(canvas_img_region);\n\n        if ( n1 !== n2 ) {\n          console.log('_via_img_metadata.regions[' + n1 + '] and _via_canvas_regions[' + n2 + '] count mismatch');\n        }\n        var new_region_id = n1 - 1;\n\n        set_region_annotations_to_default_value( new_region_id );\n        select_only_region(new_region_id);\n        if ( _via_annotation_editor_mode === VIA_ANNOTATION_EDITOR_MODE.ALL_REGIONS &&\n             _via_metadata_being_updated === 'region' ) {\n          annotation_editor_add_row( new_region_id );\n          annotation_editor_scroll_to_row( new_region_id );\n          annotation_editor_clear_row_highlight();\n          annotation_editor_highlight_row( new_region_id );\n        }\n        annotation_editor_show();\n      }\n      _via_redraw_reg_canvas();\n      _via_reg_canvas.focus();\n    } else {\n      show_message('Prevented accidental addition of a very small region.');\n    }\n    return;\n  }\n}\n\nfunction _via_reg_canvas_mouseover_handler(e) {\n  // change the mouse cursor icon\n  _via_redraw_reg_canvas();\n  _via_reg_canvas.focus();\n}\n\nfunction _via_reg_canvas_mousemove_handler(e) {\n  if ( !_via_current_image_loaded ) {\n    return;\n  }\n\n  _via_current_x = e.offsetX; _via_current_y = e.offsetY;\n\n  // display the cursor coordinates\n  var rf = document.getElementById('region_info');\n  if ( rf != null && _via_is_region_info_visible ) {\n    var img_x = Math.round( _via_current_x * _via_canvas_scale );\n    var img_y = Math.round( _via_current_y * _via_canvas_scale );\n    rf.innerHTML = 'X:' + img_x + ',' + ' Y:' + img_y;\n  }\n\n  if ( _via_is_region_selected ) {\n    // display the region's info if a region is selected\n    if ( rf != null && _via_is_region_info_visible && _via_user_sel_region_id !== -1) {\n      var canvas_attr = _via_canvas_regions[_via_user_sel_region_id].shape_attributes;\n      switch (canvas_attr['name']) {\n      case VIA_REGION_SHAPE.RECT:\n        break;\n\n      case VIA_REGION_SHAPE.CIRCLE:\n        var rf = document.getElementById('region_info');\n        var attr = _via_canvas_regions[_via_user_sel_region_id].shape_attributes;\n        rf.innerHTML +=  ',' + ' Radius:' + attr['r'];\n        break;\n\n      case VIA_REGION_SHAPE.ELLIPSE:\n        var rf = document.getElementById('region_info');\n        var attr = _via_canvas_regions[_via_user_sel_region_id].shape_attributes;\n        rf.innerHTML +=  ',' + ' X-radius:' + attr['rx'] + ',' + ' Y-radius:' + attr['ry'];\n        break;\n\n      case VIA_REGION_SHAPE.POLYLINE:\n      case VIA_REGION_SHAPE.POLYGON:\n        break;\n      }\n    }\n\n    if ( !_via_is_user_resizing_region ) {\n      // check if user moved mouse cursor to region boundary\n      // which indicates an intention to resize the region\n      _via_region_edge = is_on_region_corner(_via_current_x, _via_current_y);\n\n      if ( _via_region_edge[0] === _via_user_sel_region_id ) {\n        switch(_via_region_edge[1]) {\n          // rect\n        case 1: // Fall-through // top-left corner of rect\n        case 3: // bottom-right corner of rect\n          _via_reg_canvas.style.cursor = \"nwse-resize\";\n          break;\n        case 2: // Fall-through // top-right corner of rect\n        case 4: // bottom-left corner of rect\n          _via_reg_canvas.style.cursor = \"nesw-resize\";\n          break;\n\n        case 5: // Fall-through // top-middle point of rect\n        case 7: // bottom-middle point of rect\n          _via_reg_canvas.style.cursor = \"ns-resize\";\n          break;\n        case 6: // Fall-through // top-middle point of rect\n        case 8: // bottom-middle point of rect\n          _via_reg_canvas.style.cursor = \"ew-resize\";\n          break;\n\n          // circle and ellipse\n        case 5:\n          _via_reg_canvas.style.cursor = \"n-resize\";\n          break;\n        case 6:\n          _via_reg_canvas.style.cursor = \"e-resize\";\n          break;\n\n        default:\n          _via_reg_canvas.style.cursor = \"default\";\n          break;\n        }\n\n        if (_via_region_edge[1] >= VIA_POLYGON_RESIZE_VERTEX_OFFSET) {\n          // indicates mouse over polygon vertex\n          _via_reg_canvas.style.cursor = \"crosshair\";\n          show_message('To move vertex, simply drag the vertex. To add vertex, press [Ctrl] key and click on the edge. To delete vertex, press [Ctrl] key and click on vertex.');\n        }\n      } else {\n        var yes = is_inside_this_region(_via_current_x,\n                                        _via_current_y,\n                                        _via_user_sel_region_id);\n        if (yes) {\n          _via_reg_canvas.style.cursor = \"move\";\n        } else {\n          _via_reg_canvas.style.cursor = \"default\";\n        }\n\n      }\n    } else {\n      annotation_editor_hide() // resizing\n    }\n  }\n\n  if(_via_is_user_drawing_region) {\n    // draw region as the user drags the mouse cursor\n    if (_via_canvas_regions.length) {\n      _via_redraw_reg_canvas(); // clear old intermediate rectangle\n    } else {\n      // first region being drawn, just clear the full region canvas\n      _via_reg_ctx.clearRect(0, 0, _via_reg_canvas.width, _via_reg_canvas.height);\n    }\n\n    var region_x0 = _via_click_x0;\n    var region_y0 = _via_click_y0;\n\n    var dx = Math.round(Math.abs(_via_current_x - _via_click_x0));\n    var dy = Math.round(Math.abs(_via_current_y - _via_click_y0));\n    _via_reg_ctx.strokeStyle = VIA_THEME_BOUNDARY_FILL_COLOR;\n\n    switch (_via_current_shape ) {\n    case VIA_REGION_SHAPE.RECT:\n      if ( _via_click_x0 < _via_current_x ) {\n        if ( _via_click_y0 < _via_current_y ) {\n          region_x0 = _via_click_x0;\n          region_y0 = _via_click_y0;\n        } else {\n          region_x0 = _via_click_x0;\n          region_y0 = _via_current_y;\n        }\n      } else {\n        if ( _via_click_y0 < _via_current_y ) {\n          region_x0 = _via_current_x;\n          region_y0 = _via_click_y0;\n        } else {\n          region_x0 = _via_current_x;\n          region_y0 = _via_current_y;\n        }\n      }\n\n      _via_draw_rect_region(region_x0, region_y0, dx, dy, false);\n\n      // display the current region info\n      if ( rf != null && _via_is_region_info_visible ) {\n        rf.innerHTML +=  ',' + ' W:' + dx + ',' + ' H:' + dy;\n      }\n      break;\n\n    case VIA_REGION_SHAPE.CIRCLE:\n      var circle_radius = Math.round(Math.sqrt( dx*dx + dy*dy ));\n      _via_draw_circle_region(region_x0, region_y0, circle_radius, false);\n\n      // display the current region info\n      if ( rf != null && _via_is_region_info_visible ) {\n        rf.innerHTML +=  ',' + ' Radius:' + circle_radius;\n      }\n      break;\n\n    case VIA_REGION_SHAPE.ELLIPSE:\n      _via_draw_ellipse_region(region_x0, region_y0, dx, dy, 0, false);\n\n      // display the current region info\n      if ( rf != null && _via_is_region_info_visible ) {\n        rf.innerHTML +=  ',' + ' X-radius:' + fixfloat(dx) + ',' + ' Y-radius:' + fixfloat(dy);\n      }\n      break;\n\n    case VIA_REGION_SHAPE.POLYLINE: // handled by polygon\n    case VIA_REGION_SHAPE.POLYGON:\n      // this is handled by the if ( _via_is_user_drawing_polygon ) { ... }\n      // see below\n      break;\n    }\n    _via_reg_canvas.focus();\n  }\n\n  if ( _via_is_user_resizing_region ) {\n    // user has clicked mouse on bounding box edge and is now moving it\n    // draw region as the user drags the mouse coursor\n    if (_via_canvas_regions.length) {\n      _via_redraw_reg_canvas(); // clear old intermediate rectangle\n    } else {\n      // first region being drawn, just clear the full region canvas\n      _via_reg_ctx.clearRect(0, 0, _via_reg_canvas.width, _via_reg_canvas.height);\n    }\n\n    var region_id = _via_region_edge[0];\n    var attr = _via_canvas_regions[region_id].shape_attributes;\n    switch (attr['name']) {\n    case VIA_REGION_SHAPE.RECT:\n      // original rectangle\n      var d = [attr['x'], attr['y'], 0, 0];\n      d[2] = d[0] + attr['width'];\n      d[3] = d[1] + attr['height'];\n\n      var mx = _via_current_x;\n      var my = _via_current_y;\n      var preserve_aspect_ratio = false;\n      // constrain (mx,my) to lie on a line connecting a diagonal of rectangle\n      if ( _via_is_ctrl_pressed ) {\n        preserve_aspect_ratio = true;\n      }\n\n      rect_update_corner(_via_region_edge[1], d, mx, my, preserve_aspect_ratio);\n      rect_standardize_coordinates(d);\n\n      var w = Math.abs(d[2] - d[0]);\n      var h = Math.abs(d[3] - d[1]);\n      _via_draw_rect_region(d[0], d[1], w, h, true);\n\n      if ( rf != null && _via_is_region_info_visible ) {\n        rf.innerHTML +=  ',' + ' W:' + w + ',' + ' H:' + h;\n      }\n      break;\n\n    case VIA_REGION_SHAPE.CIRCLE:\n      var dx = Math.abs(attr['cx'] - _via_current_x);\n      var dy = Math.abs(attr['cy'] - _via_current_y);\n      var new_r = Math.sqrt( dx*dx + dy*dy );\n      _via_draw_circle_region(attr['cx'],\n                              attr['cy'],\n                              new_r,\n                              true);\n      if ( rf != null && _via_is_region_info_visible ) {\n        var curr_texts = rf.innerHTML.split(\",\");\n        rf.innerHTML = \"\";\n        rf.innerHTML +=  curr_texts[0] + ',' + curr_texts[1] + ',' + ' Radius:' + Math.round(new_r);\n      }\n      break;\n\n    case VIA_REGION_SHAPE.ELLIPSE:\n      var new_rx = attr['rx'];\n      var new_ry = attr['ry'];\n      var new_theta = attr['theta'];\n      var dx = Math.abs(attr['cx'] - _via_current_x);\n      var dy = Math.abs(attr['cy'] - _via_current_y);\n      switch(_via_region_edge[1]) {\n      case 5:\n        new_ry = Math.sqrt(dx*dx + dy*dy);\n        new_theta = Math.atan2(- (_via_current_x - attr['cx']), (_via_current_y - attr['cy']));\n        break;\n\n      case 6:\n        new_rx = Math.sqrt(dx*dx + dy*dy);\n        new_theta = Math.atan2((_via_current_y - attr['cy']), (_via_current_x - attr['cx']));\n        break;\n\n      default:\n        new_rx = dx;\n        new_ry = dy;\n        new_theta = 0;\n        break;\n      }\n\n      _via_draw_ellipse_region(attr['cx'],\n                               attr['cy'],\n                               new_rx,\n                               new_ry,\n                               new_theta,\n                               true);\n      if ( rf != null && _via_is_region_info_visible ) {\n        var curr_texts = rf.innerHTML.split(\",\");\n        rf.innerHTML = \"\";\n        rf.innerHTML = curr_texts[0] + ',' + curr_texts[1] + ',' + ' X-radius:' + fixfloat(new_rx) + ',' + ' Y-radius:' + fixfloat(new_ry);\n      }\n      break;\n\n    case VIA_REGION_SHAPE.POLYLINE: // handled by polygon\n    case VIA_REGION_SHAPE.POLYGON:\n      var moved_all_points_x = attr['all_points_x'].slice(0);\n      var moved_all_points_y = attr['all_points_y'].slice(0);\n      var moved_vertex_id = _via_region_edge[1] - VIA_POLYGON_RESIZE_VERTEX_OFFSET;\n\n      moved_all_points_x[moved_vertex_id] = _via_current_x;\n      moved_all_points_y[moved_vertex_id] = _via_current_y;\n\n      _via_draw_polygon_region(moved_all_points_x,\n                               moved_all_points_y,\n                               true,\n                               attr['name']);\n      if ( rf != null && _via_is_region_info_visible ) {\n        rf.innerHTML +=  ',' + ' Vertices:' + attr['all_points_x'].length;\n      }\n      break;\n    }\n    _via_reg_canvas.focus();\n  }\n\n  if ( _via_is_user_moving_region ) {\n    // draw region as the user drags the mouse coursor\n    if (_via_canvas_regions.length) {\n      _via_redraw_reg_canvas(); // clear old intermediate rectangle\n    } else {\n      // first region being drawn, just clear the full region canvas\n      _via_reg_ctx.clearRect(0, 0, _via_reg_canvas.width, _via_reg_canvas.height);\n    }\n\n    var move_x = (_via_current_x - _via_region_click_x);\n    var move_y = (_via_current_y - _via_region_click_y);\n    var attr = _via_canvas_regions[_via_user_sel_region_id].shape_attributes;\n\n    switch (attr['name']) {\n    case VIA_REGION_SHAPE.RECT:\n      _via_draw_rect_region(attr['x'] + move_x,\n                            attr['y'] + move_y,\n                            attr['width'],\n                            attr['height'],\n                            true);\n      // display the current region info\n      if ( rf != null && _via_is_region_info_visible ) {\n        rf.innerHTML +=  ',' + ' W:' + attr['width'] + ',' + ' H:' + attr['height'];\n      }\n      break;\n\n    case VIA_REGION_SHAPE.CIRCLE:\n      _via_draw_circle_region(attr['cx'] + move_x,\n                              attr['cy'] + move_y,\n                              attr['r'],\n                              true);\n      break;\n\n    case VIA_REGION_SHAPE.ELLIPSE:\n      if (typeof(attr['theta']) === 'undefined') { attr['theta'] = 0; }\n      _via_draw_ellipse_region(attr['cx'] + move_x,\n                               attr['cy'] + move_y,\n                               attr['rx'],\n                               attr['ry'],\n                               attr['theta'],\n                               true);\n      break;\n\n    case VIA_REGION_SHAPE.POLYLINE: // handled by polygon\n    case VIA_REGION_SHAPE.POLYGON:\n      var moved_all_points_x = attr['all_points_x'].slice(0);\n      var moved_all_points_y = attr['all_points_y'].slice(0);\n      for (var i=0; i<moved_all_points_x.length; ++i) {\n        moved_all_points_x[i] += move_x;\n        moved_all_points_y[i] += move_y;\n      }\n      _via_draw_polygon_region(moved_all_points_x,\n                               moved_all_points_y,\n                               true,\n                               attr['name']);\n      if ( rf != null && _via_is_region_info_visible ) {\n        rf.innerHTML +=  ',' + ' Vertices:' + attr['all_points_x'].length;\n      }\n      break;\n\n    case VIA_REGION_SHAPE.POINT:\n      _via_draw_point_region(attr['cx'] + move_x,\n                             attr['cy'] + move_y,\n                             true);\n      break;\n    }\n    _via_reg_canvas.focus();\n    annotation_editor_hide() // moving\n    return;\n  }\n\n  if ( _via_is_user_drawing_polygon ) {\n    _via_redraw_reg_canvas();\n    var attr = _via_canvas_regions[_via_current_polygon_region_id].shape_attributes;\n    var all_points_x = attr['all_points_x'];\n    var all_points_y = attr['all_points_y'];\n    var npts = all_points_x.length;\n\n    if ( npts > 0 ) {\n      var line_x = [all_points_x.slice(npts-1), _via_current_x];\n      var line_y = [all_points_y.slice(npts-1), _via_current_y];\n      _via_draw_polygon_region(line_x, line_y, false, attr['name']);\n    }\n\n    if ( rf != null && _via_is_region_info_visible ) {\n      rf.innerHTML +=  ',' + ' Vertices:' + npts;\n    }\n  }\n}\n\nfunction _via_move_selected_regions(move_x, move_y) {\n  var i, n;\n  n = _via_region_selected_flag.length;\n  for ( i = 0; i < n; ++i ) {\n    if ( _via_region_selected_flag[i] ) {\n      _via_move_region(i, move_x, move_y);\n    }\n  }\n}\n\nfunction _via_validate_move_region(x, y, canvas_attr) {\n  switch( canvas_attr['name'] ) {\n    case VIA_REGION_SHAPE.RECT:\n      // left and top boundary check\n      if (x < 0 || y < 0) {\n          show_message('Region moved beyond image boundary. Resetting.');\n          return false;\n      }\n      // right and bottom boundary check\n      if ((y + canvas_attr['height']) > _via_current_image_height ||\n          (x + canvas_attr['width']) > _via_current_image_width) {\n            show_message('Region moved beyond image boundary. Resetting.');\n            return false;\n      }\n\n    // same validation for all\n    case VIA_REGION_SHAPE.CIRCLE:\n    case VIA_REGION_SHAPE.ELLIPSE:\n    case VIA_REGION_SHAPE.POINT:\n    case VIA_REGION_SHAPE.POLYLINE:\n    case VIA_REGION_SHAPE.POLYGON:\n      if (x < 0 || y < 0 ||\n          x > _via_current_image_width || y > _via_current_image_height) {\n          show_message('Region moved beyond image boundary. Resetting.');\n          return false;\n      }\n  }\n  return true;\n}\n\nfunction _via_move_region(region_id, move_x, move_y) {\n  var image_attr = _via_img_metadata[_via_image_id].regions[region_id].shape_attributes;\n  var canvas_attr = _via_canvas_regions[region_id].shape_attributes;\n\n  switch( canvas_attr['name'] ) {\n  case VIA_REGION_SHAPE.RECT:\n    var xnew = image_attr['x'] + Math.round(move_x * _via_canvas_scale);\n    var ynew = image_attr['y'] + Math.round(move_y * _via_canvas_scale);\n\n    var is_valid = _via_validate_move_region(xnew, ynew, image_attr);\n    if (! is_valid ) { break; }\n\n    image_attr['x'] = xnew;\n    image_attr['y'] = ynew;\n\n    canvas_attr['x'] = Math.round( image_attr['x'] / _via_canvas_scale);\n    canvas_attr['y'] = Math.round( image_attr['y'] / _via_canvas_scale);\n    break;\n\n  case VIA_REGION_SHAPE.CIRCLE: // Fall-through\n  case VIA_REGION_SHAPE.ELLIPSE: // Fall-through\n  case VIA_REGION_SHAPE.POINT:\n    var cxnew = image_attr['cx'] + Math.round(move_x * _via_canvas_scale);\n    var cynew = image_attr['cy'] + Math.round(move_y * _via_canvas_scale);\n\n    var is_valid = _via_validate_move_region(cxnew, cynew, image_attr);\n    if (! is_valid ) { break; }\n\n    image_attr['cx'] = cxnew;\n    image_attr['cy'] = cynew;\n\n    canvas_attr['cx'] = Math.round( image_attr['cx'] / _via_canvas_scale);\n    canvas_attr['cy'] = Math.round( image_attr['cy'] / _via_canvas_scale);\n    break;\n\n  case VIA_REGION_SHAPE.POLYLINE: // handled by polygon\n  case VIA_REGION_SHAPE.POLYGON:\n    var img_px = image_attr['all_points_x'];\n    var img_py = image_attr['all_points_y'];\n    var canvas_px = canvas_attr['all_points_x'];\n    var canvas_py = canvas_attr['all_points_y'];\n    // clone for reverting if valiation fails\n    var img_px_old = Object.assign({}, img_px);\n    var img_py_old = Object.assign({}, img_py);\n\n    // validate move\n    for (var i=0; i<img_px.length; ++i) {\n      var pxnew = img_px[i] + Math.round(move_x * _via_canvas_scale);\n      var pynew = img_py[i] + Math.round(move_y * _via_canvas_scale);\n      if (! _via_validate_move_region(pxnew, pynew, image_attr) ) {\n        img_px = img_px_old;\n        img_py = img_py_old;\n        break;\n      }\n    }\n    // move points\n    for (var i=0; i<img_px.length; ++i) {\n      img_px[i] = img_px[i] + Math.round(move_x * _via_canvas_scale);\n      img_py[i] = img_py[i] + Math.round(move_y * _via_canvas_scale);\n    }\n\n    for (var i=0; i<canvas_px.length; ++i) {\n      canvas_px[i] = Math.round( img_px[i] / _via_canvas_scale );\n      canvas_py[i] = Math.round( img_py[i] / _via_canvas_scale );\n    }\n    break;\n  }\n}\n\nfunction _via_polygon_del_vertex(region_id, vertex_id) {\n  var rs    = _via_canvas_regions[region_id].shape_attributes;\n  var npts  = rs['all_points_x'].length;\n  var shape = rs['name'];\n  if ( shape !== VIA_REGION_SHAPE.POLYGON && shape !== VIA_REGION_SHAPE.POLYLINE ) {\n    show_message('Vertices can only be deleted from polygon/polyline.');\n    return false;\n  }\n  if ( npts <=3 && shape === VIA_REGION_SHAPE.POLYGON ) {\n    show_message('Failed to delete vertex because a polygon must have at least 3 vertices.');\n    return false;\n  }\n  if ( npts <=2 && shape === VIA_REGION_SHAPE.POLYLINE ) {\n    show_message('Failed to delete vertex because a polyline must have at least 2 vertices.');\n    return false;\n  }\n  // delete vertex from canvas\n  _via_canvas_regions[region_id].shape_attributes['all_points_x'].splice(vertex_id, 1);\n  _via_canvas_regions[region_id].shape_attributes['all_points_y'].splice(vertex_id, 1);\n\n  // delete vertex from image metadata\n  _via_img_metadata[_via_image_id].regions[region_id].shape_attributes['all_points_x'].splice(vertex_id, 1);\n  _via_img_metadata[_via_image_id].regions[region_id].shape_attributes['all_points_y'].splice(vertex_id, 1);\n  return true;\n}\n\n//\n// Canvas update routines\n//\nfunction _via_redraw_reg_canvas() {\n  if (_via_current_image_loaded) {\n    _via_reg_ctx.clearRect(0, 0, _via_reg_canvas.width, _via_reg_canvas.height);\n    if ( _via_canvas_regions.length > 0 ) {\n      if (_via_is_region_boundary_visible) {\n        draw_all_regions();\n      }\n      if (_via_is_region_id_visible) {\n        draw_all_region_id();\n      }\n    }\n  }\n}\n\nfunction _via_clear_reg_canvas() {\n  _via_reg_ctx.clearRect(0, 0, _via_reg_canvas.width, _via_reg_canvas.height);\n}\n\nfunction draw_all_regions() {\n  var aid = _via_settings.ui.image.region_color;\n  var attr, is_selected, aid, avalue;\n  for (var i=0; i < _via_canvas_regions.length; ++i) {\n    attr = _via_canvas_regions[i].shape_attributes;\n    is_selected = _via_region_selected_flag[i];\n\n    // region stroke style may depend on attribute value\n    _via_reg_ctx.strokeStyle = VIA_THEME_BOUNDARY_FILL_COLOR;\n    if ( ! _via_is_user_drawing_polygon &&\n         aid !== '__via_default_region_color__' ) {\n      avalue = _via_img_metadata[_via_image_id].regions[i].region_attributes[aid];\n      if ( _via_canvas_regions_group_color.hasOwnProperty(avalue) ) {\n        _via_reg_ctx.strokeStyle = _via_canvas_regions_group_color[avalue];\n      }\n    }\n\n    switch( attr['name'] ) {\n    case VIA_REGION_SHAPE.RECT:\n      _via_draw_rect_region(attr['x'],\n                            attr['y'],\n                            attr['width'],\n                            attr['height'],\n                            is_selected);\n      break;\n\n    case VIA_REGION_SHAPE.CIRCLE:\n      _via_draw_circle_region(attr['cx'],\n                              attr['cy'],\n                              attr['r'],\n                              is_selected);\n      break;\n\n    case VIA_REGION_SHAPE.ELLIPSE:\n      if (typeof(attr['theta']) === 'undefined') { attr['theta'] = 0; }\n      _via_draw_ellipse_region(attr['cx'],\n                               attr['cy'],\n                               attr['rx'],\n                               attr['ry'],\n                               attr['theta'],\n                               is_selected);\n      break;\n\n    case VIA_REGION_SHAPE.POLYLINE: // handled by polygon\n    case VIA_REGION_SHAPE.POLYGON:\n      _via_draw_polygon_region(attr['all_points_x'],\n                               attr['all_points_y'],\n                               is_selected,\n                               attr['name']);\n      break;\n\n    case VIA_REGION_SHAPE.POINT:\n      _via_draw_point_region(attr['cx'],\n                             attr['cy'],\n                             is_selected);\n      break;\n    }\n  }\n}\n\n// control point for resize of region boundaries\nfunction _via_draw_control_point(cx, cy) {\n  _via_reg_ctx.beginPath();\n  _via_reg_ctx.arc(cx, cy, VIA_REGION_SHAPES_POINTS_RADIUS, 0, 2*Math.PI, false);\n  _via_reg_ctx.closePath();\n\n  _via_reg_ctx.fillStyle = VIA_THEME_CONTROL_POINT_COLOR;\n  _via_reg_ctx.globalAlpha = 1.0;\n  _via_reg_ctx.fill();\n}\n\nfunction _via_draw_rect_region(x, y, w, h, is_selected) {\n  if (is_selected) {\n    _via_draw_rect(x, y, w, h);\n\n    _via_reg_ctx.strokeStyle = VIA_THEME_SEL_REGION_FILL_BOUNDARY_COLOR;\n    _via_reg_ctx.lineWidth   = VIA_THEME_REGION_BOUNDARY_WIDTH/2;\n    _via_reg_ctx.stroke();\n\n    _via_reg_ctx.fillStyle   = VIA_THEME_SEL_REGION_FILL_COLOR;\n    _via_reg_ctx.globalAlpha = VIA_THEME_SEL_REGION_OPACITY;\n    _via_reg_ctx.fill();\n    _via_reg_ctx.globalAlpha = 1.0;\n\n    _via_draw_control_point(x  ,   y);\n    _via_draw_control_point(x+w, y+h);\n    _via_draw_control_point(x  , y+h);\n    _via_draw_control_point(x+w,   y);\n    _via_draw_control_point(x+w/2,   y);\n    _via_draw_control_point(x+w/2, y+h);\n    _via_draw_control_point(x    , y+h/2);\n    _via_draw_control_point(x+w  , y+h/2);\n  } else {\n    // draw a fill line\n    _via_reg_ctx.lineWidth   = VIA_THEME_REGION_BOUNDARY_WIDTH/2;\n    _via_draw_rect(x, y, w, h);\n    _via_reg_ctx.stroke();\n\n    if ( w > VIA_THEME_REGION_BOUNDARY_WIDTH &&\n         h > VIA_THEME_REGION_BOUNDARY_WIDTH ) {\n      // draw a boundary line on both sides of the fill line\n      _via_reg_ctx.strokeStyle = VIA_THEME_BOUNDARY_LINE_COLOR;\n      _via_reg_ctx.lineWidth   = VIA_THEME_REGION_BOUNDARY_WIDTH/4;\n      _via_draw_rect(x - VIA_THEME_REGION_BOUNDARY_WIDTH/2,\n                     y - VIA_THEME_REGION_BOUNDARY_WIDTH/2,\n                     w + VIA_THEME_REGION_BOUNDARY_WIDTH,\n                     h + VIA_THEME_REGION_BOUNDARY_WIDTH);\n      _via_reg_ctx.stroke();\n\n      _via_draw_rect(x + VIA_THEME_REGION_BOUNDARY_WIDTH/2,\n                     y + VIA_THEME_REGION_BOUNDARY_WIDTH/2,\n                     w - VIA_THEME_REGION_BOUNDARY_WIDTH,\n                     h - VIA_THEME_REGION_BOUNDARY_WIDTH);\n      _via_reg_ctx.stroke();\n    }\n  }\n}\n\nfunction _via_draw_rect(x, y, w, h) {\n  _via_reg_ctx.beginPath();\n  _via_reg_ctx.moveTo(x  , y);\n  _via_reg_ctx.lineTo(x+w, y);\n  _via_reg_ctx.lineTo(x+w, y+h);\n  _via_reg_ctx.lineTo(x  , y+h);\n  _via_reg_ctx.closePath();\n}\n\nfunction _via_draw_circle_region(cx, cy, r, is_selected) {\n  if (is_selected) {\n    _via_draw_circle(cx, cy, r);\n\n    _via_reg_ctx.strokeStyle = VIA_THEME_SEL_REGION_FILL_BOUNDARY_COLOR;\n    _via_reg_ctx.lineWidth   = VIA_THEME_REGION_BOUNDARY_WIDTH/2;\n    _via_reg_ctx.stroke();\n\n    _via_reg_ctx.fillStyle   = VIA_THEME_SEL_REGION_FILL_COLOR;\n    _via_reg_ctx.globalAlpha = VIA_THEME_SEL_REGION_OPACITY;\n    _via_reg_ctx.fill();\n    _via_reg_ctx.globalAlpha = 1.0;\n\n    _via_draw_control_point(cx + r, cy);\n  } else {\n    // draw a fill line\n    _via_reg_ctx.lineWidth   = VIA_THEME_REGION_BOUNDARY_WIDTH/2;\n    _via_draw_circle(cx, cy, r);\n    _via_reg_ctx.stroke();\n\n    if ( r > VIA_THEME_REGION_BOUNDARY_WIDTH ) {\n      // draw a boundary line on both sides of the fill line\n      _via_reg_ctx.strokeStyle = VIA_THEME_BOUNDARY_LINE_COLOR;\n      _via_reg_ctx.lineWidth   = VIA_THEME_REGION_BOUNDARY_WIDTH/4;\n      _via_draw_circle(cx, cy,\n                       r - VIA_THEME_REGION_BOUNDARY_WIDTH/2);\n      _via_reg_ctx.stroke();\n      _via_draw_circle(cx, cy,\n                       r + VIA_THEME_REGION_BOUNDARY_WIDTH/2);\n      _via_reg_ctx.stroke();\n    }\n  }\n}\n\nfunction _via_draw_circle(cx, cy, r) {\n  _via_reg_ctx.beginPath();\n  _via_reg_ctx.arc(cx, cy, r, 0, 2*Math.PI, false);\n  _via_reg_ctx.closePath();\n}\n\nfunction _via_draw_ellipse_region(cx, cy, rx, ry, rr, is_selected) {\n  if (is_selected) {\n    _via_draw_ellipse(cx, cy, rx, ry, rr);\n\n    _via_reg_ctx.strokeStyle = VIA_THEME_SEL_REGION_FILL_BOUNDARY_COLOR;\n    _via_reg_ctx.lineWidth   = VIA_THEME_REGION_BOUNDARY_WIDTH/2;\n    _via_reg_ctx.stroke();\n\n    _via_reg_ctx.fillStyle   = VIA_THEME_SEL_REGION_FILL_COLOR;\n    _via_reg_ctx.globalAlpha = VIA_THEME_SEL_REGION_OPACITY;\n    _via_reg_ctx.fill();\n    _via_reg_ctx.globalAlpha = 1.0;\n\n    _via_draw_control_point(cx + rx * Math.cos(rr), cy + rx * Math.sin(rr));\n    _via_draw_control_point(cx - rx * Math.cos(rr), cy - rx * Math.sin(rr));\n    _via_draw_control_point(cx + ry * Math.sin(rr), cy - ry * Math.cos(rr));\n    _via_draw_control_point(cx - ry * Math.sin(rr), cy + ry * Math.cos(rr));\n\n  } else {\n    // draw a fill line\n    _via_reg_ctx.lineWidth   = VIA_THEME_REGION_BOUNDARY_WIDTH/2;\n    _via_draw_ellipse(cx, cy, rx, ry, rr);\n    _via_reg_ctx.stroke();\n\n    if ( rx > VIA_THEME_REGION_BOUNDARY_WIDTH &&\n         ry > VIA_THEME_REGION_BOUNDARY_WIDTH ) {\n      // draw a boundary line on both sides of the fill line\n      _via_reg_ctx.strokeStyle = VIA_THEME_BOUNDARY_LINE_COLOR;\n      _via_reg_ctx.lineWidth   = VIA_THEME_REGION_BOUNDARY_WIDTH/4;\n      _via_draw_ellipse(cx, cy,\n                        rx + VIA_THEME_REGION_BOUNDARY_WIDTH/2,\n                        ry + VIA_THEME_REGION_BOUNDARY_WIDTH/2,\n                        rr);\n      _via_reg_ctx.stroke();\n      _via_draw_ellipse(cx, cy,\n                        rx - VIA_THEME_REGION_BOUNDARY_WIDTH/2,\n                        ry - VIA_THEME_REGION_BOUNDARY_WIDTH/2,\n                        rr);\n      _via_reg_ctx.stroke();\n    }\n  }\n}\n\nfunction _via_draw_ellipse(cx, cy, rx, ry, rr) {\n  _via_reg_ctx.save();\n\n  _via_reg_ctx.beginPath();\n  _via_reg_ctx.ellipse(cx, cy, rx, ry, rr, 0, 2 * Math.PI);\n\n  _via_reg_ctx.restore(); // restore to original state\n  _via_reg_ctx.closePath();\n}\n\nfunction _via_draw_polygon_region(all_points_x, all_points_y, is_selected, shape) {\n  if ( is_selected ) {\n    _via_reg_ctx.strokeStyle = VIA_THEME_SEL_REGION_FILL_BOUNDARY_COLOR;\n    _via_reg_ctx.lineWidth   = VIA_THEME_REGION_BOUNDARY_WIDTH/2;\n    _via_reg_ctx.beginPath();\n    _via_reg_ctx.moveTo(all_points_x[0], all_points_y[0]);\n    for ( var i=1; i < all_points_x.length; ++i ) {\n      _via_reg_ctx.lineTo(all_points_x[i], all_points_y[i]);\n    }\n    if ( shape === VIA_REGION_SHAPE.POLYGON ) {\n      _via_reg_ctx.lineTo(all_points_x[0], all_points_y[0]); // close loop\n    }\n    _via_reg_ctx.stroke();\n\n    _via_reg_ctx.fillStyle   = VIA_THEME_SEL_REGION_FILL_COLOR;\n    _via_reg_ctx.globalAlpha = VIA_THEME_SEL_REGION_OPACITY;\n    _via_reg_ctx.fill();\n    _via_reg_ctx.globalAlpha = 1.0;\n    for ( var i=0; i < all_points_x.length; ++i ) {\n      _via_draw_control_point(all_points_x[i], all_points_y[i]);\n    }\n  } else {\n    // draw a fill line\n    _via_reg_ctx.lineWidth   = VIA_THEME_REGION_BOUNDARY_WIDTH/2;\n    _via_reg_ctx.beginPath();\n    _via_reg_ctx.moveTo(all_points_x[0], all_points_y[0]);\n    for ( var i=0; i < all_points_x.length; ++i ) {\n      _via_reg_ctx.lineTo(all_points_x[i], all_points_y[i]);\n    }\n    if ( shape === VIA_REGION_SHAPE.POLYGON ) {\n      _via_reg_ctx.lineTo(all_points_x[0], all_points_y[0]); // close loop\n    }\n    _via_reg_ctx.stroke();\n  }\n}\n\nfunction _via_draw_point_region(cx, cy, is_selected) {\n  if (is_selected) {\n    _via_draw_point(cx, cy, VIA_REGION_POINT_RADIUS);\n\n    _via_reg_ctx.strokeStyle = VIA_THEME_SEL_REGION_FILL_BOUNDARY_COLOR;\n    _via_reg_ctx.lineWidth   = VIA_THEME_REGION_BOUNDARY_WIDTH/2;\n    _via_reg_ctx.stroke();\n\n    _via_reg_ctx.fillStyle   = VIA_THEME_SEL_REGION_FILL_COLOR;\n    _via_reg_ctx.globalAlpha = VIA_THEME_SEL_REGION_OPACITY;\n    _via_reg_ctx.fill();\n    _via_reg_ctx.globalAlpha = 1.0;\n  } else {\n    // draw a fill line\n    _via_reg_ctx.lineWidth   = VIA_THEME_REGION_BOUNDARY_WIDTH/2;\n    _via_draw_point(cx, cy, VIA_REGION_POINT_RADIUS);\n    _via_reg_ctx.stroke();\n\n    // draw a boundary line on both sides of the fill line\n    _via_reg_ctx.strokeStyle = VIA_THEME_BOUNDARY_LINE_COLOR;\n    _via_reg_ctx.lineWidth   = VIA_THEME_REGION_BOUNDARY_WIDTH/4;\n    _via_draw_point(cx, cy,\n                    VIA_REGION_POINT_RADIUS - VIA_THEME_REGION_BOUNDARY_WIDTH/2);\n    _via_reg_ctx.stroke();\n    _via_draw_point(cx, cy,\n                    VIA_REGION_POINT_RADIUS + VIA_THEME_REGION_BOUNDARY_WIDTH/2);\n    _via_reg_ctx.stroke();\n  }\n}\n\nfunction _via_draw_point(cx, cy, r) {\n  _via_reg_ctx.beginPath();\n  _via_reg_ctx.arc(cx, cy, r, 0, 2*Math.PI, false);\n  _via_reg_ctx.closePath();\n}\n\nfunction draw_all_region_id() {\n  _via_reg_ctx.shadowColor = \"transparent\";\n  _via_reg_ctx.font = _via_settings.ui.image.region_label_font;\n  for ( var i = 0; i < _via_img_metadata[_via_image_id].regions.length; ++i ) {\n    var canvas_reg = _via_canvas_regions[i];\n\n    var bbox = get_region_bounding_box(canvas_reg);\n    var x = bbox[0];\n    var y = bbox[1];\n    var w = Math.abs(bbox[2] - bbox[0]);\n\n    var char_width  = _via_reg_ctx.measureText('M').width;\n    var char_height = 1.8 * char_width;\n\n    var annotation_str  = (i+1).toString();\n    var rattr = _via_img_metadata[_via_image_id].regions[i].region_attributes[_via_settings.ui.image.region_label];\n    var rshape = _via_img_metadata[_via_image_id].regions[i].shape_attributes['name'];\n    if ( _via_settings.ui.image.region_label !== '__via_region_id__' ) {\n      if ( typeof(rattr) !== 'undefined' ) {\n        switch( typeof(rattr) ) {\n        default:\n        case 'string':\n          annotation_str = rattr;\n          break;\n        case 'object':\n          annotation_str = Object.keys(rattr).join(',');\n          break;\n        }\n      } else {\n        annotation_str = 'undefined';\n      }\n    }\n\n    var bgnd_rect_width;\n    var strw = _via_reg_ctx.measureText(annotation_str).width;\n    if ( strw > w ) {\n      if ( _via_settings.ui.image.region_label === '__via_region_id__' ) {\n        // region-id is always visible in full\n        bgnd_rect_width = strw + char_width;\n      } else {\n\n        // if text overflows, crop it\n        var str_max     = Math.floor((w * annotation_str.length) / strw);\n        if ( str_max > 1 ) {\n          annotation_str  = annotation_str.substr(0, str_max-1) + '.';\n          bgnd_rect_width = w;\n        } else {\n          annotation_str  = annotation_str.substr(0, 1) + '.';\n          bgnd_rect_width = 2 * char_width;\n        }\n      }\n    } else {\n      bgnd_rect_width = strw + char_width;\n    }\n\n    if (canvas_reg.shape_attributes['name'] === VIA_REGION_SHAPE.POLYGON ||\n        canvas_reg.shape_attributes['name'] === VIA_REGION_SHAPE.POLYLINE) {\n      // put label near the first vertex\n      x = canvas_reg.shape_attributes['all_points_x'][0];\n      y = canvas_reg.shape_attributes['all_points_y'][0];\n    } else {\n      // center the label\n      x = x - (bgnd_rect_width/2 - w/2);\n    }\n\n    // ensure that the text is within the image boundaries\n    if ( y < char_height ) {\n      y = char_height;\n    }\n\n    // first, draw a background rectangle first\n    _via_reg_ctx.fillStyle = 'black';\n    _via_reg_ctx.globalAlpha = 0.8;\n    _via_reg_ctx.fillRect(Math.floor(x),\n                          Math.floor(y - 1.1*char_height),\n                          Math.floor(bgnd_rect_width),\n                          Math.floor(char_height));\n\n    // then, draw text over this background rectangle\n    _via_reg_ctx.globalAlpha = 1.0;\n    _via_reg_ctx.fillStyle = 'yellow';\n    _via_reg_ctx.fillText(annotation_str,\n                          Math.floor(x + 0.4*char_width),\n                          Math.floor(y - 0.35*char_height));\n\n  }\n}\n\nfunction get_region_bounding_box(region) {\n  var d = region.shape_attributes;\n  var bbox = new Array(4);\n\n  switch( d['name'] ) {\n  case 'rect':\n    bbox[0] = d['x'];\n    bbox[1] = d['y'];\n    bbox[2] = d['x'] + d['width'];\n    bbox[3] = d['y'] + d['height'];\n    break;\n\n  case 'circle':\n    bbox[0] = d['cx'] - d['r'];\n    bbox[1] = d['cy'] - d['r'];\n    bbox[2] = d['cx'] + d['r'];\n    bbox[3] = d['cy'] + d['r'];\n    break;\n\n  case 'ellipse':\n    let radians = d['theta'];\n    let radians90 = radians + Math.PI / 2;\n    let ux = d['rx'] * Math.cos(radians);\n    let uy = d['rx'] * Math.sin(radians);\n    let vx = d['ry'] * Math.cos(radians90);\n    let vy = d['ry'] * Math.sin(radians90);\n\n    let width = Math.sqrt(ux * ux + vx * vx) * 2;\n    let height = Math.sqrt(uy * uy + vy * vy) * 2;\n\n    bbox[0] = d['cx'] - (width / 2);\n    bbox[1] = d['cy'] - (height / 2);\n    bbox[2] = d['cx'] + (width / 2);\n    bbox[3] = d['cy'] + (height / 2);\n    break;\n\n  case 'polyline': // handled by polygon\n  case 'polygon':\n    var all_points_x = d['all_points_x'];\n    var all_points_y = d['all_points_y'];\n\n    var minx = Number.MAX_SAFE_INTEGER;\n    var miny = Number.MAX_SAFE_INTEGER;\n    var maxx = 0;\n    var maxy = 0;\n    for ( var i=0; i < all_points_x.length; ++i ) {\n      if ( all_points_x[i] < minx ) {\n        minx = all_points_x[i];\n      }\n      if ( all_points_x[i] > maxx ) {\n        maxx = all_points_x[i];\n      }\n      if ( all_points_y[i] < miny ) {\n        miny = all_points_y[i];\n      }\n      if ( all_points_y[i] > maxy ) {\n        maxy = all_points_y[i];\n      }\n    }\n    bbox[0] = minx;\n    bbox[1] = miny;\n    bbox[2] = maxx;\n    bbox[3] = maxy;\n    break;\n\n  case 'point':\n    bbox[0] = d['cx'] - VIA_REGION_POINT_RADIUS;\n    bbox[1] = d['cy'] - VIA_REGION_POINT_RADIUS;\n    bbox[2] = d['cx'] + VIA_REGION_POINT_RADIUS;\n    bbox[3] = d['cy'] + VIA_REGION_POINT_RADIUS;\n    break;\n  }\n  return bbox;\n}\n\n//\n// Region collision routines\n//\nfunction is_inside_region(px, py, descending_order) {\n  var N = _via_canvas_regions.length;\n  if ( N === 0 ) {\n    return -1;\n  }\n  var start, end, del;\n  // traverse the canvas regions in alternating ascending\n  // and descending order to solve the issue of nested regions\n  if ( descending_order ) {\n    start = N - 1;\n    end   = -1;\n    del   = -1;\n  } else {\n    start = 0;\n    end   = N;\n    del   = 1;\n  }\n\n  var i = start;\n  while ( i !== end ) {\n    var yes = is_inside_this_region(px, py, i);\n    if (yes) {\n      return i;\n    }\n    i = i + del;\n  }\n  return -1;\n}\n\nfunction is_inside_this_region(px, py, region_id) {\n  var attr   = _via_canvas_regions[region_id].shape_attributes;\n  var result = false;\n  switch ( attr['name'] ) {\n  case VIA_REGION_SHAPE.RECT:\n    result = is_inside_rect(attr['x'],\n                            attr['y'],\n                            attr['width'],\n                            attr['height'],\n                            px, py);\n    break;\n\n  case VIA_REGION_SHAPE.CIRCLE:\n    result = is_inside_circle(attr['cx'],\n                              attr['cy'],\n                              attr['r'],\n                              px, py);\n    break;\n\n  case VIA_REGION_SHAPE.ELLIPSE:\n    result = is_inside_ellipse(attr['cx'],\n                               attr['cy'],\n                               attr['rx'],\n                               attr['ry'],\n                               attr['theta'],\n                               px, py);\n    break;\n\n  case VIA_REGION_SHAPE.POLYLINE: // handled by POLYGON\n  case VIA_REGION_SHAPE.POLYGON:\n    result = is_inside_polygon(attr['all_points_x'],\n                               attr['all_points_y'],\n                               px, py);\n    break;\n\n  case VIA_REGION_SHAPE.POINT:\n    result = is_inside_point(attr['cx'],\n                             attr['cy'],\n                             px, py);\n    break;\n  }\n  return result;\n}\n\nfunction is_inside_circle(cx, cy, r, px, py) {\n  var dx = px - cx;\n  var dy = py - cy;\n  return (dx * dx + dy * dy) < r * r;\n}\n\nfunction is_inside_rect(x, y, w, h, px, py) {\n  return px > x &&\n    px < (x + w) &&\n    py > y &&\n    py < (y + h);\n}\n\nfunction is_inside_ellipse(cx, cy, rx, ry, rr, px, py) {\n  // Inverse rotation of pixel coordinates\n  var dx = Math.cos(-rr) * (cx - px) - Math.sin(-rr) * (cy - py)\n  var dy = Math.sin(-rr) * (cx - px) + Math.cos(-rr) * (cy - py)\n\n  return ((dx * dx) / (rx * rx)) + ((dy * dy) / (ry * ry)) < 1;\n}\n\n// returns 0 when (px,py) is outside the polygon\n// source: http://geomalgorithms.com/a03-_inclusion.html\nfunction is_inside_polygon(all_points_x, all_points_y, px, py) {\n  if ( all_points_x.length === 0 || all_points_y.length === 0 ) {\n    return 0;\n  }\n\n  var wn = 0;    // the  winding number counter\n  var n = all_points_x.length;\n  var i;\n  // loop through all edges of the polygon\n  for ( i = 0; i < n-1; ++i ) {   // edge from V[i] to  V[i+1]\n    var is_left_value = is_left( all_points_x[i], all_points_y[i],\n                                 all_points_x[i+1], all_points_y[i+1],\n                                 px, py);\n\n    if (all_points_y[i] <= py) {\n      if (all_points_y[i+1]  > py && is_left_value > 0) {\n        ++wn;\n      }\n    }\n    else {\n      if (all_points_y[i+1]  <= py && is_left_value < 0) {\n        --wn;\n      }\n    }\n  }\n\n  // also take into account the loop closing edge that connects last point with first point\n  var is_left_value = is_left( all_points_x[n-1], all_points_y[n-1],\n                               all_points_x[0], all_points_y[0],\n                               px, py);\n\n  if (all_points_y[n-1] <= py) {\n    if (all_points_y[0]  > py && is_left_value > 0) {\n      ++wn;\n    }\n  }\n  else {\n    if (all_points_y[0]  <= py && is_left_value < 0) {\n      --wn;\n    }\n  }\n\n  if ( wn === 0 ) {\n    return 0;\n  }\n  else {\n    return 1;\n  }\n}\n\nfunction is_inside_point(cx, cy, px, py) {\n  var dx = px - cx;\n  var dy = py - cy;\n  var r2 = VIA_POLYGON_VERTEX_MATCH_TOL * VIA_POLYGON_VERTEX_MATCH_TOL;\n  return (dx * dx + dy * dy) < r2;\n}\n\n// returns\n// >0 if (x2,y2) lies on the left side of line joining (x0,y0) and (x1,y1)\n// =0 if (x2,y2) lies on the line joining (x0,y0) and (x1,y1)\n// >0 if (x2,y2) lies on the right side of line joining (x0,y0) and (x1,y1)\n// source: http://geomalgorithms.com/a03-_inclusion.html\nfunction is_left(x0, y0, x1, y1, x2, y2) {\n  return ( ((x1 - x0) * (y2 - y0))  - ((x2 -  x0) * (y1 - y0)) );\n}\n\nfunction is_on_region_corner(px, py) {\n  var _via_region_edge = [-1, -1]; // region_id, corner_id [top-left=1,top-right=2,bottom-right=3,bottom-left=4]\n\n  for ( var i = 0; i < _via_canvas_regions.length; ++i ) {\n    var attr = _via_canvas_regions[i].shape_attributes;\n    var result = false;\n    _via_region_edge[0] = i;\n\n    switch ( attr['name'] ) {\n    case VIA_REGION_SHAPE.RECT:\n      result = is_on_rect_edge(attr['x'],\n                               attr['y'],\n                               attr['width'],\n                               attr['height'],\n                               px, py);\n      break;\n\n    case VIA_REGION_SHAPE.CIRCLE:\n      result = is_on_circle_edge(attr['cx'],\n                                 attr['cy'],\n                                 attr['r'],\n                                 px, py);\n      break;\n\n    case VIA_REGION_SHAPE.ELLIPSE:\n      result = is_on_ellipse_edge(attr['cx'],\n                                  attr['cy'],\n                                  attr['rx'],\n                                  attr['ry'],\n                                  attr['theta'],\n                                  px, py);\n      break;\n\n    case VIA_REGION_SHAPE.POLYLINE: // handled by polygon\n    case VIA_REGION_SHAPE.POLYGON:\n      result = is_on_polygon_vertex(attr['all_points_x'],\n                                    attr['all_points_y'],\n                                    px, py);\n      if ( result === 0 ) {\n        result = is_on_polygon_edge(attr['all_points_x'],\n                                    attr['all_points_y'],\n                                    px, py);\n      }\n      break;\n\n    case VIA_REGION_SHAPE.POINT:\n      // since there are no edges of a point\n      result = 0;\n      break;\n    }\n\n    if (result > 0) {\n      _via_region_edge[1] = result;\n      return _via_region_edge;\n    }\n  }\n  _via_region_edge[0] = -1;\n  return _via_region_edge;\n}\n\nfunction is_on_rect_edge(x, y, w, h, px, py) {\n  var dx0 = Math.abs(x - px);\n  var dy0 = Math.abs(y - py);\n  var dx1 = Math.abs(x + w - px);\n  var dy1 = Math.abs(y + h - py);\n  //[top-left=1,top-right=2,bottom-right=3,bottom-left=4]\n  if ( dx0 < VIA_REGION_EDGE_TOL &&\n       dy0 < VIA_REGION_EDGE_TOL ) {\n    return 1;\n  }\n  if ( dx1 < VIA_REGION_EDGE_TOL &&\n       dy0 < VIA_REGION_EDGE_TOL ) {\n    return 2;\n  }\n  if ( dx1 < VIA_REGION_EDGE_TOL &&\n       dy1 < VIA_REGION_EDGE_TOL ) {\n    return 3;\n  }\n\n  if ( dx0 < VIA_REGION_EDGE_TOL &&\n       dy1 < VIA_REGION_EDGE_TOL ) {\n    return 4;\n  }\n\n  var mx0 = Math.abs(x + w/2 - px);\n  var my0 = Math.abs(y + h/2 - py);\n  //[top-middle=5,right-middle=6,bottom-middle=7,left-middle=8]\n  if ( mx0 < VIA_REGION_EDGE_TOL &&\n       dy0 < VIA_REGION_EDGE_TOL ) {\n    return 5;\n  }\n  if ( dx1 < VIA_REGION_EDGE_TOL &&\n       my0 < VIA_REGION_EDGE_TOL ) {\n    return 6;\n  }\n  if ( mx0 < VIA_REGION_EDGE_TOL &&\n       dy1 < VIA_REGION_EDGE_TOL ) {\n    return 7;\n  }\n  if ( dx0 < VIA_REGION_EDGE_TOL &&\n       my0 < VIA_REGION_EDGE_TOL ) {\n    return 8;\n  }\n\n  return 0;\n}\n\nfunction is_on_circle_edge(cx, cy, r, px, py) {\n  var dx = cx - px;\n  var dy = cy - py;\n  if ( Math.abs(Math.sqrt( dx*dx + dy*dy ) - r) < VIA_REGION_EDGE_TOL ) {\n    var theta = Math.atan2( py - cy, px - cx );\n    if ( Math.abs(theta - (Math.PI/2)) < VIA_THETA_TOL ||\n         Math.abs(theta + (Math.PI/2)) < VIA_THETA_TOL) {\n      return 5;\n    }\n    if ( Math.abs(theta) < VIA_THETA_TOL ||\n         Math.abs(Math.abs(theta) - Math.PI) < VIA_THETA_TOL) {\n      return 6;\n    }\n\n    if ( theta > 0 && theta < (Math.PI/2) ) {\n      return 1;\n    }\n    if ( theta > (Math.PI/2) && theta < (Math.PI) ) {\n      return 4;\n    }\n    if ( theta < 0 && theta > -(Math.PI/2) ) {\n      return 2;\n    }\n    if ( theta < -(Math.PI/2) && theta > -Math.PI ) {\n      return 3;\n    }\n  } else {\n    return 0;\n  }\n}\n\nfunction is_on_ellipse_edge(cx, cy, rx, ry, rr, px, py) {\n  // Inverse rotation of pixel coordinates\n  px = px - cx;\n  py = py - cy;\n  var px_ = Math.cos(-rr) * px - Math.sin(-rr) * py;\n  var py_ = Math.sin(-rr) * px + Math.cos(-rr) * py;\n  px = px_ + cx;\n  py = py_ + cy;\n\n  var dx = (cx - px)/rx;\n  var dy = (cy - py)/ry;\n\n  if ( Math.abs(Math.sqrt( dx*dx + dy*dy ) - 1) < VIA_ELLIPSE_EDGE_TOL ) {\n    var theta = Math.atan2( py - cy, px - cx );\n    if ( Math.abs(theta - (Math.PI/2)) < VIA_THETA_TOL ||\n         Math.abs(theta + (Math.PI/2)) < VIA_THETA_TOL) {\n      return 5;\n    }\n    if ( Math.abs(theta) < VIA_THETA_TOL ||\n         Math.abs(Math.abs(theta) - Math.PI) < VIA_THETA_TOL) {\n      return 6;\n    }\n  } else {\n    return 0;\n  }\n}\n\nfunction is_on_polygon_vertex(all_points_x, all_points_y, px, py) {\n  var i, n;\n  n = all_points_x.length;\n\n  for ( i = 0; i < n; ++i ) {\n    if ( Math.abs(all_points_x[i] - px) < VIA_POLYGON_VERTEX_MATCH_TOL &&\n         Math.abs(all_points_y[i] - py) < VIA_POLYGON_VERTEX_MATCH_TOL ) {\n      return (VIA_POLYGON_RESIZE_VERTEX_OFFSET+i);\n    }\n  }\n  return 0;\n}\n\nfunction is_on_polygon_edge(all_points_x, all_points_y, px, py) {\n  var i, n, di, d;\n  n = all_points_x.length;\n  d = [];\n  for ( i = 0; i < n - 1; ++i )  {\n    di = dist_to_line(px, py, all_points_x[i], all_points_y[i], all_points_x[i+1], all_points_y[i+1]);\n    d.push(di);\n  }\n  // closing edge\n  di = dist_to_line(px, py, all_points_x[n-1], all_points_y[n-1], all_points_x[0], all_points_y[0]);\n  d.push(di);\n\n  var smallest_value = d[0];\n  var smallest_index = 0;\n  n = d.length;\n  for ( i = 1; i < n; ++i ) {\n    if ( d[i] < smallest_value ) {\n      smallest_value = d[i];\n      smallest_index = i;\n    }\n  }\n  if ( smallest_value < VIA_POLYGON_VERTEX_MATCH_TOL ) {\n    return (VIA_POLYGON_RESIZE_VERTEX_OFFSET + smallest_index);\n  } else {\n    return 0;\n  }\n}\n\nfunction is_point_inside_bounding_box(x, y, x1, y1, x2, y2) {\n  // ensure that (x1,y1) is top left and (x2,y2) is bottom right corner of rectangle\n  var rect = {};\n  if( x1 < x2 ) {\n    rect.x1 = x1;\n    rect.x2 = x2;\n  } else {\n    rect.x1 = x2;\n    rect.x2 = x1;\n  }\n  if ( y1 < y2 ) {\n    rect.y1 = y1;\n    rect.y2 = y2;\n  } else {\n    rect.y1 = y2;\n    rect.y2 = y1;\n  }\n\n  if ( x >= rect.x1 && x <= rect.x2 && y >= rect.y1 && y <= rect.y2 ) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction dist_to_line(x, y, x1, y1, x2, y2) {\n  if ( is_point_inside_bounding_box(x, y, x1, y1, x2, y2) ) {\n    var dy = y2 - y1;\n    var dx = x2 - x1;\n    var nr = Math.abs( dy*x - dx*y + x2*y1 - y2*x1 );\n    var dr = Math.sqrt( dx*dx + dy*dy );\n    var dist = nr / dr;\n    return Math.round(dist);\n  } else {\n    return Number.MAX_SAFE_INTEGER;\n  }\n}\n\nfunction rect_standardize_coordinates(d) {\n  // d[x0,y0,x1,y1]\n  // ensures that (d[0],d[1]) is top-left corner while\n  // (d[2],d[3]) is bottom-right corner\n  if ( d[0] > d[2] ) {\n    // swap\n    var t = d[0];\n    d[0] = d[2];\n    d[2] = t;\n  }\n\n  if ( d[1] > d[3] ) {\n    // swap\n    var t = d[1];\n    d[1] = d[3];\n    d[3] = t;\n  }\n}\n\nfunction rect_update_corner(corner_id, d, x, y, preserve_aspect_ratio) {\n  // pre-condition : d[x0,y0,x1,y1] is standardized\n  // post-condition : corner is moved ( d may not stay standardized )\n  if (preserve_aspect_ratio) {\n    switch(corner_id) {\n    case 1: // Fall-through // top-left\n    case 3: // bottom-right\n      var dx = d[2] - d[0];\n      var dy = d[3] - d[1];\n      var norm = Math.sqrt( dx*dx + dy*dy );\n      var nx = dx / norm; // x component of unit vector along the diagonal of rect\n      var ny = dy / norm; // y component\n      var proj = (x - d[0]) * nx + (y - d[1]) * ny;\n      var proj_x = nx * proj;\n      var proj_y = ny * proj;\n      // constrain (mx,my) to lie on a line connecting (x0,y0) and (x1,y1)\n      x = Math.round( d[0] + proj_x );\n      y = Math.round( d[1] + proj_y );\n      break;\n\n    case 2: // Fall-through // top-right\n    case 4: // bottom-left\n      var dx = d[2] - d[0];\n      var dy = d[1] - d[3];\n      var norm = Math.sqrt( dx*dx + dy*dy );\n      var nx = dx / norm; // x component of unit vector along the diagonal of rect\n      var ny = dy / norm; // y component\n      var proj = (x - d[0]) * nx + (y - d[3]) * ny;\n      var proj_x = nx * proj;\n      var proj_y = ny * proj;\n      // constrain (mx,my) to lie on a line connecting (x0,y0) and (x1,y1)\n      x = Math.round( d[0] + proj_x );\n      y = Math.round( d[3] + proj_y );\n      break;\n    }\n  }\n\n  switch(corner_id) {\n  case 1: // top-left\n    d[0] = x;\n    d[1] = y;\n    break;\n\n  case 3: // bottom-right\n    d[2] = x;\n    d[3] = y;\n    break;\n\n  case 2: // top-right\n    d[2] = x;\n    d[1] = y;\n    break;\n\n  case 4: // bottom-left\n    d[0] = x;\n    d[3] = y;\n    break;\n\n  case 5: // top-middle\n    d[1] = y;\n    break;\n\n  case 6: // right-middle\n    d[2] = x;\n    break;\n\n  case 7: // bottom-middle\n    d[3] = y;\n    break;\n\n  case 8: // left-middle\n    d[0] = x;\n    break;\n  }\n}\n\nfunction _via_update_ui_components() {\n  if ( ! _via_current_image_loaded ) {\n    return;\n  }\n\n  show_message('Updating user interface components.');\n  switch(_via_display_area_content_name) {\n  case VIA_DISPLAY_AREA_CONTENT_NAME.IMAGE_GRID:\n    image_grid_set_content_panel_height_fixed();\n    image_grid_set_content_to_current_group();\n    break;\n  case VIA_DISPLAY_AREA_CONTENT_NAME.IMAGE:\n    if ( !_via_is_window_resized && _via_current_image_loaded ) {\n      _via_is_window_resized = true;\n      _via_show_img(_via_image_index);\n\n      if (_via_is_canvas_zoomed) {\n        reset_zoom_level();\n      }\n    }\n    break;\n  }\n}\n\n//\n// Shortcut key handlers\n//\nfunction _via_window_keydown_handler(e) {\n  if ( e.target === document.body ) {\n    // process the keyboard event\n    _via_handle_global_keydown_event(e);\n  }\n}\n\n// global keys are active irrespective of element focus\n// arrow keys, n, p, s, o, space, d, Home, End, PageUp, PageDown\nfunction _via_handle_global_keydown_event(e) {\n  // zoom\n  if (_via_current_image_loaded) {\n    if ( e.key === \"+\") {\n      zoom_in();\n      return;\n    }\n\n    if ( e.key === \"=\") {\n      reset_zoom_level();\n      return;\n    }\n\n    if ( e.key === \"-\") {\n      zoom_out();\n      return;\n    }\n  }\n\n  if ( e.key === 'ArrowRight' || e.key === 'n') {\n    move_to_next_image();\n    e.preventDefault();\n    return;\n  }\n  if ( e.key === 'ArrowLeft' || e.key === 'p') {\n    move_to_prev_image();\n    e.preventDefault();\n    return;\n  }\n\n  if ( e.key === 'ArrowUp' ) {\n    region_visualisation_update('region_label', '__via_region_id__', 1);\n    e.preventDefault();\n    return;\n  }\n\n  if ( e.key === 'ArrowDown' ) {\n    region_visualisation_update('region_color', '__via_default_region_color__', -1);\n    e.preventDefault();\n    return;\n  }\n\n\n  if ( e.key === 'Home') {\n    show_first_image();\n    e.preventDefault();\n    return;\n  }\n  if ( e.key === 'End') {\n    show_last_image();\n    e.preventDefault();\n    return;\n  }\n  if ( e.key === 'PageDown') {\n    jump_to_next_image_block();\n    e.preventDefault();\n    return;\n  }\n  if ( e.key === 'PageUp') {\n    jump_to_prev_image_block();\n    e.preventDefault();\n    return;\n  }\n\n  if ( e.key === 'a' ) {\n    if ( _via_display_area_content_name === VIA_DISPLAY_AREA_CONTENT_NAME.IMAGE_GRID ) {\n      // select all in image grid\n      image_grid_group_toggle_select_all();\n    }\n  }\n\n  if ( e.key === 'Escape' ) {\n    e.preventDefault();\n    if ( _via_is_loading_current_image ) {\n      _via_cancel_current_image_loading();\n    }\n\n    if ( _via_is_user_resizing_region ) {\n      // cancel region resizing action\n      _via_is_user_resizing_region = false;\n    }\n\n    if ( _via_is_region_selected ) {\n      // clear all region selections\n      _via_is_region_selected = false;\n      _via_user_sel_region_id = -1;\n      toggle_all_regions_selection(false);\n    }\n\n    if ( _via_is_user_drawing_polygon ) {\n      _via_is_user_drawing_polygon = false;\n      _via_canvas_regions.splice(_via_current_polygon_region_id, 1);\n    }\n\n    if ( _via_is_user_drawing_region ) {\n      _via_is_user_drawing_region = false;\n    }\n\n    if ( _via_is_user_resizing_region ) {\n      _via_is_user_resizing_region = false\n    }\n\n    if ( _via_is_user_moving_region ) {\n      _via_is_user_moving_region = false\n    }\n\n    _via_redraw_reg_canvas();\n    return;\n  }\n\n  if ( e.key === ' ' ) { // Space key\n    if ( e.ctrlKey ) {\n      annotation_editor_toggle_on_image_editor();\n    } else {\n      annotation_editor_toggle_all_regions_editor();\n    }\n    e.preventDefault();\n    return;\n  }\n\n  if ( e.key === 'F1' ) { // F1 for help\n    set_display_area_content(VIA_DISPLAY_AREA_CONTENT_NAME.PAGE_GETTING_STARTED);\n    e.preventDefault();\n    return;\n  }\n  if ( e.key === 'F2' ) { // F2 for about\n    set_display_area_content(VIA_DISPLAY_AREA_CONTENT_NAME.PAGE_ABOUT);\n    e.preventDefault();\n    return;\n  }\n}\n\nfunction _via_reg_canvas_keyup_handler(e) {\n  if ( e.key === 'Control' ) {\n    _via_is_ctrl_pressed = false;\n  }\n}\n\nfunction _via_reg_canvas_keydown_handler(e) {\n  if ( e.key === 'Control' ) {\n    _via_is_ctrl_pressed = true;\n  }\n\n  if (_via_current_image_loaded) {\n    if ( e.key === 'Enter' ) {\n        if ( _via_current_shape === VIA_REGION_SHAPE.POLYLINE ||\n             _via_current_shape === VIA_REGION_SHAPE.POLYGON) {\n          _via_polyshape_finish_drawing();\n        }\n    }\n    if ( e.key === 'Backspace' ) {\n        if ( _via_current_shape === VIA_REGION_SHAPE.POLYLINE ||\n             _via_current_shape === VIA_REGION_SHAPE.POLYGON) {\n          _via_polyshape_delete_last_vertex();\n        }\n    }\n\n    if ( e.key === 'a' ) {\n      sel_all_regions();\n      e.preventDefault();\n      return;\n    }\n\n    if ( e.key === 'c' ) {\n      if (_via_is_region_selected ||\n          _via_is_all_region_selected) {\n        copy_sel_regions();\n      }\n      e.preventDefault();\n      return;\n    }\n\n    if ( e.key === 'v' ) {\n      paste_sel_regions_in_current_image();\n      e.preventDefault();\n      return;\n    }\n\n    if ( e.key === 'b' ) {\n      toggle_region_boundary_visibility();\n      e.preventDefault();\n      return;\n    }\n\n    if ( e.key === 'l' ) {\n      toggle_region_id_visibility();\n      e.preventDefault();\n      return;\n    }\n\n    if ( e.key === 'd' ) {\n      if ( _via_is_region_selected ||\n           _via_is_all_region_selected ) {\n        del_sel_regions();\n      }\n      e.preventDefault();\n      return;\n    }\n\n    if ( _via_is_region_selected ) {\n      if ( e.key === 'ArrowRight' ||\n           e.key === 'ArrowLeft'  ||\n           e.key === 'ArrowDown'  ||\n           e.key === 'ArrowUp' ) {\n        var del = 1;\n        if ( e.shiftKey ) {\n          del = 10;\n        }\n        var move_x = 0;\n        var move_y = 0;\n        switch( e.key ) {\n        case 'ArrowLeft':\n          move_x = -del;\n          break;\n        case 'ArrowUp':\n          move_y = -del;\n          break;\n        case 'ArrowRight':\n          move_x =  del;\n          break;\n        case 'ArrowDown':\n          move_y =  del;\n          break;\n        }\n        _via_move_selected_regions(move_x, move_y);\n        _via_redraw_reg_canvas();\n        e.preventDefault();\n        return;\n      }\n    }\n  }\n  _via_handle_global_keydown_event(e);\n}\n\nfunction _via_polyshape_finish_drawing() {\n  if ( _via_is_user_drawing_polygon ) {\n    // double click is used to indicate completion of\n    // polygon or polyline drawing action\n    var new_region_id = _via_current_polygon_region_id;\n    var new_region_shape = _via_current_shape;\n\n    var npts =  _via_canvas_regions[new_region_id].shape_attributes['all_points_x'].length;\n    if ( npts <=2 && new_region_shape === VIA_REGION_SHAPE.POLYGON ) {\n      show_message('For a polygon, you must define at least 3 points. ' +\n                   'Press [Esc] to cancel drawing operation.!');\n      return;\n    }\n    if ( npts <=1 && new_region_shape === VIA_REGION_SHAPE.POLYLINE ) {\n      show_message('A polyline must have at least 2 points. ' +\n                   'Press [Esc] to cancel drawing operation.!');\n      return;\n    }\n\n    var img_id = _via_image_id;\n    _via_current_polygon_region_id = -1;\n    _via_is_user_drawing_polygon = false;\n    _via_is_user_drawing_region = false;\n\n    _via_img_metadata[img_id].regions[new_region_id] = {}; // create placeholder\n    _via_polyshape_add_new_polyshape(img_id, new_region_shape, new_region_id);\n    select_only_region(new_region_id); // select new region\n    set_region_annotations_to_default_value( new_region_id );\n    annotation_editor_add_row( new_region_id );\n    annotation_editor_scroll_to_row( new_region_id );\n\n    _via_redraw_reg_canvas();\n    _via_reg_canvas.focus();\n  }\n  return;\n}\n\nfunction _via_polyshape_delete_last_vertex() {\n  if ( _via_is_user_drawing_polygon ) {\n    var npts = _via_canvas_regions[_via_current_polygon_region_id].shape_attributes['all_points_x'].length;\n    if ( npts > 0 ) {\n      _via_canvas_regions[_via_current_polygon_region_id].shape_attributes['all_points_x'].splice(npts - 1, 1);\n      _via_canvas_regions[_via_current_polygon_region_id].shape_attributes['all_points_y'].splice(npts - 1, 1);\n\n      _via_redraw_reg_canvas();\n      _via_reg_canvas.focus();\n    }\n  }\n}\n\nfunction _via_polyshape_add_new_polyshape(img_id, region_shape, region_id) {\n  // add all polygon points stored in _via_canvas_regions[]\n  var all_points_x = _via_canvas_regions[region_id].shape_attributes['all_points_x'].slice(0);\n  var all_points_y = _via_canvas_regions[region_id].shape_attributes['all_points_y'].slice(0);\n\n  var canvas_all_points_x = [];\n  var canvas_all_points_y = [];\n  var n = all_points_x.length;\n  var i;\n  for ( i = 0; i < n; ++i ) {\n    all_points_x[i] = Math.round( all_points_x[i] * _via_canvas_scale );\n    all_points_y[i] = Math.round( all_points_y[i] * _via_canvas_scale );\n\n    canvas_all_points_x[i] = Math.round( all_points_x[i] / _via_canvas_scale );\n    canvas_all_points_y[i] = Math.round( all_points_y[i] / _via_canvas_scale );\n  }\n\n  var polygon_region = new file_region();\n  polygon_region.shape_attributes['name'] = region_shape;\n  polygon_region.shape_attributes['all_points_x'] = all_points_x;\n  polygon_region.shape_attributes['all_points_y'] = all_points_y;\n  _via_img_metadata[img_id].regions[region_id] = polygon_region;\n\n  // update canvas\n  if ( img_id === _via_image_id ) {\n    _via_canvas_regions[region_id].shape_attributes['name'] = region_shape;\n    _via_canvas_regions[region_id].shape_attributes['all_points_x'] = canvas_all_points_x;\n    _via_canvas_regions[region_id].shape_attributes['all_points_y'] = canvas_all_points_y;\n  }\n}\n\nfunction del_sel_regions() {\n  if ( _via_display_area_content_name === VIA_DISPLAY_AREA_CONTENT_NAME.IMAGE_GRID ) {\n    return;\n  }\n\n  if ( !_via_current_image_loaded ) {\n    show_message('First load some images!');\n    return;\n  }\n\n  var del_region_count = 0;\n  if ( _via_is_all_region_selected ) {\n    del_region_count = _via_canvas_regions.length;\n    _via_canvas_regions.splice(0);\n    _via_img_metadata[_via_image_id].regions.splice(0);\n  } else {\n    var sorted_sel_reg_id = [];\n    for ( var i = 0; i < _via_canvas_regions.length; ++i ) {\n      if ( _via_region_selected_flag[i] ) {\n        sorted_sel_reg_id.push(i);\n        _via_region_selected_flag[i] = false;\n      }\n    }\n    sorted_sel_reg_id.sort( function(a,b) {\n      return (b-a);\n    });\n    for ( var i = 0; i < sorted_sel_reg_id.length; ++i ) {\n      _via_canvas_regions.splice( sorted_sel_reg_id[i], 1);\n      _via_img_metadata[_via_image_id].regions.splice( sorted_sel_reg_id[i], 1);\n      del_region_count += 1;\n    }\n\n    if ( sorted_sel_reg_id.length ) {\n      _via_reg_canvas.style.cursor = \"default\";\n    }\n  }\n\n  _via_is_all_region_selected = false;\n  _via_is_region_selected     = false;\n  _via_user_sel_region_id     = -1;\n\n  if ( _via_canvas_regions.length === 0 ) {\n    // all regions were deleted, hence clear region canvas\n    _via_clear_reg_canvas();\n  } else {\n    _via_redraw_reg_canvas();\n  }\n  _via_reg_canvas.focus();\n  annotation_editor_show();\n\n  show_message('Deleted ' + del_region_count + ' selected regions');\n}\n\nfunction sel_all_regions() {\n  if ( _via_display_area_content_name === VIA_DISPLAY_AREA_CONTENT_NAME.IMAGE_GRID ) {\n    image_grid_group_toggle_select_all();\n    return;\n  }\n\n  if (!_via_current_image_loaded) {\n    show_message('First load some images!');\n    return;\n  }\n\n  toggle_all_regions_selection(true);\n  _via_is_all_region_selected = true;\n  _via_redraw_reg_canvas();\n}\n\nfunction copy_sel_regions() {\n  if ( _via_display_area_content_name === VIA_DISPLAY_AREA_CONTENT_NAME.IMAGE_GRID ) {\n    return;\n  }\n\n  if (!_via_current_image_loaded) {\n    show_message('First load some images!');\n    return;\n  }\n\n  if (_via_is_region_selected ||\n      _via_is_all_region_selected) {\n    _via_copied_image_regions.splice(0);\n    for ( var i = 0; i < _via_img_metadata[_via_image_id].regions.length; ++i ) {\n      var img_region = _via_img_metadata[_via_image_id].regions[i];\n      var canvas_region = _via_canvas_regions[i];\n      if ( _via_region_selected_flag[i] ) {\n        _via_copied_image_regions.push( clone_image_region(img_region) );\n      }\n    }\n    show_message('Copied ' + _via_copied_image_regions.length +\n                 ' selected regions. Press Ctrl + v to paste');\n  } else {\n    show_message('Select a region first!');\n  }\n}\n\nfunction paste_sel_regions_in_current_image() {\n  if ( _via_display_area_content_name === VIA_DISPLAY_AREA_CONTENT_NAME.IMAGE_GRID ) {\n    return;\n  }\n\n  if ( !_via_current_image_loaded ) {\n    show_message('First load some images!');\n    return;\n  }\n\n  if ( _via_copied_image_regions.length ) {\n    var pasted_reg_count = 0;\n    for ( var i = 0; i < _via_copied_image_regions.length; ++i ) {\n      // ensure copied the regions are within this image's boundaries\n      var bbox = get_region_bounding_box( _via_copied_image_regions[i] );\n      if (bbox[2] < _via_current_image_width &&\n          bbox[3] < _via_current_image_height) {\n        var r = clone_image_region(_via_copied_image_regions[i]);\n        _via_img_metadata[_via_image_id].regions.push(r);\n\n        pasted_reg_count += 1;\n      }\n    }\n    _via_load_canvas_regions();\n    var discarded_reg_count = _via_copied_image_regions.length - pasted_reg_count;\n    show_message('Pasted ' + pasted_reg_count + ' regions. ' +\n                 'Discarded ' + discarded_reg_count + ' regions exceeding image boundary.');\n    _via_redraw_reg_canvas();\n    _via_reg_canvas.focus();\n  } else {\n    show_message('To paste a region, you first need to select a region and copy it!');\n  }\n}\n\nfunction paste_to_multiple_images_with_confirm() {\n  if ( _via_display_area_content_name === VIA_DISPLAY_AREA_CONTENT_NAME.IMAGE_GRID ) {\n    return;\n  }\n\n  if ( _via_copied_image_regions.length === 0 ) {\n    show_message('First copy some regions!');\n    return;\n  }\n\n  var config = {'title':'Paste Regions to Multiple Images' };\n  var input = { 'region_count': { type:'text', name:'Number of copied regions', value:_via_copied_image_regions.length, disabled:true },\n                'prev_next_count':{ type:'text', name:'Copy to (count format)<br><span style=\"font-size:0.8rem\">For example: to paste copied regions to the <i>previous 2 images</i> and <i>next 3 images</i>, type <strong>2,3</strong> in the textbox and to paste only in <i>next 5 images</i>, type <strong>0,5</strong></span>', placeholder:'2,3', disabled:false, size:30},\n                'img_index_list':{ type:'text', name:'Copy to (image index list)<br><span style=\"font-size:0.8rem\">For example: <strong>2-5,7,9</strong> pastes the copied regions to the images with the following id <i>2,3,4,5,7,9</i> and <strong>3,8,141</strong> pastes to the images with id <i>3,8 and 141</i></span>', placeholder:'2-5,7,9', disabled:false, size:30},\n                'regex':{ type:'text', name:'Copy to filenames matching a regular expression<br><span style=\"font-size:0.8rem\">For example: <strong>_large</strong> pastes the copied regions to all images whose filename contain the keyword <i>_large</i></span>', placeholder:'regular expression', disabled:false, size:30},\n                'include_region_attributes':{ type:'checkbox', name:'Paste also the region annotations', checked:true},\n              };\n\n  invoke_with_user_inputs(paste_to_multiple_images_confirmed, input, config);\n}\n\nfunction paste_to_multiple_images_confirmed(input) {\n  // keep a copy of user inputs for the undo operation\n  _via_paste_to_multiple_images_input = input;\n  var intersect = generate_img_index_list(input);\n  var i;\n  var total_pasted_region_count = 0;\n  for ( i = 0; i < intersect.length; i++ ) {\n    total_pasted_region_count += paste_regions( intersect[i] );\n  }\n\n  show_message('Pasted [' + total_pasted_region_count + '] regions ' +\n               'in ' + intersect.length + ' images');\n\n  if ( intersect.includes(_via_image_index) ) {\n    _via_load_canvas_regions();\n    _via_redraw_reg_canvas();\n    _via_reg_canvas.focus();\n  }\n  user_input_default_cancel_handler();\n}\n\nfunction paste_regions(img_index) {\n  var pasted_reg_count = 0;\n  if ( _via_copied_image_regions.length ) {\n    var img_id = _via_image_id_list[img_index];\n    var i;\n    for ( i = 0; i < _via_copied_image_regions.length; ++i ) {\n      var r = clone_image_region(_via_copied_image_regions[i]);\n      _via_img_metadata[img_id].regions.push(r);\n\n      pasted_reg_count += 1;\n    }\n  }\n  return pasted_reg_count;\n}\n\n\nfunction del_sel_regions_with_confirm() {\n  if ( _via_display_area_content_name === VIA_DISPLAY_AREA_CONTENT_NAME.IMAGE_GRID ) {\n    return;\n  }\n\n  if ( _via_copied_image_regions.length === 0 ) {\n    show_message('First copy some regions!');\n    return;\n  }\n\n  var prev_next_count, img_index_list, regex;\n  if ( _via_paste_to_multiple_images_input ) {\n    prev_next_count = _via_paste_to_multiple_images_input.prev_next_count.value;\n    img_index_list  = _via_paste_to_multiple_images_input.img_index_list.value;\n    regex = _via_paste_to_multiple_images_input.regex.value;\n  }\n\n  var config = {'title':'Undo Regions Pasted to Multiple Images' };\n  var input = { 'region_count': { type:'text', name:'Number of regions selected', value:_via_copied_image_regions.length, disabled:true },\n                'prev_next_count':{ type:'text', name:'Delete from (count format)<br><span style=\"font-size:0.8rem\">For example: to delete copied regions from the <i>previous 2 images</i> and <i>next 3 images</i>, type <strong>2,3</strong> in the textbox and to delete regions only in <i>next 5 images</i>, type <strong>0,5</strong></span>', placeholder:'2,3', disabled:false, size:30, value:prev_next_count},\n                'img_index_list':{ type:'text', name:'Delete from (image index list)<br><span style=\"font-size:0.8rem\">For example: <strong>2-5,7,9</strong> deletes the copied regions to the images with the following id <i>2,3,4,5,7,9</i> and <strong>3,8,141</strong> deletes regions from the images with id <i>3,8 and 141</i></span>', placeholder:'2-5,7,9', disabled:false, size:30, value:img_index_list},\n                'regex':{ type:'text', name:'Delete from filenames matching a regular expression<br><span style=\"font-size:0.8rem\">For example: <strong>_large</strong> deletes the copied regions from all images whose filename contain the keyword <i>_large</i></span>', placeholder:'regular expression', disabled:false, size:30, value:regex},\n              };\n\n  invoke_with_user_inputs(del_sel_regions_confirmed, input, config);\n}\n\nfunction del_sel_regions_confirmed(input) {\n  user_input_default_cancel_handler();\n  var intersect = generate_img_index_list(input);\n  var i;\n  var total_deleted_region_count = 0;\n  for ( i = 0; i < intersect.length; i++ ) {\n    total_deleted_region_count += delete_regions( intersect[i] );\n  }\n\n  show_message('Deleted [' + total_deleted_region_count + '] regions ' +\n               'in ' + intersect.length + ' images');\n\n  if ( intersect.includes(_via_image_index) ) {\n    _via_load_canvas_regions();\n    _via_redraw_reg_canvas();\n    _via_reg_canvas.focus();\n  }\n}\n\nfunction delete_regions(img_index) {\n  var del_region_count = 0;\n  if ( _via_copied_image_regions.length ) {\n    var img_id = _via_image_id_list[img_index];\n    var i;\n    for ( i = 0; i < _via_copied_image_regions.length; ++i ) {\n      var copied_region_shape_str = JSON.stringify(_via_copied_image_regions[i].shape_attributes);\n      var j;\n      // start from last region in order to delete the last pasted region\n      for ( j = _via_img_metadata[img_id].regions.length-1; j >= 0; --j ) {\n        if ( JSON.stringify(_via_img_metadata[img_id].regions[j].shape_attributes) === copied_region_shape_str ) {\n          _via_img_metadata[img_id].regions.splice( j, 1);\n          del_region_count += 1;\n          break; // delete only one matching region\n        }\n      }\n    }\n  }\n  return del_region_count;\n}\n\nfunction show_first_image() {\n  if ( _via_display_area_content_name === VIA_DISPLAY_AREA_CONTENT_NAME.IMAGE_GRID ) {\n    if ( _via_image_grid_group_var.length ) {\n      image_grid_group_prev( { 'value':0 } ); // simulate button click\n    } else {\n      show_message('First, create groups by selecting items from \"Group by\" dropdown list');\n    }\n    return;\n  }\n\n  if (_via_img_count > 0) {\n    _via_show_img( _via_img_fn_list_img_index_list[0] );\n  }\n}\n\nfunction show_last_image() {\n  if ( _via_display_area_content_name === VIA_DISPLAY_AREA_CONTENT_NAME.IMAGE_GRID ) {\n    if ( _via_image_grid_group_var.length ) {\n      image_grid_group_prev( { 'value':_via_image_grid_group_var.length-1 } ); // simulate button click\n    } else {\n      show_message('First, create groups by selecting items from \"Group by\" dropdown list');\n    }\n    return;\n  }\n\n  if (_via_img_count > 0) {\n    var last_img_index = _via_img_fn_list_img_index_list.length - 1;\n    _via_show_img( _via_img_fn_list_img_index_list[ last_img_index ] );\n  }\n}\n\nfunction jump_image_block_get_count() {\n  var n = _via_img_fn_list_img_index_list.length;\n  if ( n < 20 ) {\n    return 2;\n  }\n  if ( n < 100 ) {\n    return 10;\n  }\n  if ( n < 1000 ) {\n    return 25;\n  }\n  if ( n < 5000 ) {\n    return 50;\n  }\n  if ( n < 10000 ) {\n    return 100;\n  }\n  if ( n < 50000 ) {\n    return 500;\n  }\n\n  return Math.round( n / 50 );\n}\n\nfunction jump_to_next_image_block() {\n  if ( _via_display_area_content_name === VIA_DISPLAY_AREA_CONTENT_NAME.IMAGE_GRID ) {\n    return;\n  }\n\n  var jump_count = jump_image_block_get_count();\n  if ( jump_count > 1 ) {\n    var current_img_index = _via_image_index;\n    if ( _via_img_fn_list_img_index_list.includes( current_img_index ) ) {\n      var list_index = _via_img_fn_list_img_index_list.indexOf( current_img_index );\n      var next_list_index = list_index + jump_count;\n      if ( (next_list_index + 1) > _via_img_fn_list_img_index_list.length ) {\n        next_list_index = 0;\n      }\n      var next_img_index = _via_img_fn_list_img_index_list[next_list_index];\n      _via_show_img(next_img_index);\n    }\n  } else {\n    move_to_next_image();\n  }\n}\n\nfunction jump_to_prev_image_block() {\n  if ( _via_display_area_content_name === VIA_DISPLAY_AREA_CONTENT_NAME.IMAGE_GRID ) {\n    return;\n  }\n\n  var jump_count = jump_image_block_get_count();\n  if ( jump_count > 1 ) {\n    var current_img_index = _via_image_index;\n    if ( _via_img_fn_list_img_index_list.includes( current_img_index ) ) {\n      var list_index = _via_img_fn_list_img_index_list.indexOf( current_img_index );\n      var prev_list_index = list_index - jump_count;\n      if ( prev_list_index < 0 ) {\n        prev_list_index = _via_img_fn_list_img_index_list.length - 1;\n      }\n      var prev_img_index = _via_img_fn_list_img_index_list[prev_list_index];\n      _via_show_img(prev_img_index);\n    }\n  } else {\n    move_to_prev_image();\n  }\n}\n\nfunction move_to_prev_image() {\n  if ( _via_display_area_content_name === VIA_DISPLAY_AREA_CONTENT_NAME.IMAGE_GRID ) {\n    if ( _via_image_grid_group_var.length ) {\n      var last_group_index = _via_image_grid_group_var.length - 1;\n      image_grid_group_prev( { 'value':last_group_index } ); // simulate button click\n    } else {\n      show_message('First, create groups by selecting items from \"Group by\" dropdown list');\n    }\n    return;\n  }\n\n  if (_via_img_count > 0) {\n    var current_img_index = _via_image_index;\n    if ( _via_img_fn_list_img_index_list.includes( current_img_index ) ) {\n      var list_index = _via_img_fn_list_img_index_list.indexOf( current_img_index );\n      var next_list_index = list_index - 1;\n      if ( next_list_index === -1 ) {\n        next_list_index = _via_img_fn_list_img_index_list.length - 1;\n      }\n      var next_img_index = _via_img_fn_list_img_index_list[next_list_index];\n      _via_show_img(next_img_index);\n    } else {\n      if ( _via_img_fn_list_img_index_list.length === 0 ) {\n        show_message('Filtered file list does not any files!');\n      } else {\n        _via_show_img( _via_img_fn_list_img_index_list[0] );\n      }\n    }\n\n    if (typeof _via_hook_prev_image === 'function') {\n      _via_hook_prev_image(current_img_index);\n    }\n  }\n}\n\nfunction move_to_next_image() {\n  if ( _via_display_area_content_name === VIA_DISPLAY_AREA_CONTENT_NAME.IMAGE_GRID ) {\n    if ( _via_image_grid_group_var.length ) {\n      var last_group_index = _via_image_grid_group_var.length - 1;\n      image_grid_group_next( { 'value':last_group_index } ); // simulate button click\n    } else {\n      show_message('First, create groups by selecting items from \"Group by\" dropdown list');\n    }\n    return;\n  }\n\n  if (_via_img_count > 0) {\n    var current_img_index = _via_image_index;\n    if ( _via_img_fn_list_img_index_list.includes( current_img_index ) ) {\n      var list_index = _via_img_fn_list_img_index_list.indexOf( current_img_index );\n      var next_list_index = list_index + 1;\n      if ( next_list_index === _via_img_fn_list_img_index_list.length ) {\n        next_list_index = 0;\n      }\n      var next_img_index = _via_img_fn_list_img_index_list[next_list_index];\n      _via_show_img(next_img_index);\n    } else {\n      if ( _via_img_fn_list_img_index_list.length === 0 ) {\n        show_message('Filtered file list does not contain any files!');\n      } else {\n        _via_show_img( _via_img_fn_list_img_index_list[0] );\n      }\n    }\n\n    if (typeof _via_hook_next_image === 'function') {\n      _via_hook_next_image(current_img_index);\n    }\n  }\n}\n\nfunction set_zoom(zoom_level_index) {\n  if ( zoom_level_index === VIA_CANVAS_DEFAULT_ZOOM_LEVEL_INDEX ) {\n    _via_is_canvas_zoomed = false;\n    _via_canvas_zoom_level_index = VIA_CANVAS_DEFAULT_ZOOM_LEVEL_INDEX;\n  } else {\n    _via_is_canvas_zoomed = true;\n    _via_canvas_zoom_level_index = zoom_level_index;\n  }\n\n  var zoom_scale = VIA_CANVAS_ZOOM_LEVELS[_via_canvas_zoom_level_index];\n  set_all_canvas_scale(zoom_scale);\n  var canvas_w = ( _via_current_image.naturalWidth  * zoom_scale ) / _via_canvas_scale_without_zoom;\n  var canvas_h = ( _via_current_image.naturalHeight * zoom_scale ) / _via_canvas_scale_without_zoom;\n  set_all_canvas_size(canvas_w, canvas_h);\n  _via_canvas_scale = _via_canvas_scale_without_zoom / zoom_scale;\n  _via_canvas_scale = _via_canvas_scale_without_zoom / zoom_scale;\n\n  if ( zoom_scale === 1 ) {\n    VIA_REGION_POINT_RADIUS = VIA_REGION_POINT_RADIUS_DEFAULT;\n  } else {\n    if ( zoom_scale > 1 ) {\n      VIA_REGION_POINT_RADIUS = VIA_REGION_POINT_RADIUS_DEFAULT * zoom_scale;\n    }\n  }\n\n  _via_load_canvas_regions(); // image to canvas space transform\n  _via_redraw_reg_canvas();\n  _via_reg_canvas.focus();\n  update_vertical_space();\n}\n\nfunction reset_zoom_level() {\n  if ( _via_display_area_content_name === VIA_DISPLAY_AREA_CONTENT_NAME.IMAGE_GRID ) {\n    image_grid_image_size_reset();\n    show_message('Zoom reset');\n    return;\n  }\n\n  if (!_via_current_image_loaded) {\n    show_message('First load some images!');\n    return;\n  }\n\n  if (_via_is_canvas_zoomed) {\n    set_zoom(VIA_CANVAS_DEFAULT_ZOOM_LEVEL_INDEX);\n    show_message('Zoom reset');\n  } else {\n    show_message('Cannot reset zoom because image zoom has not been applied!');\n  }\n  update_vertical_space();\n}\n\nfunction zoom_in() {\n  if ( _via_display_area_content_name === VIA_DISPLAY_AREA_CONTENT_NAME.IMAGE_GRID ) {\n    image_grid_image_size_increase();\n    show_message('Increased size of images shown in image grid');\n    return;\n  }\n\n  if (!_via_current_image_loaded) {\n    show_message('First load some images!');\n    return;\n  }\n\n  if ( _via_is_user_drawing_polygon || _via_is_user_drawing_region ) {\n    return;\n  }\n\n  if (_via_canvas_zoom_level_index === (VIA_CANVAS_ZOOM_LEVELS.length-1)) {\n    show_message('Further zoom-in not possible');\n  } else {\n    var new_zoom_level_index = _via_canvas_zoom_level_index + 1;\n    set_zoom( new_zoom_level_index );\n    show_message('Zoomed in to level ' + VIA_CANVAS_ZOOM_LEVELS[_via_canvas_zoom_level_index] + 'X');\n  }\n}\n\nfunction zoom_out() {\n  if ( _via_display_area_content_name === VIA_DISPLAY_AREA_CONTENT_NAME.IMAGE_GRID ) {\n    image_grid_image_size_decrease();\n    show_message('Reduced size of images shown in image grid');\n    return;\n  }\n\n  if (!_via_current_image_loaded) {\n    show_message('First load some images!');\n    return;\n  }\n\n  if ( _via_is_user_drawing_polygon || _via_is_user_drawing_region ) {\n    return;\n  }\n\n  if (_via_canvas_zoom_level_index === 0) {\n    show_message('Further zoom-out not possible');\n  } else {\n    var new_zoom_level_index = _via_canvas_zoom_level_index - 1;\n    set_zoom( new_zoom_level_index );\n    show_message('Zoomed out to level ' + VIA_CANVAS_ZOOM_LEVELS[_via_canvas_zoom_level_index] + 'X');\n  }\n}\n\nfunction toggle_region_boundary_visibility() {\n  if ( _via_display_area_content_name === VIA_DISPLAY_AREA_CONTENT_NAME.IMAGE ) {\n    _via_is_region_boundary_visible = !_via_is_region_boundary_visible;\n    _via_redraw_reg_canvas();\n    _via_reg_canvas.focus();\n  }\n\n  if ( _via_display_area_content_name === VIA_DISPLAY_AREA_CONTENT_NAME.IMAGE_GRID ) {\n    if ( _via_settings.ui.image_grid.show_region_shape ) {\n      _via_settings.ui.image_grid.show_region_shape = false;\n      document.getElementById('image_grid_content_rshape').innerHTML = '';\n    } else {\n      _via_settings.ui.image_grid.show_region_shape = true;\n      image_grid_page_show_all_regions();\n    }\n  }\n}\n\nfunction toggle_region_id_visibility() {\n  _via_is_region_id_visible = !_via_is_region_id_visible;\n  _via_redraw_reg_canvas();\n  _via_reg_canvas.focus();\n}\n\nfunction toggle_region_info_visibility() {\n  var elem = document.getElementById('region_info');\n  // toggle between displaying and not displaying\n  if ( elem.classList.contains('display_none') ) {\n    elem.classList.remove('display_none');\n    _via_is_region_info_visible = true;\n  } else {\n    elem.classList.add('display_none');\n    _via_is_region_info_visible = false;\n  }\n}\n\n//\n// Mouse wheel event listener\n//\nfunction _via_reg_canvas_mouse_wheel_listener(e) {\n  if (!_via_current_image_loaded) {\n    return;\n  }\n\n  if ( e.ctrlKey ) {\n    // perform zoom\n    if (e.deltaY < 0) {\n      zoom_in();\n    } else {\n      zoom_out();\n    }\n    e.preventDefault();\n  }\n}\n\nfunction region_visualisation_update(type, default_id, next_offset) {\n  var attr_list = [ default_id ];\n  attr_list = attr_list.concat(Object.keys(_via_attributes['region']));\n  var n = attr_list.length;\n  var current_index = attr_list.indexOf(_via_settings.ui.image[type]);\n  var new_index;\n  if ( current_index !== -1 ) {\n    new_index = current_index + next_offset;\n\n    if ( new_index < 0 ) {\n      new_index = n + new_index;\n    }\n    if ( new_index >= n ) {\n      new_index = new_index - n;\n    }\n    switch(type) {\n    case 'region_label':\n      _via_settings.ui.image.region_label = attr_list[new_index];\n      _via_redraw_reg_canvas();\n      break;\n    case 'region_color':\n      _via_settings.ui.image.region_color = attr_list[new_index];\n      _via_regions_group_color_init();\n      _via_redraw_reg_canvas();\n    }\n\n    var type_str = type.replace('_', ' ');\n    if ( _via_settings.ui.image[type].startsWith('__via') ) {\n      show_message(type_str + ' cleared');\n    } else {\n      show_message(type_str + ' set to region attribute [' + _via_settings.ui.image[type] + ']');\n    }\n  }\n}\n\n//\n// left sidebar toolbox maintainer\n//\nfunction leftsidebar_toggle() {\n  var leftsidebar = document.getElementById('leftsidebar');\n  if ( leftsidebar.style.display === 'none' ) {\n    leftsidebar.style.display = 'table-cell';\n    document.getElementById('leftsidebar_collapse_panel').style.display = 'none';\n  } else {\n    leftsidebar.style.display = 'none';\n    document.getElementById('leftsidebar_collapse_panel').style.display = 'table-cell';\n  }\n  _via_update_ui_components();\n}\n\nfunction leftsidebar_increase_width() {\n  var leftsidebar = document.getElementById('leftsidebar');\n  var new_width = _via_settings.ui.leftsidebar_width + VIA_LEFTSIDEBAR_WIDTH_CHANGE;\n  leftsidebar.style.width = new_width + 'rem';\n  _via_settings.ui.leftsidebar_width = new_width;\n  if ( _via_current_image_loaded ) {\n    _via_show_img(_via_image_index);\n  }\n}\n\nfunction leftsidebar_decrease_width() {\n  var leftsidebar = document.getElementById('leftsidebar');\n  var new_width = _via_settings.ui.leftsidebar_width - VIA_LEFTSIDEBAR_WIDTH_CHANGE;\n  if ( new_width >= 5 ) {\n    leftsidebar.style.width = new_width + 'rem';\n    _via_settings.ui.leftsidebar_width = new_width;\n    if ( _via_current_image_loaded ) {\n      _via_show_img(_via_image_index);\n    }\n  }\n}\n\nfunction leftsidebar_show() {\n  var leftsidebar = document.getElementById('leftsidebar');\n  leftsidebar.style.display = 'table-cell';\n  document.getElementById('leftsidebar_collapse_panel').style.display = 'none';\n}\n\n// source: https://www.w3schools.com/howto/howto_js_accordion.asp\nfunction init_leftsidebar_accordion() {\n  var leftsidebar = document.getElementById('leftsidebar');\n  leftsidebar.style.width = _via_settings.ui.leftsidebar_width + 'rem';\n\n  var acc = document.getElementsByClassName('leftsidebar_accordion');\n  var i;\n  for ( i = 0; i < acc.length; ++i ) {\n    acc[i].addEventListener('click', function() {\n      update_vertical_space();\n      this.classList.toggle('active');\n      this.nextElementSibling.classList.toggle('show');\n\n      switch( this.innerHTML ) {\n      case 'Attributes':\n        update_attributes_update_panel();\n        break;\n      case 'Project':\n        update_img_fn_list();\n        break;\n      }\n    });\n  }\n}\n\n//\n// image filename list shown in leftsidebar panel\n//\nfunction is_img_fn_list_visible() {\n  return img_fn_list_panel.classList.contains('show');\n}\n\nfunction img_loading_spinbar(image_index, show) {\n  var panel = document.getElementById('project_panel_title');\n  if ( show ) {\n    panel.innerHTML = 'Project <span style=\"margin-left:1rem;\" class=\"loading_spinbox\"></span>';\n  } else {\n    panel.innerHTML = 'Project';\n  }\n}\n\nfunction update_img_fn_list() {\n  var regex = document.getElementById('img_fn_list_regex').value;\n  var p = document.getElementById('filelist_preset_filters_list');\n  if ( regex === '' || regex === null ) {\n    if ( p.selectedIndex === 0 ) {\n      // show all files\n      _via_img_fn_list_html = [];\n      _via_img_fn_list_img_index_list = [];\n      _via_img_fn_list_html.push('<ul>');\n      for ( var i=0; i < _via_image_filename_list.length; ++i ) {\n        _via_img_fn_list_html.push( img_fn_list_ith_entry_html(i) );\n        _via_img_fn_list_img_index_list.push(i);\n      }\n      _via_img_fn_list_html.push('</ul>');\n      img_fn_list.innerHTML = _via_img_fn_list_html.join('');\n      img_fn_list_scroll_to_current_file();\n    } else {\n      // filter according to preset filters\n      img_fn_list_onpresetfilter_select();\n    }\n  } else {\n    img_fn_list_generate_html(regex);\n    img_fn_list.innerHTML = _via_img_fn_list_html.join('');\n    img_fn_list_scroll_to_current_file();\n  }\n}\n\nfunction img_fn_list_onregex() {\n  var regex = document.getElementById('img_fn_list_regex').value;\n  img_fn_list_generate_html( regex );\n  img_fn_list.innerHTML = _via_img_fn_list_html.join('');\n  img_fn_list_scroll_to_current_file();\n\n  // select 'regex' in the predefined filter list\n  var p = document.getElementById('filelist_preset_filters_list');\n  if ( regex === '' ) {\n    p.selectedIndex = 0;\n  } else {\n    var i;\n    for ( i=0; i<p.options.length; ++i ) {\n      if ( p.options[i].value === 'regex' ) {\n        p.selectedIndex = i;\n        break;\n      }\n    }\n  }\n}\n\nfunction img_fn_list_onpresetfilter_select() {\n  var p = document.getElementById('filelist_preset_filters_list');\n  var filter = p.options[p.selectedIndex].value;\n  switch(filter) {\n  case 'all':\n    document.getElementById('img_fn_list_regex').value = '';\n    img_fn_list_generate_html();\n    img_fn_list.innerHTML = _via_img_fn_list_html.join('');\n    img_fn_list_scroll_to_current_file();\n    break;\n  case 'regex':\n    document.getElementById('img_fn_list_regex').focus();\n    break;\n  default:\n    _via_img_fn_list_html = [];\n    _via_img_fn_list_img_index_list = [];\n    _via_img_fn_list_html.push('<ul>');\n    var i;\n    for ( i=0; i < _via_image_filename_list.length; ++i ) {\n      var img_id = _via_image_id_list[i];\n      var add_to_list = false;\n      switch(filter) {\n      case 'files_without_region':\n        if ( _via_img_metadata[img_id].regions.length === 0 ) {\n          add_to_list = true;\n        }\n        break;\n      case 'files_missing_region_annotations':\n        if ( is_region_annotation_missing(img_id) ) {\n          add_to_list = true;\n        }\n        break;\n      case 'files_missing_file_annotations':\n        if ( is_file_annotation_missing(img_id) ) {\n          add_to_list = true;\n        }\n        break;\n      case 'files_error_loading':\n        if ( _via_image_load_error[i] === true ) {\n          add_to_list = true;\n        }\n      }\n      if ( add_to_list ) {\n        _via_img_fn_list_html.push( img_fn_list_ith_entry_html(i) );\n        _via_img_fn_list_img_index_list.push(i);\n      }\n    }\n    _via_img_fn_list_html.push('</ul>');\n    img_fn_list.innerHTML = _via_img_fn_list_html.join('');\n    img_fn_list_scroll_to_current_file();\n    break;\n  }\n}\n\nfunction is_region_annotation_missing(img_id) {\n  var region_attribute;\n  var i;\n  for ( i = 0; i < _via_img_metadata[img_id].regions.length; ++i ) {\n    for ( region_attribute in _via_attributes['region'] ) {\n      if ( _via_img_metadata[img_id].regions[i].region_attributes.hasOwnProperty(region_attribute) ) {\n        if ( _via_img_metadata[img_id].regions[i].region_attributes[region_attribute] === '' ) {\n          return true;\n        }\n      } else {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nfunction is_file_annotation_missing(img_id) {\n  var file_attribute;\n  for ( file_attribute in _via_attributes['file'] ) {\n    if ( _via_img_metadata[img_id].file_attributes.hasOwnProperty(file_attribute) ) {\n      if ( _via_img_metadata[img_id].file_attributes[file_attribute] === '' ) {\n        return true;\n      }\n    } else {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction img_fn_list_ith_entry_selected(img_index, is_selected) {\n  if ( is_selected ) {\n    img_fn_list_ith_entry_add_css_class(img_index, 'sel');\n  } else {\n    img_fn_list_ith_entry_remove_css_class(img_index, 'sel');\n  }\n}\n\nfunction img_fn_list_ith_entry_error(img_index, is_error) {\n  if ( is_error ) {\n    img_fn_list_ith_entry_add_css_class(img_index, 'error');\n  } else {\n    img_fn_list_ith_entry_remove_css_class(img_index, 'error');\n  }\n}\n\nfunction img_fn_list_ith_entry_add_css_class(img_index, classname) {\n  var li = document.getElementById('fl' + img_index);\n  if ( li && ! li.classList.contains(classname)  ) {\n    li.classList.add(classname);\n  }\n}\n\nfunction img_fn_list_ith_entry_remove_css_class(img_index, classname) {\n  var li = document.getElementById('fl' + img_index);\n  if ( li && li.classList.contains(classname) ) {\n    li.classList.remove(classname);\n  }\n}\n\nfunction img_fn_list_clear_all_style() {\n  var cn = document.getElementById('img_fn_list').childNodes[0].childNodes;\n  var i, j;\n  var n = cn.length;\n  var nclass;\n  for ( i = 0; i < n; ++i ) {\n    //cn[i].classList = []; // throws error in Edge browser\n    nclass = cn[i].classList.length;\n    if ( nclass ) {\n      for ( j = 0; j < nclass; ++j ) {\n        cn[i].classList.remove( cn[i].classList.item(j) );\n      }\n    }\n  }\n}\n\nfunction img_fn_list_clear_css_classname(classname) {\n  var cn = document.getElementById('img_fn_list').childNodes[0].childNodes;\n  var i;\n  var n = cn.length;\n  for ( i = 0; i < n; ++i ) {\n    if ( cn[i].classList.contains(classname) ) {\n      cn[i].classList.remove(classname);\n    }\n  }\n}\n\nfunction img_fn_list_ith_entry_html(i) {\n  var htmli = '';\n  var filename = _via_image_filename_list[i];\n  if ( is_url(filename) ) {\n    filename = filename.substr(0,4) + '...' + get_filename_from_url(filename);\n  }\n\n  htmli += '<li id=\"fl' + i + '\"';\n  if ( _via_display_area_content_name === VIA_DISPLAY_AREA_CONTENT_NAME.IMAGE_GRID ) {\n    if ( _via_image_grid_page_img_index_list.includes(i) ) {\n      // highlight images being shown in image grid\n      htmli += ' class=\"sel\"';\n    }\n\n  } else {\n    if ( i === _via_image_index ) {\n      // highlight the current entry\n      htmli += ' class=\"sel\"';\n    }\n  }\n  htmli += ' onclick=\"jump_to_image(' + (i) + ')\" title=\"' + _via_image_filename_list[i] + '\">[' + (i+1) + '] ' + decodeURIComponent(filename) + '</li>';\n  return htmli;\n}\n\nfunction img_fn_list_generate_html(regex) {\n  _via_img_fn_list_html = [];\n  _via_img_fn_list_img_index_list = [];\n  _via_img_fn_list_html.push('<ul>');\n  for ( var i=0; i < _via_image_filename_list.length; ++i ) {\n    var filename = _via_image_filename_list[i];\n    if ( filename.match(regex) !== null ) {\n      _via_img_fn_list_html.push( img_fn_list_ith_entry_html(i) );\n      _via_img_fn_list_img_index_list.push(i);\n    }\n  }\n  _via_img_fn_list_html.push('</ul>');\n}\n\nfunction img_fn_list_scroll_to_current_file() {\n  img_fn_list_scroll_to_file( _via_image_index );\n}\n\nfunction img_fn_list_scroll_to_file(file_index) {\n  if( _via_img_fn_list_img_index_list.includes(file_index) ) {\n    var sel_file     = document.getElementById( 'fl' + file_index );\n    var panel_height = img_fn_list.clientHeight - 20;\n    var window_top    = img_fn_list.scrollTop;\n    var window_bottom = img_fn_list.scrollTop + panel_height\n    if ( sel_file.offsetTop > window_top ) {\n      if ( sel_file.offsetTop > window_bottom ) {\n        img_fn_list.scrollTop = sel_file.offsetTop;\n      }\n    } else {\n      img_fn_list.scrollTop = sel_file.offsetTop - panel_height;\n    }\n  }\n}\n\nfunction toggle_img_fn_list_visibility() {\n  leftsidebar_show();\n  document.getElementById('img_fn_list_panel').classList.toggle('show');\n  document.getElementById('project_panel_title').classList.toggle('active');\n}\n\nfunction toggle_attributes_editor() {\n  leftsidebar_show();\n  document.getElementById('attributes_editor_panel').classList.toggle('show');\n  document.getElementById('attributes_editor_panel_title').classList.toggle('active');\n}\n\n// this vertical spacer is needed to allow scrollbar to show\n// items like Keyboard Shortcut hidden under the attributes panel\nfunction update_vertical_space() {\n  var panel = document.getElementById('vertical_space');\n  var aepanel = document.getElementById('annotation_editor_panel');\n  panel.style.height = (aepanel.offsetHeight + 40) + 'px';\n}\n\n//\n// region and file attributes update panel\n//\nfunction attribute_update_panel_set_active_button() {\n  var attribute_type;\n  for ( attribute_type in _via_attributes ) {\n    var bid = 'button_show_' + attribute_type + '_attributes';\n    document.getElementById(bid).classList.remove('active');\n  }\n  var bid = 'button_show_' + _via_attribute_being_updated + '_attributes';\n  document.getElementById(bid).classList.add('active');\n}\n\nfunction show_region_attributes_update_panel() {\n  _via_attribute_being_updated = 'region';\n  var rattr_list = Object.keys(_via_attributes['region']);\n  if ( rattr_list.length ) {\n    _via_current_attribute_id = rattr_list[0];\n  } else {\n    _via_current_attribute_id = '';\n  }\n  update_attributes_update_panel();\n  attribute_update_panel_set_active_button();\n\n}\n\nfunction show_file_attributes_update_panel() {\n  _via_attribute_being_updated = 'file';\n  var fattr_list = Object.keys(_via_attributes['file']);\n  if ( fattr_list.length ) {\n    _via_current_attribute_id = fattr_list[0];\n  } else {\n    _via_current_attribute_id = '';\n  }\n  update_attributes_update_panel();\n  attribute_update_panel_set_active_button();\n}\n\nfunction update_attributes_name_list() {\n  var p = document.getElementById('attributes_name_list');\n  p.innerHTML = '';\n\n  var attr;\n  for ( attr in _via_attributes[_via_attribute_being_updated] ) {\n    var option = document.createElement('option');\n    option.setAttribute('value', attr)\n    option.innerHTML = attr;\n    if ( attr === _via_current_attribute_id ) {\n      option.setAttribute('selected', 'selected');\n    }\n    p.appendChild(option);\n  }\n}\n\nfunction update_attributes_update_panel() {\n  if ( document.getElementById('attributes_editor_panel').classList.contains('show') ) {\n    update_attributes_name_list();\n    show_attribute_properties();\n    show_attribute_options();\n  }\n}\n\nfunction update_attribute_properties_panel() {\n  if ( document.getElementById('attributes_editor_panel').classList.contains('show') ) {\n    show_attribute_properties();\n    show_attribute_options();\n  }\n}\n\nfunction show_attribute_properties() {\n  var attr_list = document.getElementById('attributes_name_list');\n  document.getElementById('attribute_properties').innerHTML = '';\n\n  if ( attr_list.options.length === 0 ) {\n    return;\n  }\n\n  if ( typeof(_via_current_attribute_id) === 'undefined' || _via_current_attribute_id === '' ) {\n    _via_current_attribute_id = attr_list.options[0].value;\n  }\n\n  var attr_id = _via_current_attribute_id;\n  var attr_type = _via_attribute_being_updated;\n  var attr_input_type = _via_attributes[attr_type][attr_id].type;\n  var attr_desc = _via_attributes[attr_type][attr_id].description;\n\n  attribute_property_add_input_property('Name of attribute (appears in exported annotations)',\n                                        'Name',\n                                        attr_id,\n                                        'attribute_name');\n  attribute_property_add_input_property('Description of attribute (shown to user during annotation session)',\n                                        'Desc.',\n                                        attr_desc,\n                                        'attribute_description');\n\n  if ( attr_input_type === 'text' ) {\n    var attr_default_value = _via_attributes[attr_type][attr_id].default_value;\n    attribute_property_add_input_property('Default value of this attribute',\n                                          'Def.',\n                                          attr_default_value,\n                                          'attribute_default_value');\n  }\n\n  // add dropdown for type of attribute\n  var p = document.createElement('div');\n  p.setAttribute('class', 'property');\n  var c0 = document.createElement('span');\n  c0.setAttribute('title', 'Attribute type (e.g. text, checkbox, radio, etc)');\n  c0.innerHTML = 'Type';\n  var c1 = document.createElement('span');\n  var c1b = document.createElement('select');\n  c1b.setAttribute('onchange', 'attribute_property_on_update(this)');\n  c1b.setAttribute('id', 'attribute_type');\n  var type_id;\n  for ( type_id in VIA_ATTRIBUTE_TYPE ) {\n    var type = VIA_ATTRIBUTE_TYPE[type_id];\n    var option = document.createElement('option');\n    option.setAttribute('value', type);\n    option.innerHTML = type;\n    if ( attr_input_type == type ) {\n      option.setAttribute('selected', 'selected');\n    }\n    c1b.appendChild(option);\n  }\n  c1.appendChild(c1b);\n  p.appendChild(c0);\n  p.appendChild(c1);\n  document.getElementById('attribute_properties').appendChild(p);\n}\n\nfunction show_attribute_options() {\n  var attr_list = document.getElementById('attributes_name_list');\n  document.getElementById('attribute_options').innerHTML = '';\n  if ( attr_list.options.length === 0 ) {\n    return;\n  }\n\n  var attr_id = attr_list.value;\n  var attr_type = _via_attributes[_via_attribute_being_updated][attr_id].type;\n\n  // populate additional options based on attribute type\n  switch( attr_type ) {\n  case VIA_ATTRIBUTE_TYPE.TEXT:\n    // text does not have any additional properties\n    break;\n  case VIA_ATTRIBUTE_TYPE.IMAGE:\n    var p = document.createElement('div');\n    p.setAttribute('class', 'property');\n    p.setAttribute('style', 'text-align:center');\n    var c0 = document.createElement('span');\n    c0.setAttribute('style', 'width:25%');\n    c0.setAttribute('title', 'When selected, this is the value that appears in exported annotations');\n    c0.innerHTML = 'id';\n    var c1 = document.createElement('span');\n    c1.setAttribute('style', 'width:60%');\n    c1.setAttribute('title', 'URL or base64 (see https://www.base64-image.de/) encoded image data that corresponds to the image shown as an option to the annotator');\n    c1.innerHTML = 'image url or b64';\n    var c2 = document.createElement('span');\n    c2.setAttribute('title', 'The default value of this attribute');\n    c2.innerHTML = 'def.';\n    p.appendChild(c0);\n    p.appendChild(c1);\n    p.appendChild(c2);\n    document.getElementById('attribute_options').appendChild(p);\n\n    var options = _via_attributes[_via_attribute_being_updated][attr_id].options;\n    var option_id;\n    for ( option_id in options ) {\n      var option_desc = options[option_id];\n\n      var option_default = _via_attributes[_via_attribute_being_updated][attr_id].default_options[option_id];\n      attribute_property_add_option(attr_id, option_id, option_desc, option_default, attr_type);\n    }\n    attribute_property_add_new_entry_option(attr_id, attr_type);\n    break;\n  case VIA_ATTRIBUTE_TYPE.CHECKBOX: // handled by next case\n  case VIA_ATTRIBUTE_TYPE.DROPDOWN: // handled by next case\n  case VIA_ATTRIBUTE_TYPE.RADIO:\n    var p = document.createElement('div');\n    p.setAttribute('class', 'property');\n    p.setAttribute('style', 'text-align:center');\n    var c0 = document.createElement('span');\n    c0.setAttribute('style', 'width:25%');\n    c0.setAttribute('title', 'When selected, this is the value that appears in exported annotations');\n    c0.innerHTML = 'id';\n    var c1 = document.createElement('span');\n    c1.setAttribute('style', 'width:60%');\n    c1.setAttribute('title', 'This is the text shown as an option to the annotator');\n    c1.innerHTML = 'description';\n    var c2 = document.createElement('span');\n    c2.setAttribute('title', 'The default value of this attribute');\n    c2.innerHTML = 'def.';\n    p.appendChild(c0);\n    p.appendChild(c1);\n    p.appendChild(c2);\n    document.getElementById('attribute_options').appendChild(p);\n\n    var options = _via_attributes[_via_attribute_being_updated][attr_id].options;\n    var option_id;\n    for ( option_id in options ) {\n      var option_desc = options[option_id];\n\n      var option_default = _via_attributes[_via_attribute_being_updated][attr_id].default_options[option_id];\n      attribute_property_add_option(attr_id, option_id, option_desc, option_default, attr_type);\n    }\n    attribute_property_add_new_entry_option(attr_id, attr_type);\n    break;\n  default:\n    console.log('Attribute type ' + attr_type + ' is unavailable');\n  }\n}\n\nfunction attribute_property_add_input_property(title, name, value, id) {\n  var p = document.createElement('div');\n  p.setAttribute('class', 'property');\n  var c0 = document.createElement('span');\n  c0.setAttribute('title', title);\n  c0.innerHTML = name;\n  var c1 = document.createElement('span');\n  var c1b = document.createElement('input');\n  c1b.setAttribute('onchange', 'attribute_property_on_update(this)');\n  if ( typeof(value) !== 'undefined' ) {\n    c1b.setAttribute('value', value);\n  }\n  c1b.setAttribute('id', id);\n  c1.appendChild(c1b);\n  p.appendChild(c0);\n  p.appendChild(c1);\n\n  document.getElementById('attribute_properties').appendChild(p);\n}\n\nfunction attribute_property_add_option(attr_id, option_id, option_desc, option_default, attribute_type) {\n  var p = document.createElement('div');\n  p.setAttribute('class', 'property');\n  var c0 = document.createElement('span');\n  var c0b = document.createElement('input');\n  c0b.setAttribute('type', 'text');\n  c0b.setAttribute('value', option_id);\n  c0b.setAttribute('title', option_id);\n  c0b.setAttribute('onchange', 'attribute_property_on_option_update(this)');\n  c0b.setAttribute('id', '_via_attribute_option_id_' + option_id);\n\n  var c1 = document.createElement('span');\n  var c1b = document.createElement('input');\n  c1b.setAttribute('type', 'text');\n\n  if ( attribute_type === VIA_ATTRIBUTE_TYPE.IMAGE ) {\n    var option_desc_info = option_desc.length + ' bytes of base64 image data';\n    c1b.setAttribute('value', option_desc_info);\n    c1b.setAttribute('title', 'To update, copy and paste base64 image data in this text box');\n  } else {\n    c1b.setAttribute('value', option_desc);\n    c1b.setAttribute('title', option_desc);\n  }\n  c1b.setAttribute('onchange', 'attribute_property_on_option_update(this)');\n  c1b.setAttribute('id', '_via_attribute_option_description_' + option_id);\n\n  var c2 = document.createElement('span');\n  var c2b = document.createElement('input');\n  c2b.setAttribute('type', attribute_type);\n  if ( typeof option_default !== 'undefined' ) {\n    c2b.checked = option_default;\n  }\n  if ( attribute_type === 'radio' || attribute_type === 'image' || attribute_type === 'dropdown' ) {\n    // ensured that user can activate only one radio button\n    c2b.setAttribute('type', 'radio');\n    c2b.setAttribute('name', attr_id);\n  }\n\n  c2b.setAttribute('onchange', 'attribute_property_on_option_update(this)');\n  c2b.setAttribute('id', '_via_attribute_option_default_' + option_id);\n\n  c0.appendChild(c0b);\n  c1.appendChild(c1b);\n  c2.appendChild(c2b);\n  p.appendChild(c0);\n  p.appendChild(c1);\n  p.appendChild(c2);\n\n  document.getElementById('attribute_options').appendChild(p);\n}\n\nfunction attribute_property_add_new_entry_option(attr_id, attribute_type) {\n  var p = document.createElement('div');\n  p.setAttribute('class', 'new_option_id_entry');\n  var c0b = document.createElement('input');\n  c0b.setAttribute('type', 'text');\n  c0b.setAttribute('onchange', 'attribute_property_on_option_add(this)');\n  c0b.setAttribute('id', '_via_attribute_new_option_id');\n  c0b.setAttribute('placeholder', 'Add new option id');\n  p.appendChild(c0b);\n  document.getElementById('attribute_options').appendChild(p);\n}\n\nfunction attribute_property_on_update(p) {\n  var attr_id = get_current_attribute_id();\n  var attr_type = _via_attribute_being_updated;\n  var new_attr_type = p.value;\n\n  switch(p.id) {\n  case 'attribute_name':\n    if ( new_attr_type !== attr_id ) {\n      Object.defineProperty(_via_attributes[attr_type],\n                            new_attr_type,\n                            Object.getOwnPropertyDescriptor(_via_attributes[attr_type], attr_id));\n\n      delete _via_attributes[attr_type][attr_id];\n      update_attributes_update_panel();\n      annotation_editor_update_content();\n    }\n    break;\n  case 'attribute_description':\n    _via_attributes[attr_type][attr_id].description = new_attr_type;\n    update_attributes_update_panel();\n    annotation_editor_update_content();\n    break;\n  case 'attribute_default_value':\n    _via_attributes[attr_type][attr_id].default_value = new_attr_type;\n    update_attributes_update_panel();\n    annotation_editor_update_content();\n    break;\n  case 'attribute_type':\n    var old_attr_type = _via_attributes[attr_type][attr_id].type;\n    _via_attributes[attr_type][attr_id].type = new_attr_type;\n    if( new_attr_type === VIA_ATTRIBUTE_TYPE.TEXT ) {\n      _via_attributes[attr_type][attr_id].default_value = '';\n      delete _via_attributes[attr_type][attr_id].options;\n      delete _via_attributes[attr_type][attr_id].default_options;\n    } else {\n      // add options entry (if missing)\n      if ( ! _via_attributes[attr_type][attr_id].hasOwnProperty('options') ) {\n        _via_attributes[attr_type][attr_id].options = {};\n        _via_attributes[attr_type][attr_id].default_options = {};\n      }\n      if ( _via_attributes[attr_type][attr_id].hasOwnProperty('default_value') ) {\n        delete _via_attributes[attr_type][attr_id].default_value;\n      }\n\n      // 1. gather all the attribute values in existing metadata\n      var existing_attr_values = attribute_get_unique_values(attr_type, attr_id);\n\n      // 2. for checkbox, radio, dropdown: create options based on existing options and existing values\n      for(var option_id in _via_attributes[attr_type][attr_id]['options']) {\n        if( !existing_attr_values.includes(option_id) ) {\n          _via_attributes[attr_type][attr_id]['options'][option_id] = option_id;\n        }\n      }\n\n      // update existing metadata to reflect changes in attribute type\n      // ensure that attribute has only one value\n      for(var img_id in _via_img_metadata ) {\n        for(var rindex in _via_img_metadata[img_id]['regions']) {\n          if(_via_img_metadata[img_id]['regions'][rindex]['region_attributes'].hasOwnProperty(attr_id)) {\n            if(old_attr_type === VIA_ATTRIBUTE_TYPE.CHECKBOX &&\n               (new_attr_type === VIA_ATTRIBUTE_TYPE.RADIO ||\n                new_attr_type === VIA_ATTRIBUTE_TYPE.DROPDOWN) ) {\n              // add only if checkbox has only single option selected\n              var sel_option_count = 0;\n              var sel_option_id;\n              for(var option_id in _via_img_metadata[img_id]['regions'][rindex]['region_attributes'][attr_id]) {\n                if(_via_img_metadata[img_id]['regions'][rindex]['region_attributes'][attr_id][option_id]) {\n                  sel_option_count = sel_option_count + 1;\n                  sel_option_id = option_id;\n                }\n              }\n              if(sel_option_count === 1) {\n                _via_img_metadata[img_id]['regions'][rindex]['region_attributes'][attr_id] = sel_option_id;\n              } else {\n                // delete as multiple options cannot be represented as radio or dropdown\n                delete _via_img_metadata[img_id]['regions'][rindex]['region_attributes'][attr_id];\n              }\n            }\n            if( (old_attr_type === VIA_ATTRIBUTE_TYPE.RADIO ||\n                 old_attr_type === VIA_ATTRIBUTE_TYPE.DROPDOWN) &&\n                new_attr_type === VIA_ATTRIBUTE_TYPE.CHECKBOX) {\n              var old_option_id = _via_img_metadata[img_id]['regions'][rindex]['region_attributes'][attr_id];\n              _via_img_metadata[img_id]['regions'][rindex]['region_attributes'][attr_id] = {};\n              _via_img_metadata[img_id]['regions'][rindex]['region_attributes'][attr_id][old_option_id] = true;\n            }\n          }\n        }\n      }\n    }\n    show_attribute_properties();\n    show_attribute_options();\n    annotation_editor_update_content();\n    break;\n  }\n}\n\nfunction attribute_get_unique_values(attr_type, attr_id) {\n  var values = [];\n  switch ( attr_type ) {\n  case 'file':\n    var img_id, attr_val;\n    for ( img_id in _via_img_metadata ) {\n      if ( _via_img_metadata[img_id].file_attributes.hasOwnProperty(attr_id) ) {\n        attr_val = _via_img_metadata[img_id].file_attributes[attr_id];\n        if ( ! values.includes(attr_val) ) {\n          values.push(attr_val);\n        }\n      }\n    }\n    break;\n  case 'region':\n    var img_id, attr_val, i;\n    for ( img_id in _via_img_metadata ) {\n      for ( i = 0; i < _via_img_metadata[img_id].regions.length; ++i ) {\n        if ( _via_img_metadata[img_id].regions[i].region_attributes.hasOwnProperty(attr_id) ) {\n          attr_val = _via_img_metadata[img_id].regions[i].region_attributes[attr_id];\n          if( typeof(attr_val) === 'object' ) {\n            for(var option_id in _via_img_metadata[img_id].regions[i].region_attributes[attr_id]) {\n              if ( ! values.includes(option_id) ) {\n                values.push(option_id);\n              }\n            }\n          } else {\n            if ( ! values.includes(attr_val) ) {\n              values.push(attr_val);\n            }\n          }\n        }\n      }\n    }\n    break;\n  default:\n    break;\n  }\n  return values;\n}\n\nfunction attribute_property_on_option_update(p) {\n  var attr_id = get_current_attribute_id();\n  if ( p.id.startsWith('_via_attribute_option_id_') ) {\n    var old_key = p.id.substr( '_via_attribute_option_id_'.length );\n    var new_key = p.value;\n    if ( old_key !== new_key ) {\n      var option_id_test = attribute_property_option_id_is_valid(attr_id, new_key);\n      if ( option_id_test.is_valid ) {\n        update_attribute_option_id_with_confirm(_via_attribute_being_updated,\n                                                attr_id,\n                                                old_key,\n                                                new_key);\n      } else {\n        p.value = old_key; // restore old value\n        show_message( option_id_test.message );\n        show_attribute_properties();\n      }\n      return;\n    }\n  }\n\n  if ( p.id.startsWith('_via_attribute_option_description_') ) {\n    var key = p.id.substr( '_via_attribute_option_description_'.length );\n    var old_value = _via_attributes[_via_attribute_being_updated][attr_id].options[key];\n    var new_value = p.value;\n    if ( new_value !== old_value ) {\n      _via_attributes[_via_attribute_being_updated][attr_id].options[key] = new_value;\n      show_attribute_properties();\n      annotation_editor_update_content();\n    }\n  }\n\n  if ( p.id.startsWith('_via_attribute_option_default_') ) {\n    var new_default_option_id = p.id.substr( '_via_attribute_option_default_'.length );\n    var old_default_option_id_list = Object.keys(_via_attributes[_via_attribute_being_updated][attr_id].default_options);\n\n    if ( old_default_option_id_list.length === 0 ) {\n      // default set for the first time\n      _via_attributes[_via_attribute_being_updated][attr_id].default_options[new_default_option_id] = p.checked;\n    } else {\n      switch ( _via_attributes[_via_attribute_being_updated][attr_id].type ) {\n      case 'image':    // fallback\n      case 'dropdown': // fallback\n      case 'radio':    // fallback\n        // to ensure that only one radio button is selected at a time\n        _via_attributes[_via_attribute_being_updated][attr_id].default_options = {};\n        _via_attributes[_via_attribute_being_updated][attr_id].default_options[new_default_option_id] = p.checked;\n        break;\n      case 'checkbox':\n        _via_attributes[_via_attribute_being_updated][attr_id].default_options[new_default_option_id] = p.checked;\n        break;\n      }\n    }\n    // default option updated\n    attribute_property_on_option_default_update(_via_attribute_being_updated,\n                                                attr_id,\n                                                new_default_option_id).then( function() {\n                                                  show_attribute_properties();\n                                                  annotation_editor_update_content();\n                                                });\n  }\n}\n\nfunction attribute_property_on_option_default_update(attribute_being_updated, attr_id, new_default_option_id) {\n  return new Promise( function(ok_callback, err_callback) {\n    // set all metadata to new_value if:\n    // - metadata[attr_id] is missing\n    // - metadata[attr_id] is set to option_old_value\n    var img_id, attr_value, n, i;\n    var attr_type = _via_attributes[attribute_being_updated][attr_id].type;\n    switch( attribute_being_updated ) {\n    case 'file':\n      for ( img_id in _via_img_metadata ) {\n        if ( ! _via_img_metadata[img_id].file_attributes.hasOwnProperty(attr_id) ) {\n          _via_img_metadata[img_id].file_attributes[attr_id] = new_default_option_id;\n        }\n      }\n      break;\n    case 'region':\n      for ( img_id in _via_img_metadata ) {\n        n = _via_img_metadata[img_id].regions.length;\n        for ( i = 0; i < n; ++i ) {\n          if ( ! _via_img_metadata[img_id].regions[i].region_attributes.hasOwnProperty(attr_id) ) {\n            _via_img_metadata[img_id].regions[i].region_attributes[attr_id] = new_default_option_id;\n          }\n        }\n      }\n      break;\n    }\n    ok_callback();\n  });\n}\n\nfunction attribute_property_on_option_add(p) {\n  if ( p.value === '' || p.value === null ) {\n    return;\n  }\n\n  if ( p.id === '_via_attribute_new_option_id' ) {\n    var attr_id = get_current_attribute_id();\n    var option_id = p.value;\n    var option_id_test = attribute_property_option_id_is_valid(attr_id, option_id);\n    if ( option_id_test.is_valid ) {\n      _via_attributes[_via_attribute_being_updated][attr_id].options[option_id] = '';\n      show_attribute_options();\n      annotation_editor_update_content();\n    } else {\n      show_message( option_id_test.message );\n      attribute_property_reset_new_entry_inputs();\n    }\n  }\n}\n\nfunction attribute_property_reset_new_entry_inputs() {\n  var container = document.getElementById('attribute_options');\n  var p = container.lastChild;\n  if ( p.childNodes[0] ) {\n    p.childNodes[0].value = '';\n  }\n  if ( p.childNodes[1] ) {\n    p.childNodes[1].value = '';\n  }\n}\n\nfunction attribute_property_show_new_entry_inputs(attr_id, attribute_type) {\n  var n0 = document.createElement('div');\n  n0.classList.add('property');\n  var n1a = document.createElement('span');\n  var n1b = document.createElement('input');\n  n1b.setAttribute('onchange', 'attribute_property_on_option_add(this)');\n  n1b.setAttribute('placeholder', 'Add new id');\n  n1b.setAttribute('value', '');\n  n1b.setAttribute('id', '_via_attribute_new_option_id');\n  n1a.appendChild(n1b);\n\n  var n2a = document.createElement('span');\n  var n2b = document.createElement('input');\n  n2b.setAttribute('onchange', 'attribute_property_on_option_add(this)');\n  n2b.setAttribute('placeholder', 'Optional description');\n  n2b.setAttribute('value', '');\n  n2b.setAttribute('id', '_via_attribute_new_option_description');\n  n2a.appendChild(n2b);\n\n  var n3a = document.createElement('span');\n  var n3b = document.createElement('input');\n  n3b.setAttribute('type', attribute_type);\n  if ( attribute_type === 'radio' ) {\n    n3b.setAttribute('name', attr_id);\n  }\n  n3b.setAttribute('onchange', 'attribute_property_on_option_add(this)');\n  n3b.setAttribute('id', '_via_attribute_new_option_default');\n  n3a.appendChild(n3b);\n\n  n0.appendChild(n1a);\n  n0.appendChild(n2a);\n  n0.appendChild(n3a);\n\n  var container = document.getElementById('attribute_options');\n  container.appendChild(n0);\n}\n\nfunction attribute_property_option_id_is_valid(attr_id, new_option_id) {\n  var option_id;\n  for ( option_id in _via_attributes[_via_attribute_being_updated][attr_id].options ) {\n    if ( option_id === new_option_id ) {\n      return { 'is_valid':false, 'message':'Option id [' + attr_id + '] already exists' };\n    }\n  }\n\n  if ( new_option_id.includes('__') ) { // reserved separator for attribute-id, row-id, option-id\n    return {'is_valid':false, 'message':'Option id cannot contain two consecutive underscores'};\n  }\n\n  return {'is_valid':true};\n}\n\nfunction attribute_property_id_exists(name) {\n  var attr_name;\n  for ( attr_name in _via_attributes[_via_attribute_being_updated] ) {\n    if ( attr_name === name ) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction delete_existing_attribute_with_confirm() {\n  var attr_id = document.getElementById('user_input_attribute_id').value;\n  if ( attr_id === '' ) {\n    show_message('Enter the name of attribute that you wish to delete');\n    return;\n  }\n  if ( attribute_property_id_exists(attr_id) ) {\n    var config = {'title':'Delete ' + _via_attribute_being_updated + ' attribute [' + attr_id + ']',\n                  'warning': 'Warning: Deleting an attribute will lead to the attribute being deleted in all the annotations. Please click OK only if you are sure.'};\n    var input = { 'attr_type':{'type':'text', 'name':'Attribute Type', 'value':_via_attribute_being_updated, 'disabled':true},\n                  'attr_id':{'type':'text', 'name':'Attribute Id', 'value':attr_id, 'disabled':true}\n                };\n    invoke_with_user_inputs(delete_existing_attribute_confirmed, input, config);\n  } else {\n    show_message('Attribute [' + attr_id + '] does not exist!');\n    return;\n  }\n}\n\nfunction delete_existing_attribute_confirmed(input) {\n  var attr_type = input.attr_type.value;\n  var attr_id   = input.attr_id.value;\n  delete_existing_attribute(attr_type, attr_id);\n  document.getElementById('user_input_attribute_id').value = '';\n  show_message('Deleted ' + attr_type + ' attribute [' + attr_id + ']');\n  user_input_default_cancel_handler();\n}\n\nfunction delete_existing_attribute(attribute_type, attr_id) {\n  if ( _via_attributes[attribute_type].hasOwnProperty( attr_id ) ) {\n    var attr_id_list = Object.keys(_via_attributes[attribute_type]);\n    if ( attr_id_list.length === 1 ) {\n      _via_current_attribute_id = '';\n    } else {\n      var current_index = attr_id_list.indexOf(attr_id);\n      var next_index = current_index + 1;\n      if ( next_index === attr_id_list.length ) {\n        next_index = current_index - 1;\n      }\n      _via_current_attribute_id = attr_id_list[next_index];\n    }\n    delete _via_attributes[attribute_type][attr_id];\n    delete_region_attribute_in_all_metadata(attr_id);\n    update_attributes_update_panel();\n    annotation_editor_update_content();\n  }\n}\n\nfunction add_new_attribute_from_user_input() {\n  var attr_id = document.getElementById('user_input_attribute_id').value;\n  if ( attr_id === '' ) {\n    show_message('Enter the name of attribute that you wish to delete');\n    return;\n  }\n\n  if ( attribute_property_id_exists(attr_id) ) {\n    show_message('The ' + _via_attribute_being_updated + ' attribute [' + attr_id + '] already exists.');\n  } else {\n    _via_current_attribute_id = attr_id;\n    add_new_attribute(attr_id);\n    update_attributes_update_panel();\n    annotation_editor_update_content();\n    show_message('Added ' + _via_attribute_being_updated + ' attribute [' + attr_id + '].');\n  }\n}\n\nfunction add_new_attribute(attribute_id) {\n  _via_attributes[_via_attribute_being_updated][attribute_id] = {};\n  _via_attributes[_via_attribute_being_updated][attribute_id].type = 'text';\n  _via_attributes[_via_attribute_being_updated][attribute_id].description = '';\n  _via_attributes[_via_attribute_being_updated][attribute_id].default_value = '';\n}\n\nfunction update_current_attribute_id(p) {\n  _via_current_attribute_id = p.options[p.selectedIndex].value;\n  update_attribute_properties_panel();\n}\n\nfunction get_current_attribute_id() {\n  return document.getElementById('attributes_name_list').value;\n}\n\nfunction update_attribute_option_id_with_confirm(attr_type, attr_id, option_id, new_option_id) {\n  var is_delete = false;\n  var config;\n  if ( new_option_id === '' || typeof(new_option_id) === 'undefined' ) {\n    // an empty new_option_id indicates deletion of option_id\n    config = {'title':'Delete an option for ' + attr_type + ' attribute'};\n    is_delete = true;\n  } else {\n    config = {'title':'Rename an option for ' + attr_type + ' attribute'};\n  }\n\n  var input = { 'attr_type':{'type':'text', 'name':'Attribute Type', 'value':attr_type, 'disabled':true},\n                'attr_id':{'type':'text', 'name':'Attribute Id', 'value':attr_id, 'disabled':true}\n              };\n\n  if ( is_delete ) {\n    input['option_id'] = {'type':'text', 'name':'Attribute Option', 'value':option_id, 'disabled':true};\n  } else {\n    input['option_id']     = {'type':'text', 'name':'Attribute Option (old)', 'value':option_id, 'disabled':true},\n    input['new_option_id'] = {'type':'text', 'name':'Attribute Option (new)', 'value':new_option_id, 'disabled':true};\n  }\n\n  invoke_with_user_inputs(update_attribute_option_id_confirmed, input, config, update_attribute_option_id_cancel);\n}\n\nfunction update_attribute_option_id_cancel(input) {\n  update_attribute_properties_panel();\n}\n\nfunction update_attribute_option_id_confirmed(input) {\n  var attr_type = input.attr_type.value;\n  var attr_id = input.attr_id.value;\n  var option_id = input.option_id.value;\n  var is_delete;\n  var new_option_id;\n  if ( typeof(input.new_option_id) === 'undefined' || input.new_option_id === '' ) {\n    is_delete = true;\n    new_option_id = '';\n  } else {\n    is_delete = false;\n    new_option_id = input.new_option_id.value;\n  }\n\n  update_attribute_option(is_delete, attr_type, attr_id, option_id, new_option_id);\n\n  if ( is_delete ) {\n    show_message('Deleted option [' + option_id + '] for ' + attr_type + ' attribute [' + attr_id + '].');\n  } else {\n    show_message('Renamed option [' + option_id + '] to [' + new_option_id + '] for ' + attr_type + ' attribute [' + attr_id + '].');\n  }\n  update_attribute_properties_panel();\n  annotation_editor_update_content();\n  user_input_default_cancel_handler();\n}\n\nfunction update_attribute_option(is_delete, attr_type, attr_id, option_id, new_option_id) {\n  switch ( attr_type ) {\n  case 'region':\n    update_region_attribute_option_in_all_metadata(is_delete, attr_id, option_id, new_option_id);\n    if ( ! is_delete ) {\n      Object.defineProperty(_via_attributes[attr_type][attr_id].options,\n                            new_option_id,\n                            Object.getOwnPropertyDescriptor(_via_attributes[_via_attribute_being_updated][attr_id].options, option_id));\n    }\n    delete _via_attributes['region'][attr_id].options[option_id];\n\n    break;\n  case 'file':\n    update_file_attribute_option_in_all_metadata(attr_id, option_id);\n    if ( ! is_delete ) {\n      Object.defineProperty(_via_attributes[attr_type][attr_id].options,\n                            new_option_id,\n                            Object.getOwnPropertyDescriptor(_via_attributes[_via_attribute_being_updated][attr_id].options, option_id));\n    }\n\n    delete _via_attributes['file'][attr_id].options[option_id];\n    break;\n  }\n}\n\nfunction update_file_attribute_option_in_all_metadata(is_delete, attr_id, option_id, new_option_id) {\n  var image_id;\n  for ( image_id in _via_img_metadata ) {\n    if ( _via_img_metadata[image_id].file_attributes.hasOwnProperty(attr_id) ) {\n      if ( _via_img_metadata[image_id].file_attributes[attr_id].hasOwnProperty(option_id) ) {\n        Object.defineProperty(_via_img_metadata[image_id].file_attributes[attr_id],\n                              new_option_id,\n                              Object.getOwnPropertyDescriptor(_via_img_metadata[image_id].file_attributes[attr_id], option_id));\n        delete _via_img_metadata[image_id].file_attributes[attr_id][option_id];\n      }\n    }\n  }\n}\n\nfunction update_region_attribute_option_in_all_metadata(is_delete, attr_id, option_id, new_option_id) {\n  var image_id;\n  for ( image_id in _via_img_metadata ) {\n    for (var i = 0; i < _via_img_metadata[image_id].regions.length; ++i ) {\n      if ( _via_img_metadata[image_id].regions[i].region_attributes.hasOwnProperty(attr_id) ) {\n        if ( _via_img_metadata[image_id].regions[i].region_attributes[attr_id].hasOwnProperty(option_id) ) {\n          Object.defineProperty(_via_img_metadata[image_id].regions[i].region_attributes[attr_id],\n                                new_option_id,\n                                Object.getOwnPropertyDescriptor(_via_img_metadata[image_id].regions[i].region_attributes[attr_id], option_id));\n          delete _via_img_metadata[image_id].regions[i].region_attributes[attr_id][option_id];\n        }\n      }\n    }\n  }\n}\n\nfunction delete_region_attribute_in_all_metadata(attr_id) {\n  var image_id;\n  for ( image_id in _via_img_metadata ) {\n    for (var i = 0; i < _via_img_metadata[image_id].regions.length; ++i ) {\n      if ( _via_img_metadata[image_id].regions[i].region_attributes.hasOwnProperty(attr_id)) {\n        delete _via_img_metadata[image_id].regions[i].region_attributes[attr_id];\n      }\n    }\n  }\n}\n\nfunction delete_file_attribute_option_from_all_metadata(attr_id, option_id) {\n  var image_id;\n  for ( image_id in _via_img_metadata ) {\n    if ( _via_img_metadata.hasOwnProperty(image_id) ) {\n      delete_file_attribute_option_from_metadata(image_id, attr_id, option_id);\n    }\n  }\n}\n\nfunction delete_file_attribute_option_from_metadata(image_id, attr_id, option_id) {\n  var i;\n  if ( _via_img_metadata[image_id].file_attributes.hasOwnProperty(attr_id) ) {\n    if ( _via_img_metadata[image_id].file_attributes[attr_id].hasOwnProperty(option_id) ) {\n      delete _via_img_metadata[image_id].file_attributes[attr_id][option_id];\n    }\n  }\n}\n\nfunction delete_file_attribute_from_all_metadata(image_id, attr_id) {\n  var image_id;\n  for ( image_id in _via_img_metadata ) {\n    if ( _via_img_metadata.hasOwnProperty(image_id) ) {\n      if ( _via_img_metadata[image_id].file_attributes.hasOwnProperty(attr_id) ) {\n        delete _via_img_metadata[image_id].file_attributes[attr_id];\n      }\n    }\n  }\n}\n\n//\n// invoke a method after receiving inputs from user\n//\nfunction invoke_with_user_inputs(ok_handler, input, config, cancel_handler) {\n  setup_user_input_panel(ok_handler, input, config, cancel_handler);\n  show_user_input_panel();\n}\n\nfunction setup_user_input_panel(ok_handler, input, config, cancel_handler) {\n  // create html page with OK and CANCEL button\n  // when OK is clicked\n  //  - setup input with all the user entered values\n  //  - invoke handler with input\n  // when CANCEL is clicked\n  //  - invoke user_input_cancel()\n  _via_user_input_ok_handler = ok_handler;\n  _via_user_input_cancel_handler = cancel_handler;\n  _via_user_input_data = input;\n\n  var p = document.getElementById('user_input_panel');\n  var c = document.createElement('div');\n  c.setAttribute('class', 'content');\n  var html = [];\n  html.push('<p class=\"title\">' + config.title + '</p>');\n\n  html.push('<div class=\"user_inputs\">');\n  var key;\n  for ( key in _via_user_input_data ) {\n    html.push('<div class=\"row\">');\n    html.push('<span class=\"cell\">' + _via_user_input_data[key].name + '</span>');\n    var disabled_html = '';\n    if ( _via_user_input_data[key].disabled ) {\n      disabled_html = 'disabled=\"disabled\"';\n    }\n    var value_html = '';\n    if ( _via_user_input_data[key].value ) {\n      value_html = 'value=\"' + _via_user_input_data[key].value + '\"';\n    }\n\n    switch(_via_user_input_data[key].type) {\n    case 'checkbox':\n      if ( _via_user_input_data[key].checked ) {\n        value_html = 'checked=\"checked\"';\n      } else {\n        value_html = '';\n      }\n      html.push('<span class=\"cell\">' +\n                '<input class=\"_via_user_input_variable\" ' +\n                value_html + ' ' +\n                disabled_html + ' ' +\n                'type=\"checkbox\" id=\"' + key + '\"></span>');\n      break;\n    case 'text':\n      var size = '50';\n      if ( _via_user_input_data[key].size ) {\n        size = _via_user_input_data[key].size;\n      }\n      var placeholder = '';\n      if ( _via_user_input_data[key].placeholder ) {\n        placeholder = _via_user_input_data[key].placeholder;\n      }\n      html.push('<span class=\"cell\">' +\n                '<input class=\"_via_user_input_variable\" ' +\n                value_html + ' ' +\n                disabled_html + ' ' +\n                'size=\"' + size + '\" ' +\n                'placeholder=\"' + placeholder + '\" ' +\n                'type=\"text\" id=\"' + key + '\"></span>');\n\n      break;\n    case 'textarea':\n      var rows = '5';\n      var cols = '50'\n      if ( _via_user_input_data[key].rows ) {\n        rows = _via_user_input_data[key].rows;\n      }\n      if ( _via_user_input_data[key].cols ) {\n        cols = _via_user_input_data[key].cols;\n      }\n      var placeholder = '';\n      if ( _via_user_input_data[key].placeholder ) {\n        placeholder = _via_user_input_data[key].placeholder;\n      }\n      html.push('<span class=\"cell\">' +\n                '<textarea class=\"_via_user_input_variable\" ' +\n                disabled_html + ' ' +\n                'rows=\"' + rows + '\" ' +\n                'cols=\"' + cols + '\" ' +\n                'placeholder=\"' + placeholder + '\" ' +\n                'id=\"' + key + '\">' + value_html + '</textarea></span>');\n\n      break;\n\n    }\n    html.push('</div>'); // end of row\n  }\n  html.push('</div>'); // end of user_input div\n  // optional warning before confirmation\n  if (config.hasOwnProperty(\"warning\") ) {\n    html.push('<div class=\"warning\">' + config.warning + '</div>');\n  }\n  html.push('<div class=\"user_confirm\">' +\n            '<span class=\"ok\">' +\n            '<button id=\"user_input_ok_button\" onclick=\"user_input_parse_and_invoke_handler()\">&nbsp;OK&nbsp;</button></span>' +\n            '<span class=\"cancel\">' +\n            '<button id=\"user_input_cancel_button\" onclick=\"user_input_cancel_handler()\">CANCEL</button></span></div>');\n  c.innerHTML = html.join('');\n  p.innerHTML = '';\n  p.appendChild(c);\n\n}\n\nfunction user_input_default_cancel_handler() {\n  hide_user_input_panel();\n  _via_user_input_data = {};\n  _via_user_input_ok_handler = null;\n  _via_user_input_cancel_handler = null;\n}\n\nfunction user_input_cancel_handler() {\n  if ( _via_user_input_cancel_handler ) {\n    _via_user_input_cancel_handler();\n  }\n  user_input_default_cancel_handler();\n}\n\nfunction user_input_parse_and_invoke_handler() {\n  var elist = document.getElementsByClassName('_via_user_input_variable');\n  var i;\n  for ( i=0; i < elist.length; ++i ) {\n    var eid = elist[i].id;\n    if ( _via_user_input_data.hasOwnProperty(eid) ) {\n      switch(_via_user_input_data[eid].type) {\n      case 'checkbox':\n        _via_user_input_data[eid].value = elist[i].checked;\n        break;\n      default:\n        _via_user_input_data[eid].value = elist[i].value;\n        break;\n      }\n    }\n  }\n  if ( typeof(_via_user_input_data.confirm) !== 'undefined' ) {\n    if ( _via_user_input_data.confirm.value ) {\n      _via_user_input_ok_handler(_via_user_input_data);\n    } else {\n      if ( _via_user_input_cancel_handler ) {\n        _via_user_input_cancel_handler();\n      }\n    }\n  } else {\n    _via_user_input_ok_handler(_via_user_input_data);\n  }\n  user_input_default_cancel_handler();\n}\n\nfunction show_user_input_panel() {\n  document.getElementById('user_input_panel').style.display = 'block';\n}\n\nfunction hide_user_input_panel() {\n  document.getElementById('user_input_panel').style.display = 'none';\n}\n\n//\n// annotations editor panel\n//\nfunction annotation_editor_show() {\n  // remove existing annotation editor (if any)\n  annotation_editor_remove();\n\n  // create new container of annotation editor\n  var ae = document.createElement('div');\n  ae.setAttribute('id', 'annotation_editor');\n\n  if ( _via_annotation_editor_mode === VIA_ANNOTATION_EDITOR_MODE.SINGLE_REGION ) {\n    if ( _via_settings.ui.image.on_image_annotation_editor_placement === VIA_ANNOTATION_EDITOR_PLACEMENT.DISABLE ) {\n      return;\n    }\n\n    // only display on-image annotation editor if\n    // - region attribute are defined\n    // - region is selected\n    if ( _via_is_region_selected &&\n         Object.keys(_via_attributes['region']).length &&\n         _via_attributes['region'].constructor === Object ) {\n      ae.classList.add('force_small_font');\n      ae.classList.add('display_area_content'); // to enable automatic hiding of this content\n      // add annotation editor to image_panel\n      if ( _via_settings.ui.image.on_image_annotation_editor_placement === VIA_ANNOTATION_EDITOR_PLACEMENT.NEAR_REGION ) {\n        var html_position = annotation_editor_get_placement(_via_user_sel_region_id);\n        ae.style.top = html_position.top;\n        ae.style.left = html_position.left;\n      }\n      _via_display_area.appendChild(ae);\n      annotation_editor_update_content();\n      update_vertical_space();\n    }\n  } else {\n    // show annotation editor in a separate panel at the bottom\n    _via_annotaion_editor_panel.appendChild(ae);\n    annotation_editor_update_content();\n    update_vertical_space();\n\n    if ( _via_is_region_selected ) {\n      // highlight entry for region_id in annotation editor panel\n      annotation_editor_scroll_to_row(_via_user_sel_region_id);\n      annotation_editor_highlight_row(_via_user_sel_region_id);\n    }\n  }\n}\n\nfunction annotation_editor_hide() {\n  if ( _via_annotation_editor_mode === VIA_ANNOTATION_EDITOR_MODE.SINGLE_REGION ) {\n    // remove existing annotation editor (if any)\n    annotation_editor_remove();\n  } else {\n    annotation_editor_clear_row_highlight();\n  }\n}\n\nfunction annotation_editor_toggle_on_image_editor() {\n  if ( _via_settings.ui.image.on_image_annotation_editor_placement === VIA_ANNOTATION_EDITOR_PLACEMENT.DISABLE ) {\n    _via_annotation_editor_mode = VIA_ANNOTATION_EDITOR_MODE.SINGLE_REGION;\n    _via_settings.ui.image.on_image_annotation_editor_placement = VIA_ANNOTATION_EDITOR_PLACEMENT.NEAR_REGION;\n    annotation_editor_show();\n    show_message('Enabled on image annotation editor');\n  } else {\n    _via_settings.ui.image.on_image_annotation_editor_placement = VIA_ANNOTATION_EDITOR_PLACEMENT.DISABLE;\n    _via_annotation_editor_mode === VIA_ANNOTATION_EDITOR_MODE.ALL_REGIONS;\n    annotation_editor_hide();\n    show_message('Disabled on image annotation editor');\n  }\n}\n\nfunction annotation_editor_update_content() {\n  return new Promise( function(ok_callback, err_callback) {\n    var ae = document.getElementById('annotation_editor');\n    if (ae ) {\n      ae.innerHTML = '';\n      annotation_editor_update_header_html();\n      annotation_editor_update_metadata_html();\n    }\n    ok_callback();\n  });\n}\n\nfunction annotation_editor_get_placement(region_id) {\n  var html_position = {};\n  var r = _via_canvas_regions[region_id]['shape_attributes'];\n  var shape = r['name'];\n  switch( shape ) {\n  case 'rect':\n    html_position.top = r['y'] + r['height'];\n    html_position.left = r['x'] + r['width'];\n    break;\n  case 'circle':\n    html_position.top = r['cy'] + r['r'];\n    html_position.left = r['cx'];\n    break;\n  case 'ellipse':\n    html_position.top = r['cy'] + r['ry'] * Math.cos(r['theta']);\n    html_position.left = r['cx'] - r['ry'] * Math.sin(r['theta']);\n    break;\n  case 'polygon':\n  case 'polyline':\n    var most_left =\n      Object.keys(r['all_points_x']).reduce(function(a, b){\n        return r['all_points_x'][a] > r['all_points_x'][b] ? a : b });\n    html_position.top  = Math.max( r['all_points_y'][most_left] );\n    html_position.left = Math.max( r['all_points_x'][most_left] );\n    break;\n  case 'point':\n    html_position.top = r['cy'];\n    html_position.left = r['cx'];\n    break;\n  }\n  html_position.top  = html_position.top + _via_img_panel.offsetTop + VIA_REGION_EDGE_TOL + 'px';\n  html_position.left = html_position.left + _via_img_panel.offsetLeft + VIA_REGION_EDGE_TOL + 'px';\n  return html_position;\n}\n\nfunction annotation_editor_remove() {\n  var p = document.getElementById('annotation_editor');\n  if ( p ) {\n    p.remove();\n  }\n}\n\nfunction is_annotation_editor_visible() {\n  return document.getElementById('annotation_editor_panel').classList.contains('display_block');\n}\n\nfunction annotation_editor_toggle_all_regions_editor() {\n  var p = document.getElementById('annotation_editor_panel');\n  if ( p.classList.contains('display_block') ) {\n    p.classList.remove('display_block');\n    _via_annotation_editor_mode = VIA_ANNOTATION_EDITOR_MODE.SINGLE_REGION;\n  } else {\n    _via_annotation_editor_mode = VIA_ANNOTATION_EDITOR_MODE.ALL_REGIONS;\n    p.classList.add('display_block');\n    p.style.height = _via_settings.ui.annotation_editor_height + '%';\n    p.style.fontSize = _via_settings.ui.annotation_editor_fontsize + 'rem';\n    annotation_editor_show();\n  }\n}\n\nfunction annotation_editor_set_active_button() {\n  var attribute_type;\n  for ( attribute_type in _via_attributes ) {\n    var bid = 'button_edit_' + attribute_type + '_metadata';\n    document.getElementById(bid).classList.remove('active');\n  }\n  var bid = 'button_edit_' + _via_metadata_being_updated + '_metadata';\n  document.getElementById(bid).classList.add('active');\n}\n\nfunction edit_region_metadata_in_annotation_editor() {\n  _via_metadata_being_updated = 'region';\n  annotation_editor_set_active_button();\n  annotation_editor_update_content();\n}\nfunction edit_file_metadata_in_annotation_editor() {\n  _via_metadata_being_updated = 'file';\n  annotation_editor_set_active_button();\n  annotation_editor_update_content();\n}\n\nfunction annotation_editor_update_header_html() {\n  var head = document.createElement('div');\n  head.setAttribute('class', 'row');\n  head.setAttribute('id', 'annotation_editor_header');\n\n  if ( _via_metadata_being_updated === 'region' ) {\n    var rid_col = document.createElement('span');\n    rid_col.setAttribute('class', 'col');\n    rid_col.innerHTML = '';\n    head.appendChild(rid_col);\n  }\n\n  if ( _via_metadata_being_updated === 'file' ) {\n    var rid_col = document.createElement('span');\n    rid_col.setAttribute('class', 'col header');\n    if ( _via_display_area_content_name === VIA_DISPLAY_AREA_CONTENT_NAME.IMAGE_GRID ) {\n      rid_col.innerHTML = 'group';\n    } else {\n      rid_col.innerHTML = 'filename';\n    }\n    head.appendChild(rid_col);\n  }\n\n  var attr_id;\n  for ( attr_id in _via_attributes[_via_metadata_being_updated] ) {\n    var col = document.createElement('span');\n    col.setAttribute('class', 'col header');\n    col.innerHTML = attr_id;\n    head.appendChild(col);\n  }\n\n  var ae = document.getElementById('annotation_editor');\n  if ( ae.childNodes.length === 0 ) {\n    ae.appendChild(head);\n  } else {\n    if ( ae.firstChild.id === 'annotation_editor_header') {\n      ae.replaceChild(head, ae.firstChild);\n    } else {\n      // header node is absent\n      ae.insertBefore(head, ae.firstChild);\n    }\n  }\n}\n\nfunction annotation_editor_update_metadata_html() {\n  if ( ! _via_img_count ) {\n    return;\n  }\n\n  var ae = document.getElementById('annotation_editor');\n  switch ( _via_metadata_being_updated ) {\n  case 'region':\n    var rindex;\n    if ( _via_display_area_content_name === VIA_DISPLAY_AREA_CONTENT_NAME.IMAGE_GRID ) {\n      ae.appendChild( annotation_editor_get_metadata_row_html(0) );\n    } else {\n      if ( _via_display_area_content_name === VIA_DISPLAY_AREA_CONTENT_NAME.IMAGE ) {\n        if ( _via_annotation_editor_mode === VIA_ANNOTATION_EDITOR_MODE.SINGLE_REGION ) {\n          ae.appendChild( annotation_editor_get_metadata_row_html(_via_user_sel_region_id) );\n        } else {\n          for ( rindex = 0; rindex < _via_img_metadata[_via_image_id].regions.length; ++rindex ) {\n            ae.appendChild( annotation_editor_get_metadata_row_html(rindex) );\n          }\n        }\n      }\n    }\n    break;\n\n  case 'file':\n    ae.appendChild( annotation_editor_get_metadata_row_html(0) );\n    break;\n  }\n}\n\nfunction annotation_editor_update_row(row_id) {\n  var ae = document.getElementById('annotation_editor');\n\n  var new_row = annotation_editor_get_metadata_row_html(row_id);\n  var old_row = document.getElementById(new_row.getAttribute('id'));\n  ae.replaceChild(new_row, old_row);\n}\n\nfunction annotation_editor_add_row(row_id) {\n  if ( is_annotation_editor_visible() ) {\n    var ae = document.getElementById('annotation_editor');\n    var new_row = annotation_editor_get_metadata_row_html(row_id);\n    var penultimate_row_id = parseInt(row_id) - 1;\n    if ( penultimate_row_id >= 0 ) {\n      var penultimate_row_html_id = 'ae_' + _via_metadata_being_updated + '_' + penultimate_row_id;\n      var penultimate_row = document.getElementById(penultimate_row_html_id);\n      ae.insertBefore(new_row, penultimate_row.nextSibling);\n    } else {\n      ae.appendChild(new_row);\n    }\n  }\n}\n\nfunction annotation_editor_get_metadata_row_html(row_id) {\n  var row = document.createElement('div');\n  row.setAttribute('class', 'row');\n  row.setAttribute('id', 'ae_' + _via_metadata_being_updated + '_' + row_id);\n\n  if ( _via_metadata_being_updated === 'region' ) {\n    var rid = document.createElement('span');\n\n    switch(_via_display_area_content_name) {\n    case VIA_DISPLAY_AREA_CONTENT_NAME.IMAGE_GRID:\n      rid.setAttribute('class', 'col');\n      rid.innerHTML = 'Grouped regions in ' + _via_image_grid_selected_img_index_list.length + ' files';\n      break;\n    case VIA_DISPLAY_AREA_CONTENT_NAME.IMAGE:\n      rid.setAttribute('class', 'col id');\n      rid.innerHTML = (row_id + 1);\n      break;\n    }\n    row.appendChild(rid);\n  }\n\n  if ( _via_metadata_being_updated === 'file' ) {\n    var rid = document.createElement('span');\n    rid.setAttribute('class', 'col');\n    switch(_via_display_area_content_name) {\n    case VIA_DISPLAY_AREA_CONTENT_NAME.IMAGE_GRID:\n      rid.innerHTML = 'Group of ' + _via_image_grid_selected_img_index_list.length + ' files';\n      break;\n    case VIA_DISPLAY_AREA_CONTENT_NAME.IMAGE:\n      rid.innerHTML = _via_image_filename_list[_via_image_index];\n      break;\n    }\n\n    row.appendChild(rid);\n  }\n\n  var attr_id;\n  for ( attr_id in _via_attributes[_via_metadata_being_updated] ) {\n    var col = document.createElement('span');\n    col.setAttribute('class', 'col');\n\n    var attr_type    = _via_attributes[_via_metadata_being_updated][attr_id].type;\n    var attr_desc    = _via_attributes[_via_metadata_being_updated][attr_id].desc;\n    if ( typeof(attr_desc) === 'undefined' ) {\n      attr_desc = '';\n    }\n    var attr_html_id = attr_id + '__' + row_id;\n\n    var attr_value = '';\n    var attr_placeholder = '';\n    if ( _via_display_area_content_name === VIA_DISPLAY_AREA_CONTENT_NAME.IMAGE ) {\n      switch(_via_metadata_being_updated) {\n      case 'region':\n        if ( _via_img_metadata[_via_image_id].regions[row_id].region_attributes.hasOwnProperty(attr_id) ) {\n          attr_value = _via_img_metadata[_via_image_id].regions[row_id].region_attributes[attr_id];\n        } else {\n          attr_placeholder = 'not defined yet!';\n        }\n      case 'file':\n        if ( _via_img_metadata[_via_image_id].file_attributes.hasOwnProperty(attr_id) ) {\n          attr_value = _via_img_metadata[_via_image_id].file_attributes[attr_id];\n        } else {\n          attr_placeholder = 'not defined yet!';\n        }\n      }\n    }\n\n    if ( _via_display_area_content_name === VIA_DISPLAY_AREA_CONTENT_NAME.IMAGE_GRID ) {\n      var attr_metadata_stat;\n      switch(_via_metadata_being_updated) {\n      case 'region':\n        attr_metadata_stat = _via_get_region_metadata_stat(_via_image_grid_selected_img_index_list, attr_id);\n        break;\n      case 'file':\n        attr_metadata_stat = _via_get_file_metadata_stat(_via_image_grid_selected_img_index_list, attr_id);\n        break;\n      }\n\n      switch ( attr_type ) {\n      case 'text':\n        if ( attr_metadata_stat.hasOwnProperty(attr_id) ) {\n          var attr_value_set = Object.keys(attr_metadata_stat[attr_id]);\n          if ( attr_value_set.includes('undefined') ) {\n            attr_value = '';\n            attr_placeholder = 'includes ' + attr_metadata_stat[attr_id]['undefined'] + ' undefined values';\n          } else {\n            switch( attr_value_set.length ) {\n            case 0:\n              attr_value = '';\n              attr_placeholder = 'not applicable';\n              break;\n            case 1:\n              attr_value = attr_value_set[0];\n              attr_placeholder = '';\n              break;\n            default:\n              attr_value = '';\n              attr_placeholder = attr_value_set.length + ' different values: ' + JSON.stringify(attr_value_set).replace(/\"/g,'\\'');\n            }\n          }\n        } else {\n          attr_value = '';\n          attr_placeholder = 'not defined yet!';\n        }\n        break;\n\n      case 'radio':    // fallback\n      case 'dropdown': // fallback\n      case 'image':    // fallback\n        if ( attr_metadata_stat.hasOwnProperty(attr_id) ) {\n          var attr_value_set = Object.keys(attr_metadata_stat[attr_id]);\n          if ( attr_value_set.length === 1 ) {\n            attr_value = attr_value_set[0];\n          } else {\n            attr_value = '';\n          }\n        } else {\n          attr_value = '';\n        }\n        break;\n\n      case 'checkbox':\n        attr_value = {};\n        if ( attr_metadata_stat.hasOwnProperty(attr_id) ) {\n          var attr_value_set = Object.keys(attr_metadata_stat[attr_id]);\n          var same_count = true;\n          var i, n;\n          var attr_value_curr, attr_value_next;\n          n = attr_value_set.length;\n          for ( i = 0; i < n - 1; ++i ) {\n            attr_value_curr = attr_value_set[i];\n            attr_value_next = attr_value_set[i+1];\n\n            if ( attr_metadata_stat[attr_id][attr_value_curr] !== attr_metadata_stat[attr_id][attr_value_next] ) {\n              same_count = false;\n              break;\n            }\n          }\n          if ( same_count ) {\n            var attr_value_i;\n            for ( attr_value_i in attr_metadata_stat[attr_id] ) {\n              attr_value[attr_value_i] = true;\n            }\n          }\n        }\n        break;\n      }\n    }\n\n    switch(attr_type) {\n    case 'text':\n      col.innerHTML = '<textarea ' +\n        'onchange=\"annotation_editor_on_metadata_update(this)\" ' +\n        'onfocus=\"annotation_editor_on_metadata_focus(this)\" ' +\n        'title=\"' + attr_desc + '\" ' +\n        'placeholder=\"' + attr_placeholder + '\" ' +\n        'id=\"' + attr_html_id + '\">' + attr_value + '</textarea>';\n      break;\n    case 'checkbox':\n      var options = _via_attributes[_via_metadata_being_updated][attr_id].options;\n      var option_id;\n      for ( option_id in options ) {\n        var option_html_id = attr_html_id + '__' + option_id;\n        var option = document.createElement('input');\n        option.setAttribute('type', 'checkbox');\n        option.setAttribute('value', option_id);\n        option.setAttribute('id', option_html_id);\n        option.setAttribute('onfocus', 'annotation_editor_on_metadata_focus(this)');\n        option.setAttribute('onchange', 'annotation_editor_on_metadata_update(this)');\n\n        var option_desc  = _via_attributes[_via_metadata_being_updated][attr_id].options[option_id];\n        if ( option_desc === '' || typeof(option_desc) === 'undefined' ) {\n          // option description is optional, use option_id when description is not present\n          option_desc = option_id;\n        }\n\n        // set the value of options based on the user annotations\n        if ( typeof attr_value !== 'undefined') {\n          if ( attr_value.hasOwnProperty(option_id) ) {\n            option.checked = attr_value[option_id];\n          }\n        }\n\n        var label  = document.createElement('label');\n        label.setAttribute('for', option_html_id);\n        label.innerHTML = option_desc;\n\n        var container = document.createElement('span');\n        container.appendChild(option);\n        container.appendChild(label);\n        col.appendChild(container);\n      }\n      break;\n    case 'radio':\n      var option_id;\n      for ( option_id in _via_attributes[_via_metadata_being_updated][attr_id].options ) {\n        var option_html_id = attr_html_id + '__' + option_id;\n        var option = document.createElement('input');\n        option.setAttribute('type', 'radio');\n        option.setAttribute('name', attr_html_id);\n        option.setAttribute('value', option_id);\n        option.setAttribute('id', option_html_id);\n        option.setAttribute('onfocus', 'annotation_editor_on_metadata_focus(this)');\n        option.setAttribute('onchange', 'annotation_editor_on_metadata_update(this)');\n\n        var option_desc  = _via_attributes[_via_metadata_being_updated][attr_id].options[option_id];\n        if ( option_desc === '' || typeof(option_desc) === 'undefined' ) {\n          // option description is optional, use option_id when description is not present\n          option_desc = option_id;\n        }\n\n        if ( attr_value === option_id ) {\n          option.checked = true;\n        }\n\n        var label  = document.createElement('label');\n        label.setAttribute('for', option_html_id);\n        label.innerHTML = option_desc;\n\n        var container = document.createElement('span');\n        container.appendChild(option);\n        container.appendChild(label);\n        col.appendChild(container);\n      }\n      break;\n    case 'image':\n      var option_id;\n      var option_count = 0;\n      for ( option_id in _via_attributes[_via_metadata_being_updated][attr_id].options ) {\n        option_count = option_count + 1;\n      }\n      var img_options = document.createElement('div');\n      img_options.setAttribute('class', 'img_options');\n      col.appendChild(img_options);\n\n      var option_index = 0;\n      for ( option_id in _via_attributes[_via_metadata_being_updated][attr_id].options ) {\n        var option_html_id = attr_html_id + '__' + option_id;\n        var option = document.createElement('input');\n        option.setAttribute('type', 'radio');\n        option.setAttribute('name', attr_html_id);\n        option.setAttribute('value', option_id);\n        option.setAttribute('id', option_html_id);\n        option.setAttribute('onfocus', 'annotation_editor_on_metadata_focus(this)');\n        option.setAttribute('onchange', 'annotation_editor_on_metadata_update(this)');\n\n        var option_desc  = _via_attributes[_via_metadata_being_updated][attr_id].options[option_id];\n        if ( option_desc === '' || typeof(option_desc) === 'undefined' ) {\n          // option description is optional, use option_id when description is not present\n          option_desc = option_id;\n        }\n\n        if ( attr_value === option_id ) {\n          option.checked = true;\n        }\n\n        var label  = document.createElement('label');\n        label.setAttribute('for', option_html_id);\n        label.innerHTML = '<img src=\"' + option_desc + '\"><p>' + option_id + '</p>';\n\n        var container = document.createElement('span');\n        container.appendChild(option);\n        container.appendChild(label);\n        img_options.appendChild(container);\n      }\n      break;\n\n    case 'dropdown':\n      var sel = document.createElement('select');\n      sel.setAttribute('id', attr_html_id);\n      sel.setAttribute('onfocus', 'annotation_editor_on_metadata_focus(this)');\n      sel.setAttribute('onchange', 'annotation_editor_on_metadata_update(this)');\n      var option_id;\n      var option_selected = false;\n      for ( option_id in _via_attributes[_via_metadata_being_updated][attr_id].options ) {\n        var option_html_id = attr_html_id + '__' + option_id;\n        var option = document.createElement('option');\n        option.setAttribute('value', option_id);\n\n        var option_desc  = _via_attributes[_via_metadata_being_updated][attr_id].options[option_id];\n        if ( option_desc === '' || typeof(option_desc) === 'undefined' ) {\n          // option description is optional, use option_id when description is not present\n          option_desc = option_id;\n        }\n\n        if ( option_id === attr_value ) {\n          option.setAttribute('selected', 'selected');\n          option_selected = true;\n        }\n        option.innerHTML = option_desc;\n        sel.appendChild(option);\n      }\n\n      if ( ! option_selected ) {\n        sel.selectedIndex = '-1';\n      }\n      col.appendChild(sel);\n      break;\n    }\n\n    row.appendChild(col);\n  }\n  return row;\n}\n\nfunction annotation_editor_scroll_to_row(row_id) {\n  if ( is_annotation_editor_visible() ) {\n    var row_html_id = 'ae_' + _via_metadata_being_updated + '_' + row_id;\n    var row = document.getElementById(row_html_id);\n    row.scrollIntoView(false);\n  }\n}\n\nfunction annotation_editor_highlight_row(row_id) {\n  if ( is_annotation_editor_visible() ) {\n    var row_html_id = 'ae_' + _via_metadata_being_updated + '_' + row_id;\n    var row = document.getElementById(row_html_id);\n    row.classList.add('highlight');\n  }\n}\n\nfunction annotation_editor_clear_row_highlight() {\n  if ( is_annotation_editor_visible() ) {\n    var ae = document.getElementById('annotation_editor');\n    var i;\n    for ( i=0; i<ae.childNodes.length; ++i ) {\n      ae.childNodes[i].classList.remove('highlight');\n    }\n  }\n}\n\nfunction annotation_editor_extract_html_id_components(html_id) {\n  // html_id : attribute_name__row-id__option_id\n  var parts = html_id.split('__');\n  var parsed_id = {};\n  switch( parts.length ) {\n  case 3:\n    // html_id : attribute-id__row-id__option_id\n    parsed_id.attr_id = parts[0];\n    parsed_id.row_id  = parts[1];\n    parsed_id.option_id = parts[2];\n    break;\n  case 2:\n    // html_id : attribute-id__row-id\n    parsed_id.attr_id = parts[0];\n    parsed_id.row_id  = parts[1];\n    break;\n  default:\n  }\n  return parsed_id;\n}\n\nfunction _via_get_file_metadata_stat(img_index_list, attr_id) {\n  var stat = {};\n  stat[attr_id] = {};\n  var i, n, img_id, img_index, value;\n  n = img_index_list.length;\n  for ( i = 0; i < n; ++i ) {\n    img_index = img_index_list[i];\n    img_id = _via_image_id_list[img_index];\n    if ( _via_img_metadata[img_id].file_attributes.hasOwnProperty(attr_id) ) {\n      value = _via_img_metadata[img_id].file_attributes[attr_id];\n      if ( typeof(value) === 'object' ) {\n        // checkbox has multiple values and hence is object\n        var key;\n        for ( key in value ) {\n          if ( stat[attr_id].hasOwnProperty(key) ) {\n            stat[attr_id][key] += 1;\n          } else {\n            stat[attr_id][key] = 1;\n          }\n        }\n      } else {\n        if ( stat[attr_id].hasOwnProperty(value) ) {\n          stat[attr_id][value] += 1;\n        } else {\n          stat[attr_id][value] = 1;\n        }\n      }\n    }\n\n  }\n  return stat;\n}\n\nfunction _via_get_region_metadata_stat(img_index_list, attr_id) {\n  var stat = {};\n  stat[attr_id] = {};\n  var i, n, img_id, img_index, value;\n  var j, m;\n  n = img_index_list.length;\n  for ( i = 0; i < n; ++i ) {\n    img_index = img_index_list[i];\n    img_id = _via_image_id_list[img_index];\n    m = _via_img_metadata[img_id].regions.length;\n    for ( j = 0; j < m; ++j ) {\n      if ( ! image_grid_is_region_in_current_group( _via_img_metadata[img_id].regions[j].region_attributes ) ) {\n        // skip region not in current group\n        continue;\n      }\n\n      value = _via_img_metadata[img_id].regions[j].region_attributes[attr_id];\n      if ( typeof(value) === 'object' ) {\n        // checkbox has multiple values and hence is object\n        var key;\n        for ( key in value ) {\n          if ( stat[attr_id].hasOwnProperty(key) ) {\n            stat[attr_id][key] += 1;\n          } else {\n            stat[attr_id][key] = 1;\n          }\n        }\n      } else {\n        if ( stat[attr_id].hasOwnProperty(value) ) {\n          stat[attr_id][value] += 1;\n        } else {\n          stat[attr_id][value] = 1;\n        }\n      }\n    }\n  }\n  return stat;\n}\n\n// invoked when the input entry in annotation editor receives focus\nfunction annotation_editor_on_metadata_focus(p) {\n  if ( _via_annotation_editor_mode === VIA_ANNOTATION_EDITOR_MODE.ALL_REGIONS ) {\n    var pid       = annotation_editor_extract_html_id_components(p.id);\n    var region_id = pid.row_id;\n    // clear existing highlights (if any)\n    toggle_all_regions_selection(false);\n    annotation_editor_clear_row_highlight();\n    // set new selection highlights\n    set_region_select_state(region_id, true);\n    annotation_editor_scroll_to_row(region_id);\n    annotation_editor_highlight_row(region_id);\n\n    _via_redraw_reg_canvas();\n  }\n}\n\n// invoked when the user updates annotations using the annotation editor\nfunction annotation_editor_on_metadata_update(p) {\n  var pid       = annotation_editor_extract_html_id_components(p.id);\n  var img_id    = _via_image_id;\n\n  var img_index_list = [ _via_image_index ];\n  var region_id = pid.row_id;\n  if ( _via_display_area_content_name === VIA_DISPLAY_AREA_CONTENT_NAME.IMAGE_GRID ) {\n    img_index_list = _via_image_grid_selected_img_index_list.slice(0);\n    region_id = -1; // this flag denotes that we want to update all regions\n  }\n\n  if ( _via_metadata_being_updated === 'file' ) {\n    annotation_editor_update_file_metadata(img_index_list, pid.attr_id, p.value, p.checked).then( function(update_count) {\n      annotation_editor_on_metadata_update_done('file', pid.attr_id, update_count);\n    }, function(err) {\n      console.log(err)\n      show_message('Failed to update file attributes! ' + err);\n    });\n    return;\n  }\n\n  if ( _via_metadata_being_updated === 'region' ) {\n    annotation_editor_update_region_metadata(img_index_list, region_id, pid.attr_id, p.value, p.checked).then( function(update_count) {\n      annotation_editor_on_metadata_update_done('region', pid.attr_id, update_count);\n    }, function(err) {\n      show_message('Failed to update region attributes! ');\n    });\n    return;\n  }\n}\n\nfunction annotation_editor_on_metadata_update_done(type, attr_id, update_count) {\n  show_message('Updated ' + type + ' attributes of ' + update_count + ' ' + type + 's');\n  // check if the updated attribute is one of the group variables\n  var i, n, type, attr_id;\n  n = _via_image_grid_group_var.length;\n  var clear_all_group = false;\n  for ( i = 0; i < n; ++i ) {\n    if ( _via_image_grid_group_var[i].type === type &&\n         _via_image_grid_group_var[i].name === attr_id ) {\n      clear_all_group = true;\n      break;\n    }\n  }\n  _via_regions_group_color_init();\n  _via_redraw_reg_canvas();\n\n  // @todo: it is wasteful to cancel the full set of groups.\n  // we should only cancel the groups that are affected by this update.\n  if ( _via_display_area_content_name === VIA_DISPLAY_AREA_CONTENT_NAME.IMAGE_GRID ) {\n    if ( clear_all_group ) {\n      image_grid_show_all_project_images();\n    }\n  }\n}\n\nfunction annotation_editor_update_file_metadata(img_index_list, attr_id, new_value, new_checked) {\n  return new Promise( function(ok_callback, err_callback) {\n    var i, n, img_id, img_index;\n    n = img_index_list.length;\n    var update_count = 0;\n    for ( i = 0; i < n; ++i ) {\n      img_index = img_index_list[i];\n      img_id = _via_image_id_list[img_index];\n\n      switch( _via_attributes['file'][attr_id].type ) {\n      case 'text':  // fallback\n      case 'radio': // fallback\n      case 'dropdown': // fallback\n      case 'image':\n        _via_img_metadata[img_id].file_attributes[attr_id] = new_value;\n        update_count += 1;\n        break;\n\n      case 'checkbox':\n        var option_id = new_value;\n        if ( _via_img_metadata[img_id].file_attributes.hasOwnProperty(attr_id) ) {\n          if ( typeof(_via_img_metadata[img_id].file_attributes[attr_id]) !== 'object' ) {\n            var old_value = _via_img_metadata[img_id].file_attributes[attr_id];\n            _via_img_metadata[img_id].file_attributes[attr_id] = {};\n            if ( Object.keys(_via_attributes['file'][attr_id]['options']).includes(old_value) ) {\n              // transform existing value as checkbox option\n              _via_img_metadata[img_id].file_attributes[attr_id] = {};\n              _via_img_metadata[img_id].file_attributes[attr_id][old_value] = true;\n            }\n          }\n        } else {\n          _via_img_metadata[img_id].file_attributes[attr_id] = {};\n        }\n        if ( new_checked ) {\n          _via_img_metadata[img_id].file_attributes[attr_id][option_id] = true;\n        } else {\n          // false option values are not stored\n          delete _via_img_metadata[img_id].file_attributes[attr_id][option_id];\n        }\n        update_count += 1;\n        break;\n      }\n    }\n    ok_callback(update_count);\n  });\n}\n\nfunction annotation_editor_update_region_metadata(img_index_list, region_id, attr_id, new_value, new_checked) {\n  return new Promise( function(ok_callback, err_callback) {\n    var i, n, img_id, img_index;\n    n = img_index_list.length;\n    var update_count = 0;\n    var region_list = [];\n    var j, m;\n\n    if ( region_id === -1 ) {\n      // update all regions on a file (for image grid view)\n      for ( i = 0; i < n; ++i ) {\n        img_index = img_index_list[i];\n        img_id = _via_image_id_list[img_index];\n\n        m = _via_img_metadata[img_id].regions.length;\n        for ( j = 0; j < m; ++j ) {\n          if ( ! image_grid_is_region_in_current_group( _via_img_metadata[img_id].regions[j].region_attributes ) ) {\n            continue;\n          }\n\n          switch( _via_attributes['region'][attr_id].type ) {\n          case 'text':  // fallback\n          case 'dropdown': // fallback\n          case 'radio': // fallback\n          case 'image':\n            _via_img_metadata[img_id].regions[j].region_attributes[attr_id] = new_value;\n            update_count += 1;\n            break;\n          case 'checkbox':\n            var option_id = new_value;\n            if ( _via_img_metadata[img_id].regions[j].region_attributes.hasOwnProperty(attr_id) ) {\n              if ( typeof(_via_img_metadata[img_id].regions[j].region_attributes[attr_id]) !== 'object' ) {\n                var old_value = _via_img_metadata[img_id].regions[j].region_attributes[attr_id];\n                _via_img_metadata[img_id].regions[j].region_attributes[attr_id] = {}\n                if ( Object.keys(_via_attributes['region'][attr_id]['options']).includes(old_value) ) {\n                  // transform existing value as checkbox option\n                  _via_img_metadata[img_id].regions[j].region_attributes[attr_id][old_value] = true;\n                }\n              }\n            } else {\n              _via_img_metadata[img_id].regions[j].region_attributes[attr_id] = {};\n            }\n\n            if ( new_checked ) {\n              _via_img_metadata[img_id].regions[j].region_attributes[attr_id][option_id] = true;\n            } else {\n              // false option values are not stored\n              delete _via_img_metadata[img_id].regions[j].region_attributes[attr_id][option_id];\n            }\n            update_count += 1;\n            break;\n          }\n        }\n      }\n    } else {\n      // update a single region in a file (for single image view)\n      // update all regions on a file (for image grid view)\n      for ( i = 0; i < n; ++i ) {\n        img_index = img_index_list[i];\n        img_id = _via_image_id_list[img_index];\n\n        switch( _via_attributes['region'][attr_id].type ) {\n        case 'text':  // fallback\n        case 'dropdown': // fallback\n        case 'radio': // fallback\n        case 'image':\n          _via_img_metadata[img_id].regions[region_id].region_attributes[attr_id] = new_value;\n          update_count += 1;\n          break;\n        case 'checkbox':\n          var option_id = new_value;\n\n          if ( _via_img_metadata[img_id].regions[region_id].region_attributes.hasOwnProperty(attr_id) ) {\n            if ( typeof(_via_img_metadata[img_id].regions[region_id].region_attributes[attr_id]) !== 'object' ) {\n              var old_value = _via_img_metadata[img_id].regions[region_id].region_attributes[attr_id];\n              _via_img_metadata[img_id].regions[region_id].region_attributes[attr_id] = {};\n              if ( Object.keys(_via_attributes['region'][attr_id]['options']).includes(old_value) ) {\n                // transform existing value as checkbox option\n                _via_img_metadata[img_id].regions[region_id].region_attributes[attr_id][old_value] = true;\n              }\n            }\n          } else {\n            _via_img_metadata[img_id].regions[region_id].region_attributes[attr_id] = {};\n          }\n\n          if ( new_checked ) {\n            _via_img_metadata[img_id].regions[region_id].region_attributes[attr_id][option_id] = true;\n          } else {\n            // false option values are not stored\n            delete _via_img_metadata[img_id].regions[region_id].region_attributes[attr_id][option_id];\n          }\n          update_count += 1;\n          break;\n        }\n      }\n    }\n    ok_callback(update_count);\n  });\n}\n\nfunction set_region_annotations_to_default_value(rid) {\n  var attr_id;\n  for ( attr_id in _via_attributes['region'] ) {\n    var attr_type = _via_attributes['region'][attr_id].type;\n    switch( attr_type ) {\n    case 'text':\n      var default_value = _via_attributes['region'][attr_id].default_value;\n      if ( typeof(default_value) !== 'undefined' ) {\n        _via_img_metadata[_via_image_id].regions[rid].region_attributes[attr_id] = default_value;\n      }\n      break;\n    case 'image':    // fallback\n    case 'dropdown': // fallback\n    case 'radio':\n      _via_img_metadata[_via_image_id].regions[rid].region_attributes[attr_id] = '';\n      var default_options = _via_attributes['region'][attr_id].default_options;\n      if ( typeof(default_options) !== 'undefined' ) {\n        _via_img_metadata[_via_image_id].regions[rid].region_attributes[attr_id] = Object.keys(default_options)[0];\n      }\n      break;\n\n    case 'checkbox':\n      _via_img_metadata[_via_image_id].regions[rid].region_attributes[attr_id] = {};\n      var default_options = _via_attributes['region'][attr_id].default_options;\n      if ( typeof(default_options) !== 'underfined' ) {\n        var option_id;\n        for ( option_id in default_options ) {\n          var default_value = default_options[option_id];\n          if ( typeof(default_value) !== 'underfined' ) {\n            _via_img_metadata[_via_image_id].regions[rid].region_attributes[attr_id][option_id] = default_value;\n          }\n        }\n      }\n      break;\n    }\n  }\n}\n\nfunction set_file_annotations_to_default_value(image_id) {\n  var attr_id;\n  for ( attr_id in _via_attributes['file'] ) {\n    var attr_type = _via_attributes['file'][attr_id].type;\n    switch( attr_type ) {\n    case 'text':\n      var default_value = _via_attributes['file'][attr_id].default_value;\n      _via_img_metadata[image_id].file_attributes[attr_id] = default_value;\n      break;\n    case 'image':    // fallback\n    case 'dropdown': // fallback\n    case 'radio':\n      _via_img_metadata[image_id].file_attributes[attr_id] = '';\n      var default_options = _via_attributes['file'][attr_id].default_options;\n      _via_img_metadata[image_id].file_attributes[attr_id] = Object.keys(default_options)[0];\n      break;\n    case 'checkbox':\n      _via_img_metadata[image_id].file_attributes[attr_id] = {};\n      var default_options = _via_attributes['file'][attr_id].default_options;\n      var option_id;\n      for ( option_id in default_options ) {\n        var default_value = default_options[option_id];\n        _via_img_metadata[image_id].file_attributes[attr_id][option_id] = default_value;\n      }\n      break;\n    }\n  }\n}\n\nfunction annotation_editor_increase_panel_height() {\n  var p = document.getElementById('annotation_editor_panel');\n  if ( _via_settings.ui.annotation_editor_height < 95 ) {\n    _via_settings.ui.annotation_editor_height += VIA_ANNOTATION_EDITOR_HEIGHT_CHANGE;\n    p.style.height = _via_settings.ui.annotation_editor_height + '%';\n  }\n}\n\nfunction annotation_editor_decrease_panel_height() {\n  var p = document.getElementById('annotation_editor_panel');\n  if ( _via_settings.ui.annotation_editor_height > 10 ) {\n    _via_settings.ui.annotation_editor_height -= VIA_ANNOTATION_EDITOR_HEIGHT_CHANGE;\n    p.style.height = _via_settings.ui.annotation_editor_height + '%';\n  }\n}\n\nfunction annotation_editor_increase_content_size() {\n  var p = document.getElementById('annotation_editor_panel');\n  if ( _via_settings.ui.annotation_editor_fontsize < 1.6 ) {\n    _via_settings.ui.annotation_editor_fontsize += VIA_ANNOTATION_EDITOR_FONTSIZE_CHANGE;\n    p.style.fontSize = _via_settings.ui.annotation_editor_fontsize + 'rem';\n  }\n}\n\nfunction annotation_editor_decrease_content_size() {\n  var p = document.getElementById('annotation_editor_panel');\n  if ( _via_settings.ui.annotation_editor_fontsize > 0.4 ) {\n    _via_settings.ui.annotation_editor_fontsize -= VIA_ANNOTATION_EDITOR_FONTSIZE_CHANGE;\n    p.style.fontSize = _via_settings.ui.annotation_editor_fontsize + 'rem';\n  }\n}\n\n//\n// via project\n//\nfunction project_set_name(name) {\n  _via_settings.project.name = name;\n\n  var p = document.getElementById('project_name');\n  p.value = _via_settings.project.name;\n}\n\nfunction project_init_default_project() {\n  if ( ! _via_settings.hasOwnProperty('project') ) {\n    _via_settings.project = {};\n  }\n\n  project_set_name( project_get_default_project_name() );\n}\n\nfunction project_on_name_update(p) {\n  project_set_name(p.value);\n}\n\nfunction project_get_default_project_name() {\n  const now = new Date();\n  var MONTH_SHORT_NAME = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n  var ts = now.getDate() + MONTH_SHORT_NAME[now.getMonth()] + now.getFullYear() +\n      '_' + now.getHours() + 'h' + now.getMinutes() + 'm';\n\n  var project_name = 'via_project_' + ts;\n  return project_name;\n}\n\nfunction project_save_with_confirm() {\n  var config = {'title':'Save Project' };\n  var input = { 'project_name': { type:'text', name:'Project Name', value:_via_settings.project.name, disabled:false, size:30 },\n                'save_annotations':{ type:'checkbox', name:'Save region and file annotations (i.e. manual annotations)', checked:true, disabled:false},\n                'save_attributes':{ type:'checkbox', name:'Save region and file attributes.', checked:true},\n                'save_via_settings':{ type:'checkbox', name:'Save VIA application settings', checked:true},\n                //                'save_base64_data':{ type:'checkbox', name:'Save base64 data of images (if present)', checked:false},\n                //                'save_images':{type:'checkbox', 'name':'Save images <span class=\"warning\">(WARNING: only recommended for projects containing small number of images)</span>', value:false},\n              };\n\n  invoke_with_user_inputs(project_save_confirmed, input, config);\n}\n\nfunction project_save_confirmed(input) {\n  if ( input.project_name.value !== _via_settings.project.name ) {\n    project_set_name(input.project_name.value);\n  }\n\n  // via project\n  var _via_project = { '_via_settings': _via_settings,\n                       '_via_img_metadata': _via_img_metadata,\n                       '_via_attributes': _via_attributes,\n                       '_via_data_format_version': '2.0.10',\n                       '_via_image_id_list': _via_image_id_list\n                     };\n\n  var filename = input.project_name.value + '.json';\n  var data_blob = new Blob( [JSON.stringify(_via_project)],\n                            {type: 'text/json;charset=utf-8'});\n\n  save_data_to_local_file(data_blob, filename);\n\n  user_input_default_cancel_handler();\n}\n\nfunction project_open_select_project_file() {\n  if (invisible_file_input) {\n    invisible_file_input.accept = '.json';\n    invisible_file_input.onchange = project_open;\n    invisible_file_input.removeAttribute('multiple');\n    invisible_file_input.click();\n  }\n}\n\nfunction project_open(event) {\n  var selected_file = event.target.files[0];\n  load_text_file(selected_file, project_open_parse_json_file);\n}\n\nfunction project_open_parse_json_file(project_file_data) {\n  var d = JSON.parse(project_file_data);\n  if ( d['_via_settings'] && d['_via_img_metadata'] && d['_via_attributes'] ) {\n    // import settings\n    project_import_settings(d['_via_settings']);\n\n    // clear existing data (if any)\n    _via_image_id_list = [];\n    _via_image_filename_list = [];\n    _via_img_count = 0;\n    _via_img_metadata = {};\n    _via_img_fileref = {};\n    _via_img_src = {};\n    _via_attributes = { 'region':{}, 'file':{} };\n    _via_buffer_remove_all();\n\n    // import image metadata\n    _via_img_metadata = {};\n    for ( var img_id in d['_via_img_metadata'] ) {\n      if('filename' in d['_via_img_metadata'][img_id] &&\n         'size' in d['_via_img_metadata'][img_id] &&\n         'regions' in d['_via_img_metadata'][img_id] &&\n         'file_attributes' in d['_via_img_metadata'][img_id]) {\n        if( !d.hasOwnProperty('_via_image_id_list') ) {\n          _via_image_id_list.push(img_id);\n          _via_image_filename_list.push( d['_via_img_metadata'][img_id].filename );\n        }\n\n        set_file_annotations_to_default_value(img_id);\n        _via_img_metadata[img_id] = d['_via_img_metadata'][img_id];\n        _via_img_count += 1;\n      } else {\n        console.log('discarding malformed entry for ' + img_id +\n                    ': ' + JSON.stringify(d['_via_img_metadata'][img_id]));\n      }\n    }\n\n\n    // import image_id_list which records the order of images\n    if( d.hasOwnProperty('_via_image_id_list') ) {\n      _via_image_id_list = d['_via_image_id_list'];\n      for(var img_id_index in d['_via_image_id_list']) {\n        var img_id = d['_via_image_id_list'][img_id_index];\n        _via_image_filename_list.push(_via_img_metadata[img_id]['filename']);\n      }\n    }\n\n    // import attributes\n    _via_attributes = d['_via_attributes'];\n    project_parse_via_attributes_from_img_metadata();\n    var fattr_id_list = Object.keys(_via_attributes['file']);\n    var rattr_id_list = Object.keys(_via_attributes['region']);\n    if ( rattr_id_list.length ) {\n      _via_attribute_being_updated = 'region';\n      _via_current_attribute_id = rattr_id_list[0];\n    } else {\n      if ( fattr_id_list.length ) {\n        _via_attribute_being_updated = 'file';\n        _via_current_attribute_id = fattr_id_list[0];\n      }\n    }\n\n    if ( _via_settings.core.default_filepath !== '' ) {\n      _via_file_resolve_all_to_default_filepath();\n    }\n\n    show_message('Imported project [' + _via_settings['project'].name + '] with ' + _via_img_count + ' files.');\n\n    if ( _via_img_count > 0 ) {\n      _via_show_img(0);\n      update_img_fn_list();\n      _via_reload_img_fn_list_table = true;\n    }\n  } else {\n    show_message('Cannot import project from a corrupt file!');\n  }\n}\n\nfunction project_parse_via_attributes_from_img_metadata() {\n  // parse _via_img_metadata to populate _via_attributes\n  var img_id, fa, ra;\n\n  if ( ! _via_attributes.hasOwnProperty('file') ) {\n    _via_attributes['file'] = {};\n  }\n  if ( ! _via_attributes.hasOwnProperty('region') ) {\n    _via_attributes['region'] = {};\n  }\n\n  for ( img_id in _via_img_metadata ) {\n    // file attributes\n    for ( fa in _via_img_metadata[img_id].file_attributes ) {\n      if ( ! _via_attributes['file'].hasOwnProperty(fa) ) {\n        _via_attributes['file'][fa] = {};\n        _via_attributes['file'][fa]['type'] = 'text';\n      }\n    }\n    // region attributes\n    var ri;\n    for ( ri = 0; ri < _via_img_metadata[img_id].regions.length; ++ri ) {\n      for ( ra in _via_img_metadata[img_id].regions[ri].region_attributes ) {\n        if ( ! _via_attributes['region'].hasOwnProperty(ra) ) {\n          _via_attributes['region'][ra] = {};\n          _via_attributes['region'][ra]['type'] = 'text';\n        }\n      }\n    }\n  }\n}\n\nfunction project_import_settings(s) {\n  // @todo find a generic way to import into _via_settings\n  // only the components present in s (and not overwrite everything)\n  var k1;\n  for ( k1 in s ) {\n    if ( typeof( s[k1] ) === 'object' ) {\n      var k2;\n      for ( k2 in s[k1] ) {\n        if ( typeof( s[k1][k2] ) === 'object' ) {\n          var k3;\n          for ( k3 in s[k1][k2] ) {\n            _via_settings[k1][k2][k3] = s[k1][k2][k3];\n          }\n        } else {\n          _via_settings[k1][k2] = s[k1][k2];\n        }\n      }\n    } else {\n      _via_settings[k1] = s[k1];\n    }\n  }\n}\n\nfunction project_file_remove_with_confirm() {\n  var img_id = _via_image_id_list[_via_image_index];\n  var filename = _via_img_metadata[img_id].filename;\n  var region_count = _via_img_metadata[img_id].regions.length;\n\n  var config = {'title':'Remove File from Project' };\n  var input = { 'img_index': { type:'text', name:'File Id', value:(_via_image_index+1), disabled:true, size:8 },\n                'filename':{ type:'text', name:'Filename', value:filename, disabled:true, size:30},\n                'region_count':{ type:'text', name:'Number of regions', disabled:true, value:region_count, size:8}\n              };\n\n  invoke_with_user_inputs(project_file_remove_confirmed, input, config);\n}\n\nfunction project_file_remove_confirmed(input) {\n  var img_index = input.img_index.value - 1;\n  project_remove_file(img_index);\n\n  if ( img_index === _via_img_count ) {\n    if ( _via_img_count === 0 ) {\n      _via_current_image_loaded = false;\n      show_home_panel();\n    } else {\n      _via_show_img(img_index - 1);\n    }\n  } else {\n    _via_show_img(img_index);\n  }\n  _via_reload_img_fn_list_table = true;\n  update_img_fn_list();\n  show_message('Removed file [' + input.filename.value + '] from project');\n  user_input_default_cancel_handler();\n}\n\n\nfunction project_remove_file(img_index) {\n  if ( img_index < 0 || img_index >= _via_img_count ) {\n    console.log('project_remove_file(): invalid img_index ' + img_index);\n    return;\n  }\n  var img_id = _via_image_id_list[img_index];\n\n  // remove img_index from all array\n  // this invalidates all image_index > img_index\n  _via_image_id_list.splice( img_index, 1 );\n  _via_image_filename_list.splice( img_index, 1 );\n\n  var img_fn_list_index = _via_img_fn_list_img_index_list.indexOf(img_index);\n  if ( img_fn_list_index !== -1 ) {\n    _via_img_fn_list_img_index_list.splice( img_fn_list_index, 1 );\n  }\n\n  // clear all buffer\n  // @todo: it is wasteful to clear all the buffer instead of removing a single image\n  _via_buffer_remove_all();\n  img_fn_list_clear_css_classname('buffered');\n\n  _via_clear_reg_canvas();\n  delete _via_img_metadata[img_id];\n  delete _via_img_src[img_id];\n  delete _via_img_fileref[img_id];\n\n  _via_img_count -= 1;\n}\n\nfunction project_add_new_file(filename, size, file_id) {\n  var img_id = file_id;\n  if ( typeof(img_id) === 'undefined' ) {\n    if ( typeof(size) === 'undefined' ) {\n      size = -1;\n    }\n    img_id = _via_get_image_id(filename, size);\n  }\n\n  if ( ! _via_img_metadata.hasOwnProperty(img_id) ) {\n    _via_img_metadata[img_id] = new file_metadata(filename, size);\n    _via_image_id_list.push(img_id);\n    _via_image_filename_list.push(filename);\n    _via_img_count += 1;\n  }\n  return img_id;\n}\n\nfunction project_file_add_local(event) {\n  var user_selected_images = event.target.files;\n  var original_image_count = _via_img_count;\n\n  var new_img_index_list = [];\n  var discarded_file_count = 0;\n  for ( var i = 0; i < user_selected_images.length; ++i ) {\n    var filetype = user_selected_images[i].type.substr(0, 5);\n    if ( filetype === 'image' ) {\n      // check which filename in project matches the user selected file\n      var img_index = _via_image_filename_list.indexOf(user_selected_images[i].name);\n       if( img_index === -1) {\n        // a new file was added to project\n        var new_img_id = project_add_new_file(user_selected_images[i].name,\n                                              user_selected_images[i].size);\n        _via_img_fileref[new_img_id] = user_selected_images[i];\n        set_file_annotations_to_default_value(new_img_id);\n        new_img_index_list.push( _via_image_id_list.indexOf(new_img_id) );\n      } else {\n        // an existing file was resolved using browser's file selector\n        var img_id = _via_image_id_list[img_index];\n        _via_img_fileref[img_id] = user_selected_images[i];\n        _via_img_metadata[img_id]['size'] = user_selected_images[i].size;\n      }\n    } else {\n      discarded_file_count += 1;\n    }\n  }\n\n  if ( _via_img_metadata ) {\n    var status_msg = 'Loaded ' + new_img_index_list.length + ' images.';\n    if ( discarded_file_count ) {\n      status_msg += ' ( Discarded ' + discarded_file_count + ' non-image files! )';\n    }\n    show_message(status_msg);\n\n    if ( new_img_index_list.length ) {\n      // show first of newly added image\n      _via_show_img( new_img_index_list[0] );\n    } else {\n      // show original image\n      _via_show_img ( _via_image_index );\n    }\n    update_img_fn_list();\n  } else {\n    show_message(\"Please upload some image files!\");\n  }\n}\n\nfunction project_file_add_abs_path_with_input() {\n  var config = {'title':'Add File using Absolute Path' };\n  var input = { 'absolute_path': { type:'text', name:'add one absolute path', placeholder:'/home/abhishek/image1.jpg', disabled:false, size:50 },\n\t\t'absolute_path_list': { type:'textarea', name:'or, add multiple paths (one path per line)', placeholder:'/home/abhishek/image1.jpg\\n/home/abhishek/image2.jpg\\n/home/abhishek/image3.png', disabled:false, rows:5, cols:80 }\n              };\n\n  invoke_with_user_inputs(project_file_add_abs_path_input_done, input, config);\n}\n\nfunction project_file_add_abs_path_input_done(input) {\n  if ( input.absolute_path.value !== '' ) {\n    var abs_path  = input.absolute_path.value.trim();\n    var img_id    = project_file_add_url(abs_path);\n    var img_index = _via_image_id_list.indexOf(img_id);\n    _via_show_img(img_index);\n    show_message('Added file at absolute path [' + abs_path + ']');\n    update_img_fn_list();\n    user_input_default_cancel_handler();\n  } else {\n    if ( input.absolute_path_list.value !== '' ) {\n      var absolute_path_list_str = input.absolute_path_list.value;\n      import_files_url_from_csv(absolute_path_list_str);\n    }\n  }\n}\n\nfunction project_file_add_url_with_input() {\n  var config = {'title':'Add File using URL' };\n  var input = { 'url': { type:'text', name:'add one URL', placeholder:'http://www.robots.ox.ac.uk/~vgg/software/via/images/swan.jpg', disabled:false, size:50 },\n\t\t'url_list': { type:'textarea', name:'or, add multiple URL (one url per line)', placeholder:'http://www.example.com/image1.jpg\\nhttp://www.example.com/image2.jpg\\nhttp://www.example.com/image3.png', disabled:false, rows:5, cols:80 }\n              };\n\n  invoke_with_user_inputs(project_file_add_url_input_done, input, config);\n}\n\nfunction project_file_add_url_input_done(input) {\n  if ( input.url.value !== '' ) {\n    var url = input.url.value.trim();\n    var img_id    = project_file_add_url(url);\n    var img_index = _via_image_id_list.indexOf(img_id);\n    show_message('Added file at url [' + url + ']');\n    update_img_fn_list();\n    _via_show_img(img_index);\n    user_input_default_cancel_handler();\n  } else {\n    if ( input.url_list.value !== '' ) {\n      var url_list_str = input.url_list.value;\n      import_files_url_from_csv(url_list_str);\n    }\n  }\n}\n\nfunction project_file_add_url(url) {\n  if ( url !== '' ) {\n    var size = -1; // convention: files added using url have size = -1\n    var img_id   = _via_get_image_id(url, size);\n\n    if ( ! _via_img_metadata.hasOwnProperty(img_id) ) {\n      img_id = project_add_new_file(url);\n      _via_img_src[img_id] = _via_img_metadata[img_id].filename;\n      set_file_annotations_to_default_value(img_id);\n      return img_id;\n    }\n  }\n}\n\nfunction project_file_add_base64(filename) {\n  var size = -1; // convention: files added using url have size = -1\n  var img_id   = _via_get_image_id(filename, size);\n\n  if ( ! _via_img_metadata.hasOwnProperty(img_id) ) {\n    img_id = project_add_new_file(filename, size);\n    _via_img_src[img_id] = _via_img_metadata[img_id].filename;\n    set_file_annotations_to_default_value(img_id);\n  }\n}\n\nfunction project_file_load_on_fail(img_index) {\n  var img_id = _via_image_id_list[img_index];\n  _via_img_src[img_id] = '';\n  _via_image_load_error[img_index] = true;\n  img_fn_list_ith_entry_error(img_index, true);\n}\n\nfunction project_file_load_on_success(img_index) {\n  _via_image_load_error[img_index] = false;\n  img_fn_list_ith_entry_error(img_index, false);\n}\n\nfunction project_settings_toggle() {\n  if ( _via_display_area_content_name === VIA_DISPLAY_AREA_CONTENT_NAME.SETTINGS ) {\n    show_single_image_view();\n  } else {\n    project_settings_show();\n  }\n}\n\nfunction project_settings_show() {\n  set_display_area_content(VIA_DISPLAY_AREA_CONTENT_NAME.SETTINGS);\n}\n\nfunction project_filepath_add_from_input(p, button) {\n  var new_path = document.getElementById(p).value.trim();\n  var img_index = parseInt(button.getAttribute('value'));\n  project_filepath_add(new_path);\n  _via_show_img(img_index);\n}\n\nfunction project_filepath_add(new_path) {\n  if ( path === '' ) {\n    return;\n  }\n\n  if ( _via_settings.core.filepath.hasOwnProperty(new_path) ) {\n    return;\n  } else {\n    var largest_order = 0;\n    var path;\n    for ( path in _via_settings.core.filepath ) {\n      if ( _via_settings.core.filepath[path] > largest_order ) {\n        largest_order = _via_settings.core.filepath[path];\n      }\n    }\n    _via_settings.core.filepath[new_path] = largest_order + 1;\n\n  }\n}\n\nfunction project_filepath_del(path) {\n  if ( _via_settings.core.filepath.hasOwnProperty(path) ) {\n    delete _via_settings.core.filepath[path];\n  }\n}\n\nfunction project_save_attributes() {\n  var blob_attr = {type: 'application/json;charset=utf-8'};\n  var all_region_data_blob = new Blob( [ JSON.stringify(_via_attributes) ], blob_attr);\n\n  save_data_to_local_file(all_region_data_blob, _via_settings.project.name + '_attributes.json');\n}\n\nfunction project_import_attributes_from_file(event) {\n  var selected_files = event.target.files;\n  for ( var i = 0; i < selected_files.length; ++i ) {\n    var file = selected_files[i];\n    load_text_file(file, project_import_attributes_from_json);\n  }\n}\n\nfunction project_import_attributes_from_json(data) {\n  try {\n    var d = JSON.parse(data);\n    var attr;\n    var fattr_count = 0;\n    var rattr_count = 0;\n    // process file attributes\n    for ( attr in d['file'] ) {\n      _via_attributes['file'][attr] = JSON.parse( JSON.stringify( d['file'][attr] ) );\n      fattr_count += 1;\n    }\n\n    // process region attributes\n    for ( attr in d['region'] ) {\n      _via_attributes['region'][attr] = JSON.parse( JSON.stringify( d['region'][attr] ) );\n      rattr_count += 1;\n    }\n\n    if ( fattr_count > 0 || rattr_count > 0 ) {\n      var fattr_id_list = Object.keys(_via_attributes['file']);\n      var rattr_id_list = Object.keys(_via_attributes['region']);\n      if ( rattr_id_list.length ) {\n        _via_attribute_being_updated = 'region';\n        _via_current_attribute_id = rattr_id_list[0];\n      } else {\n        if ( fattr_id_list.length ) {\n          _via_attribute_being_updated = 'file';\n          _via_current_attribute_id = fattr_id_list[0];\n        }\n      }\n      attribute_update_panel_set_active_button();\n      update_attributes_update_panel();\n      annotation_editor_update_content();\n    }\n    show_message('Imported ' + fattr_count + ' file attributes and '\n                 + rattr_count + ' region attributes');\n  } catch (error) {\n    show_message('Failed to import attributes: [' + error + ']');\n  }\n}\n\n//\n// image grid\n//\nfunction image_grid_init() {\n  var p = document.getElementById('image_grid_content');\n  p.focus();\n  p.addEventListener('mousedown', image_grid_mousedown_handler, false);\n  p.addEventListener('mouseup', image_grid_mouseup_handler, false);\n  p.addEventListener('dblclick', image_grid_dblclick_handler, false);\n\n  image_grid_set_content_panel_height_fixed();\n\n  // select policy as defined in settings\n  var i, option;\n  var p = document.getElementById('image_grid_show_image_policy');\n  var n = p.options.length;\n  for ( i = 0; i < n; ++i ) {\n    if ( p.options[i].value === _via_settings.ui.image_grid.show_image_policy ) {\n      p.selectedIndex = i;\n      break;\n    }\n  }\n}\n\nfunction image_grid_update() {\n  if ( _via_display_area_content_name === VIA_DISPLAY_AREA_CONTENT_NAME.IMAGE_GRID ) {\n    image_grid_set_content( _via_image_grid_img_index_list );\n  }\n}\n\nfunction image_grid_toggle() {\n  var p = document.getElementById('toolbar_image_grid_toggle');\n  if ( _via_display_area_content_name === VIA_DISPLAY_AREA_CONTENT_NAME.IMAGE_GRID ) {\n    image_grid_clear_all_groups();\n    show_single_image_view();\n  } else {\n    show_image_grid_view();\n  }\n}\n\nfunction image_grid_show_all_project_images() {\n  var all_img_index_list = [];\n  var i, n;\n  //n = _via_image_id_list.length;\n  n = _via_img_fn_list_img_index_list.length;\n  for ( i = 0; i < n; ++i ) {\n    all_img_index_list.push( _via_img_fn_list_img_index_list[i] );\n  }\n  image_grid_clear_all_groups();\n\n  var p = document.getElementById('image_grid_toolbar_group_by_select');\n  p.selectedIndex = 0;\n\n  image_grid_set_content(all_img_index_list);\n}\n\nfunction image_grid_clear_all_groups() {\n  var i, n;\n  n = _via_image_grid_group_var.length;\n  for ( i = 0; i < n; ++i ) {\n    image_grid_remove_html_group_panel( _via_image_grid_group_var[i] );\n    image_grid_group_by_select_set_disabled( _via_image_grid_group_var[i].type,\n                                             _via_image_grid_group_var[i].name,\n                                             false);\n  }\n  _via_image_grid_group = {};\n  _via_image_grid_group_var = [];\n\n}\n\nfunction image_grid_set_content(img_index_list) {\n  if ( img_index_list.length === 0 ) {\n    return;\n  }\n  if ( _via_image_grid_load_ongoing ) {\n    return;\n  }\n\n  _via_image_grid_img_index_list = img_index_list.slice(0);\n  _via_image_grid_selected_img_index_list = img_index_list.slice(0);\n\n  document.getElementById('image_grid_group_by_img_count').innerHTML = _via_image_grid_img_index_list.length;\n\n  _via_image_grid_page_first_index    = 0;\n  _via_image_grid_page_last_index     = null;\n  _via_image_grid_stack_prev_page     = [];\n  _via_image_grid_page_img_index_list = [];\n\n  image_grid_clear_content();\n  image_grid_set_content_panel_height_fixed();\n  _via_image_grid_load_ongoing = true;\n\n  var n = _via_image_grid_img_index_list.length;\n  switch ( _via_settings.ui.image_grid.show_image_policy ) {\n  case 'all':\n    _via_image_grid_page_img_index_list = _via_image_grid_img_index_list.slice(0);\n    break;\n  case 'first_mid_last':\n    if ( n < 3 ) {\n      var i;\n      for ( i = 0; i < n; ++i ) {\n        _via_image_grid_page_img_index_list.push( _via_image_grid_img_index_list[i] );\n      }\n    } else {\n      _via_image_grid_page_img_index_list.push( _via_image_grid_img_index_list[0] );\n      _via_image_grid_page_img_index_list.push( _via_image_grid_img_index_list[ Math.floor(n/2) ] );\n      _via_image_grid_page_img_index_list.push( _via_image_grid_img_index_list[n-1] );\n    }\n    break;\n  case 'even_indexed':\n    var i;\n    for ( i = 0; i < n; ++i ) {\n      if ( i % 2 !== 0 ) { // since the user views (i+1) based indexing\n        _via_image_grid_page_img_index_list.push( _via_image_grid_img_index_list[i] );\n      }\n    }\n    break;\n  case 'odd_indexed':\n    var i;\n    for ( i = 0; i < n; ++i ) {\n      if ( i % 2 === 0 ) { // since the user views (i+1) based indexing\n        _via_image_grid_page_img_index_list.push( _via_image_grid_img_index_list[i] );\n      }\n    }\n    break;\n  case 'gap5':  // fallback\n  case 'gap25': // fallback\n  case 'gap50': // fallback\n    var del = parseInt( _via_settings.ui.image_grid.show_image_policy.substr( 'gap'.length ) );\n    var i;\n    for ( i = 0; i < n; i = i + del ) {\n      _via_image_grid_page_img_index_list.push( _via_image_grid_img_index_list[i] );\n    }\n    break;\n  }\n\n  _via_image_grid_visible_img_index_list = [];\n\n  image_grid_update_sel_count_html();\n  annotation_editor_update_content();\n\n  image_grid_content_append_img( _via_image_grid_page_first_index );\n\n  show_message('[Click] toggles selection, ' +\n               '[Shift + Click] selects everything a image, ' +\n               '[Click] or [Ctrl + Click] removes selection of all subsequent or preceeding images.');\n}\n\nfunction image_grid_clear_content() {\n  var img_container = document.getElementById('image_grid_content_img');\n  var img_rshape = document.getElementById('image_grid_content_rshape');\n  img_container.innerHTML = '';\n  img_rshape.innerHTML = '';\n  _via_image_grid_visible_img_index_list = [];\n}\n\nfunction image_grid_set_content_panel_height_fixed() {\n  var pc = document.getElementById('image_grid_content');\n  var de = document.documentElement;\n  pc.style.height = (de.clientHeight - 5.5*ui_top_panel.offsetHeight) + 'px';\n}\n\n// We do not know how many images will fit in the display area.\n// Therefore, we add images one-by-one until overflow of parent\n// container is detected.\nfunction image_grid_content_append_img( img_grid_index ) {\n  var img_index   = _via_image_grid_page_img_index_list[img_grid_index];\n  var html_img_id = image_grid_get_html_img_id(img_index);\n  var img_id      = _via_image_id_list[img_index];\n  var e = document.createElement('img');\n  if ( _via_img_fileref[img_id] instanceof File ) {\n    var img_reader = new FileReader();\n    img_reader.addEventListener( \"error\", function() {\n      //@todo\n    }, false);\n    img_reader.addEventListener( \"load\", function() {\n      e.src = img_reader.result;\n    }, false);\n    img_reader.readAsDataURL( _via_img_fileref[img_id] );\n  } else {\n    e.src = _via_img_src[img_id];\n  }\n  e.setAttribute('id', html_img_id);\n  e.setAttribute('height', _via_settings.ui.image_grid.img_height + 'px');\n  e.setAttribute('title', '[' + (img_index+1) + '] ' + _via_img_metadata[img_id].filename);\n\n  e.addEventListener('load', image_grid_on_img_load, false);\n  e.addEventListener('error', image_grid_on_img_error, false);\n  document.getElementById('image_grid_content_img').appendChild(e);\n}\n\nfunction image_grid_on_img_load(e) {\n  var img = e.target;\n  var img_index = image_grid_parse_html_img_id(img.id);\n  project_file_load_on_success(img_index);\n\n  image_grid_add_img_if_possible(img);\n}\n\nfunction image_grid_on_img_error(e) {\n  var img       = e.target;\n  var img_index = image_grid_parse_html_img_id(img.id);\n  project_file_load_on_fail(img_index);\n  image_grid_add_img_if_possible(img);\n}\n\nfunction image_grid_add_img_if_possible(img) {\n  var img_index = image_grid_parse_html_img_id(img.id);\n\n  var p = document.getElementById('image_grid_content_img');\n  var img_bottom_right_corner = parseInt(img.offsetTop) + parseInt(img.height);\n  if ( p.clientHeight < img_bottom_right_corner ) {\n    // stop as addition of this image caused overflow of parent container\n    var img_container = document.getElementById('image_grid_content_img');\n    img_container.removeChild(img);\n\n    if ( _via_settings.ui.image_grid.show_region_shape ) {\n      image_grid_page_show_all_regions();\n    }\n    _via_image_grid_load_ongoing = false;\n\n    var index = _via_image_grid_page_img_index_list.indexOf(img_index);\n    _via_image_grid_page_last_index = index;\n\n    // setup prev, next navigation\n    var info = document.getElementById('image_grid_nav');\n    var html = [];\n    var first_index = _via_image_grid_page_first_index;\n    var last_index  = _via_image_grid_page_last_index - 1;\n    html.push('<span>Showing&nbsp;' + (first_index + 1) +\n              ' to ' + (last_index + 1) + '&nbsp;:</span>');\n    if ( _via_image_grid_stack_prev_page.length ) {\n      html.push('<span class=\"text_button\" onclick=\"image_grid_page_prev()\">Prev</span>');\n    } else {\n      html.push('<span>Prev</span>');\n    }\n    html.push('<span class=\"text_button\" onclick=\"image_grid_page_next()\">Next</span');\n    info.innerHTML = html.join('');\n  } else {\n    // process this image and trigger addition of next image in sequence\n    var img_fn_list_index = _via_image_grid_page_img_index_list.indexOf(img_index);\n    var next_img_fn_list_index = img_fn_list_index + 1;\n\n    _via_image_grid_visible_img_index_list.push( img_index );\n    var is_selected = ( _via_image_grid_selected_img_index_list.indexOf(img_index) !== -1 );\n    if ( ! is_selected ) {\n      image_grid_update_img_select(img_index, 'unselect');\n    }\n\n    if ( next_img_fn_list_index !==  _via_image_grid_page_img_index_list.length ) {\n      if ( _via_image_grid_load_ongoing ) {\n        image_grid_content_append_img( img_fn_list_index + 1 );\n      } else {\n        // image grid load operation was cancelled\n        _via_image_grid_page_last_index = _via_image_grid_page_first_index; // load this page again\n\n        var info = document.getElementById('image_grid_nav');\n        var html = [];\n        html.push('<span>Cancelled&nbsp;:</span>');\n        if ( _via_image_grid_stack_prev_page.length ) {\n          html.push('<span class=\"text_button\" onclick=\"image_grid_page_prev()\">Prev</span>');\n        } else {\n          html.push('<span>Prev</span>');\n        }\n        html.push('<span class=\"text_button\" onclick=\"image_grid_page_next()\">Next</span');\n        info.innerHTML = html.join('');\n      }\n    } else {\n      // last page\n      var index = _via_image_grid_page_img_index_list.indexOf(img_index);\n      _via_image_grid_page_last_index = index;\n\n      if ( _via_settings.ui.image_grid.show_region_shape ) {\n        image_grid_page_show_all_regions();\n      }\n      _via_image_grid_load_ongoing = false;\n\n      // setup prev, next navigation\n      var info = document.getElementById('image_grid_nav');\n      var html = [];\n      var first_index = _via_image_grid_page_first_index;\n      var last_index  = _via_image_grid_page_last_index;\n      html.push('<span>Showing&nbsp;' + (first_index + 1) +\n                ' to ' + (last_index + 1) + ' (end)&nbsp;</span>');\n      if ( _via_image_grid_stack_prev_page.length ) {\n        html.push('<span class=\"text_button\" onclick=\"image_grid_page_prev()\">Prev</span>');\n      } else {\n        html.push('<span>Prev</span>');\n      }\n      html.push('<span>Next</span');\n\n      info.innerHTML = html.join('');\n    }\n  }\n}\n\nfunction image_grid_onchange_show_image_policy(p) {\n  _via_settings.ui.image_grid.show_image_policy = p.options[p.selectedIndex].value;\n  image_grid_set_content(_via_image_grid_img_index_list);\n}\n\nfunction image_grid_page_show_all_regions() {\n  var all_promises = [];\n  if ( _via_settings.ui.image_grid.show_region_shape ) {\n    var p = document.getElementById('image_grid_content_img');\n    var n = p.childNodes.length;\n    var i;\n    for ( i = 0; i < n; ++i ) {\n      // draw region shape into global canvas for image grid\n      var img_index = image_grid_parse_html_img_id( p.childNodes[i].id );\n      var img_param = []; // [width, height, originalWidth, originalHeight, x, y]\n      img_param.push( parseInt(p.childNodes[i].width) );\n      img_param.push( parseInt(p.childNodes[i].height) );\n      img_param.push( parseInt(p.childNodes[i].naturalWidth) );\n      img_param.push( parseInt(p.childNodes[i].naturalHeight) );\n      img_param.push( parseInt(p.childNodes[i].offsetLeft) + parseInt(p.childNodes[i].clientLeft) );\n      img_param.push( parseInt(p.childNodes[i].offsetTop) + parseInt(p.childNodes[i].clientTop) );\n      var promise = image_grid_show_region_shape( img_index, img_param );\n      all_promises.push( promise );\n    }\n    // @todo: ensure that all promises are fulfilled\n  }\n}\n\nfunction image_grid_is_region_in_current_group(r) {\n  var i, n;\n  n = _via_image_grid_group_var.length;\n  if ( n === 0 ) {\n    return true;\n  }\n\n  for ( i = 0; i < n; ++i ) {\n    if ( _via_image_grid_group_var[i].type === 'region' ) {\n      var group_value = _via_image_grid_group_var[i].values[ _via_image_grid_group_var[i].current_value_index ];\n      if ( r[_via_image_grid_group_var[i].name] != group_value ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nfunction image_grid_show_region_shape(img_index, img_param) {\n  return new Promise( function(ok_callback, err_callback) {\n    var i;\n    var img_id = _via_image_id_list[img_index];\n    var html_img_id = image_grid_get_html_img_id(img_index);\n    var n = _via_img_metadata[img_id].regions.length;\n    var is_in_group = false;\n    for ( i = 0; i < n; ++i ) {\n      if ( ! image_grid_is_region_in_current_group( _via_img_metadata[img_id].regions[i].region_attributes ) ) {\n        // skip drawing this region which is not in current group\n        continue;\n      }\n\n      var r = _via_img_metadata[img_id].regions[i].shape_attributes;\n      var dimg; // region coordinates in original image space\n      switch( r.name ) {\n      case VIA_REGION_SHAPE.RECT:\n        dimg = [ r['x'], r['y'], r['x']+r['width'], r['y']+r['height'] ];\n        break;\n      case VIA_REGION_SHAPE.CIRCLE:\n        dimg = [ r['cx'], r['cy'], r['cx']+r['r'], r['cy']+r['r'] ];\n        break;\n      case VIA_REGION_SHAPE.ELLIPSE:\n        dimg = [ r['cx'], r['cy'], r['cx']+r['rx'], r['cy']+r['ry'] ];\n        break;\n      case VIA_REGION_SHAPE.POLYLINE: // handled by POLYGON\n      case VIA_REGION_SHAPE.POLYGON:\n        var j;\n        dimg = [];\n        for ( j = 0; j < r['all_points_x'].length; ++j ) {\n          dimg.push( r['all_points_x'][j] );\n          dimg.push( r['all_points_y'][j] );\n        }\n        break;\n      case VIA_REGION_SHAPE.POINT:\n        dimg = [ r['cx'], r['cy'] ];\n        break;\n      }\n      var scale_factor = img_param[1] / img_param[3]; // new_height / original height\n      var offset_x     = img_param[4];\n      var offset_y     = img_param[5];\n      var r2 = new _via_region( r.name, i, dimg, scale_factor, offset_x, offset_y);\n      var r2_svg = r2.get_svg_element();\n      r2_svg.setAttribute('id', image_grid_get_html_region_id(img_index, i));\n      r2_svg.setAttribute('class', html_img_id);\n      r2_svg.setAttribute('fill',         _via_settings.ui.image_grid.rshape_fill);\n      //r2_svg.setAttribute('fill-opacity', _via_settings.ui.image_grid.rshape_fill_opacity);\n      r2_svg.setAttribute('stroke',       _via_settings.ui.image_grid.rshape_stroke);\n      r2_svg.setAttribute('stroke-width', _via_settings.ui.image_grid.rshape_stroke_width);\n\n      document.getElementById('image_grid_content_rshape').appendChild(r2_svg);\n    }\n  });\n}\n\nfunction image_grid_image_size_increase() {\n  var new_img_height = _via_settings.ui.image_grid.img_height + VIA_IMAGE_GRID_IMG_HEIGHT_CHANGE;\n  _via_settings.ui.image_grid.img_height = new_img_height;\n\n  _via_image_grid_page_last_index = null;\n  image_grid_update();\n}\n\nfunction image_grid_image_size_decrease() {\n  var new_img_height = _via_settings.ui.image_grid.img_height - VIA_IMAGE_GRID_IMG_HEIGHT_CHANGE;\n  if ( new_img_height > 1 ) {\n    _via_settings.ui.image_grid.img_height = new_img_height;\n    _via_image_grid_page_last_index = null;\n    image_grid_update();\n  }\n}\n\nfunction image_grid_image_size_reset() {\n  var new_img_height = _via_settings.ui.image_grid.img_height;\n  if ( new_img_height > 1 ) {\n    _via_settings.ui.image_grid.img_height = new_img_height;\n    _via_image_grid_page_last_index = null;\n    image_grid_update();\n  }\n}\n\nfunction image_grid_mousedown_handler(e) {\n  e.preventDefault();\n  _via_image_grid_mousedown_img_index = image_grid_parse_html_img_id(e.target.id);\n}\n\nfunction image_grid_mouseup_handler(e) {\n  e.preventDefault();\n  var last_mouseup_img_index = _via_image_grid_mouseup_img_index;\n  _via_image_grid_mouseup_img_index = image_grid_parse_html_img_id(e.target.id);\n  if ( isNaN(_via_image_grid_mousedown_img_index) ||\n       isNaN(_via_image_grid_mouseup_img_index)) {\n    last_mouseup_img_index = _via_image_grid_img_index_list[0];\n    image_grid_group_select_none();\n    return;\n  }\n\n  var mousedown_img_arr_index = _via_image_grid_img_index_list.indexOf(_via_image_grid_mousedown_img_index);\n  var mouseup_img_arr_index = _via_image_grid_img_index_list.indexOf(_via_image_grid_mouseup_img_index);\n\n  var start = -1;\n  var end   = -1;\n  var operation = 'select'; // {'select', 'unselect', 'toggle'}\n  if ( mousedown_img_arr_index === mouseup_img_arr_index ) {\n    if ( e.shiftKey ) {\n      // select all elements until this element\n      start = _via_image_grid_img_index_list.indexOf(last_mouseup_img_index) + 1;\n      end   = mouseup_img_arr_index + 1;\n    } else {\n      // toggle selection of single image\n      start = mousedown_img_arr_index;\n      end   = start + 1;\n      operation = 'toggle';\n    }\n  } else {\n    if ( mousedown_img_arr_index < mouseup_img_arr_index ) {\n      start = mousedown_img_arr_index;\n      end   = mouseup_img_arr_index + 1;\n    } else {\n      start = mouseup_img_arr_index + 1;\n      end   = mousedown_img_arr_index;\n    }\n    operation = 'toggle';\n  }\n\n  if ( start > end ) {\n    return;\n  }\n\n  var i, img_index;\n  for ( i = start; i < end; ++i ) {\n    img_index = _via_image_grid_img_index_list[i];\n    image_grid_update_img_select(img_index, operation);\n  }\n  image_grid_update_sel_count_html();\n  annotation_editor_update_content();\n}\n\nfunction image_grid_update_sel_count_html() {\n  document.getElementById('image_grid_group_by_sel_img_count').innerHTML = _via_image_grid_selected_img_index_list.length;\n}\n\n// state \\in {'select', 'unselect', 'toggle'}\nfunction image_grid_update_img_select(img_index, state) {\n  var html_img_id = image_grid_get_html_img_id(img_index);\n  var is_selected = ( _via_image_grid_selected_img_index_list.indexOf(img_index) !== -1 );\n  if (state === 'toggle' ) {\n    if ( is_selected ) {\n      state = 'unselect';\n    } else {\n      state = 'select';\n    }\n  }\n\n  switch(state) {\n  case 'select':\n    if ( ! is_selected ) {\n      _via_image_grid_selected_img_index_list.push(img_index);\n    }\n    if ( _via_image_grid_visible_img_index_list.indexOf(img_index) !== -1 ) {\n      document.getElementById(html_img_id).classList.remove('not_sel');\n    }\n    break;\n  case 'unselect':\n    if ( is_selected ) {\n      var arr_index = _via_image_grid_selected_img_index_list.indexOf(img_index);\n      _via_image_grid_selected_img_index_list.splice(arr_index, 1);\n    }\n    if ( _via_image_grid_visible_img_index_list.indexOf(img_index) !== -1 ) {\n      document.getElementById(html_img_id).classList.add('not_sel');\n    }\n    break;\n  }\n}\n\nfunction image_grid_group_select_all() {\n  image_grid_group_set_all_selection_state('select');\n  image_grid_update_sel_count_html();\n  annotation_editor_update_content();\n  show_message('Selected all images in the current group');\n}\n\nfunction image_grid_group_select_none() {\n  image_grid_group_set_all_selection_state('unselect');\n  image_grid_update_sel_count_html();\n  annotation_editor_update_content();\n  show_message('Removed selection of all images in the current group');\n}\n\nfunction image_grid_group_set_all_selection_state(state) {\n  var i, img_index;\n  for ( i = 0; i < _via_image_grid_img_index_list.length; ++i ) {\n    img_index = _via_image_grid_img_index_list[i];\n    image_grid_update_img_select(img_index, state);\n  }\n}\n\nfunction image_grid_group_toggle_select_all() {\n  if ( _via_image_grid_selected_img_index_list.length === _via_image_grid_img_index_list.length ) {\n    image_grid_group_select_none();\n  } else {\n    image_grid_group_select_all();\n  }\n}\n\nfunction image_grid_parse_html_img_id(html_img_id) {\n  var img_index = html_img_id.substr(2);\n  return parseInt(img_index);\n}\n\nfunction image_grid_get_html_img_id(img_index) {\n  return 'im' + img_index;\n}\n\nfunction image_grid_parse_html_region_id(html_region_id) {\n  var chunks = html_region_id.split('_');\n  if ( chunks.length === 2 ) {\n    var img_index = parseInt(chunks[0].substr(2));\n    var region_id = parseInt(chunks[1].substr(2));\n    return {'img_index':img_index, 'region_id':region_id};\n  } else {\n    console.log('image_grid_parse_html_region_id(): invalid html_region_id');\n    return {};\n  }\n}\n\nfunction image_grid_get_html_region_id(img_index, region_id) {\n  return image_grid_get_html_img_id(img_index) + '_rs' + region_id;\n}\n\nfunction image_grid_dblclick_handler(e) {\n  _via_image_index = image_grid_parse_html_img_id(e.target.id);\n  show_single_image_view();\n}\n\nfunction image_grid_toolbar_update_group_by_select() {\n  var p = document.getElementById('image_grid_toolbar_group_by_select');\n  p.innerHTML = '';\n\n  var o = document.createElement('option');\n  o.setAttribute('value', '');\n  o.setAttribute('selected', 'selected');\n  o.innerHTML = 'All Images';\n  p.appendChild(o);\n\n  // add file attributes\n  var fattr;\n  for ( fattr in _via_attributes['file'] ) {\n    var o = document.createElement('option');\n    o.setAttribute('value', image_grid_toolbar_group_by_select_get_html_id('file', fattr));\n    o.innerHTML = '[file] ' + fattr;\n    p.appendChild(o);\n  }\n\n  // add region attributes\n  var rattr;\n  for ( rattr in _via_attributes['region'] ) {\n    var o = document.createElement('option');\n    o.setAttribute('value', image_grid_toolbar_group_by_select_get_html_id('region', rattr));\n    o.innerHTML = '[region] ' + rattr;\n    p.appendChild(o);\n  }\n}\n\nfunction image_grid_toolbar_group_by_select_get_html_id(type, name) {\n  if ( type === 'file' ) {\n    return 'f_' + name;\n  }\n  if ( type === 'region' ) {\n    return 'r_' + name;\n  }\n}\n\nfunction image_grid_toolbar_group_by_select_parse_html_id(id) {\n  if ( id.startsWith('f_') ) {\n    return { 'attr_type':'file', 'attr_name':id.substr(2) };\n  }\n  if ( id.startsWith('r_') ) {\n    return { 'attr_type':'region', 'attr_name':id.substr(2) };\n  }\n}\n\nfunction image_grid_toolbar_onchange_group_by_select(p) {\n  if ( p.options[p.selectedIndex].value === '' ) {\n    image_grid_show_all_project_images();\n    return;\n  }\n\n  var v = image_grid_toolbar_group_by_select_parse_html_id( p.options[p.selectedIndex].value );\n  var attr_type = v.attr_type;\n  var attr_name = v.attr_name;\n  image_grid_group_by(attr_type, attr_name);\n\n  image_grid_group_by_select_set_disabled(attr_type, attr_name, true);\n  p.blur(); // to avoid adding new groups using keyboard keys as dropdown is still in focus\n}\n\nfunction image_grid_remove_html_group_panel(d) {\n  var p = document.getElementById('group_toolbar_' + d.group_index);\n  document.getElementById('image_grid_group_panel').removeChild(p);\n}\n\nfunction image_grid_add_html_group_panel(d) {\n  var p = document.createElement('div');\n  p.classList.add('image_grid_group_toolbar');\n  p.setAttribute('id', 'group_toolbar_' + d.group_index);\n\n  var del = document.createElement('span');\n  del.classList.add('text_button');\n  del.setAttribute('onclick', 'image_grid_remove_group_by(this)');\n  del.innerHTML = '&times;';\n  p.appendChild(del);\n\n  var prev = document.createElement('button');\n  prev.innerHTML = '<';\n  prev.setAttribute('value', d.group_index);\n  prev.setAttribute('onclick', 'image_grid_group_prev(this)');\n  p.appendChild(prev);\n\n  var sel = document.createElement('select');\n  sel.setAttribute('id', image_grid_group_select_get_html_id(d.group_index));\n  sel.setAttribute('onchange', 'image_grid_group_value_onchange(this)');\n  var i, value;\n  var n = d.values.length;\n  var current_value = d.values[ d.current_value_index ];\n  for ( i = 0; i < n; ++i ) {\n    value = d.values[i];\n    var o = document.createElement('option');\n    o.setAttribute('value', value);\n    o.innerHTML = (i+1) + '/' + n + ': ' + d.name + ' = ' + value;\n    if ( value === current_value ) {\n      o.setAttribute('selected', 'selected');\n    }\n\n    sel.appendChild(o);\n  }\n  p.appendChild(sel);\n\n  var next = document.createElement('button');\n  next.innerHTML = '>';\n  next.setAttribute('value', d.group_index);\n  next.setAttribute('onclick', 'image_grid_group_next(this)');\n  p.appendChild(next);\n\n  document.getElementById('image_grid_group_panel').appendChild(p);\n}\n\nfunction image_grid_group_panel_set_selected_value(group_index) {\n  var sel = document.getElementById(image_grid_group_select_get_html_id(group_index));\n  sel.selectedIndex = _via_image_grid_group_var[group_index].current_value_index;\n}\n\nfunction image_grid_group_panel_set_options(group_index) {\n  var sel = document.getElementById(image_grid_group_select_get_html_id(group_index));\n  sel.innerHTML = '';\n\n  var i, value;\n  var n = _via_image_grid_group_var[group_index].values.length;\n  var name = _via_image_grid_group_var[group_index].name;\n  var current_value = _via_image_grid_group_var[group_index].values[ _via_image_grid_group_var[group_index].current_value_index ]\n  for ( i = 0; i < n; ++i ) {\n    value = _via_image_grid_group_var[group_index].values[i];\n    var o = document.createElement('option');\n    o.setAttribute('value', value);\n    o.innerHTML = (i+1) + '/' + n + ': ' + name + ' = ' + value;\n    if ( value === current_value ) {\n      o.setAttribute('selected', 'selected');\n    }\n    sel.appendChild(o);\n  }\n}\n\nfunction image_grid_group_select_get_html_id(group_index) {\n  return 'gi_' + group_index;\n}\n\nfunction image_grid_group_select_parse_html_id(id) {\n  return parseInt(id.substr(3));\n}\n\nfunction image_grid_group_by_select_set_disabled(type, name, is_disabled) {\n  var p = document.getElementById('image_grid_toolbar_group_by_select');\n  var sel_option_value = image_grid_toolbar_group_by_select_get_html_id(type, name);\n\n  var n = p.options.length;\n  var option_value;\n  var i;\n  for ( i = 0; i < n; ++i ) {\n    if ( sel_option_value === p.options[i].value ) {\n      if ( is_disabled ) {\n        p.options[i].setAttribute('disabled', 'disabled');\n      } else {\n        p.options[i].removeAttribute('disabled');\n      }\n      break;\n    }\n  }\n}\n\nfunction image_grid_remove_group_by(p) {\n  var prefix = 'group_toolbar_';\n  var group_index = parseInt( p.parentNode.id.substr( prefix.length ) );\n\n  if ( group_index === 0 ) {\n    image_grid_show_all_project_images();\n  } else {\n    // merge all groups that are child of group_index\n    image_grid_group_by_merge(_via_image_grid_group, 0, group_index);\n\n    var n = _via_image_grid_group_var.length;\n    var p = document.getElementById('image_grid_group_panel');\n    var group_panel_id;\n    var i;\n    for ( i = group_index; i < n; ++i ) {\n      image_grid_remove_html_group_panel( _via_image_grid_group_var[i] );\n      image_grid_group_by_select_set_disabled( _via_image_grid_group_var[i].type,\n                                               _via_image_grid_group_var[i].name,\n                                               false);\n    }\n    _via_image_grid_group_var.splice(group_index);\n\n    image_grid_set_content_to_current_group();\n  }\n}\n\nfunction image_grid_group_by(type, name) {\n  if ( Object.keys(_via_image_grid_group).length === 0 ) {\n    // first group\n    var img_index_array = [];\n    var n = _via_img_fn_list_img_index_list.length;\n    var i;\n    for ( i = 0; i < n; ++i ) {\n      img_index_array.push( _via_img_fn_list_img_index_list[i] );\n    }\n\n    _via_image_grid_group = image_grid_split_array_to_group(img_index_array, type, name);\n    var new_group_values = Object.keys(_via_image_grid_group);\n    _via_image_grid_group_var = [];\n    _via_image_grid_group_var.push( { 'type':type, 'name':name, 'current_value_index':0, 'values':new_group_values, 'group_index':0 } );\n\n    image_grid_add_html_group_panel(_via_image_grid_group_var[0]);\n  } else {\n    image_grid_group_split_all_arrays( _via_image_grid_group, type, name );\n\n    var i, n, value;\n    var current_group_value = _via_image_grid_group;\n    n = _via_image_grid_group_var.length;\n\n    for ( i = 0; i < n; ++i ) {\n      value = _via_image_grid_group_var[i].values[ _via_image_grid_group_var[i].current_value_index ];\n      current_group_value = current_group_value[ value ];\n    }\n    var new_group_values = Object.keys(current_group_value);\n    var group_var_index = _via_image_grid_group_var.length;\n    _via_image_grid_group_var.push( { 'type':type, 'name':name, 'current_value_index':0, 'values':new_group_values, 'group_index':group_var_index } );\n    image_grid_add_html_group_panel( _via_image_grid_group_var[group_var_index] );\n  }\n\n  image_grid_set_content_to_current_group();\n}\n\nfunction image_grid_group_by_merge(group, current_level, target_level) {\n  var child_value;\n  var group_data = [];\n  if ( current_level === target_level ) {\n    return image_grid_group_by_collapse(group);\n  } else {\n    for ( child_value in group ) {\n      group[child_value] = image_grid_group_by_merge(group[child_value], current_level + 1, target_level);\n    }\n  }\n}\n\nfunction image_grid_group_by_collapse(group) {\n  var child_value;\n  var child_collapsed_value;\n  var group_data = [];\n  for ( child_value in group ) {\n    if ( Array.isArray(group[child_value]) ) {\n      group_data = group_data.concat(group[child_value]);\n    } else {\n      group_data = group_data.concat(image_grid_group_by_collapse(group[child_value]));\n    }\n  }\n  return group_data;\n}\n\n// recursively collapse all arrays to list\nfunction image_grid_group_split_all_arrays(group, type, name) {\n  if ( Array.isArray(group) ) {\n    return image_grid_split_array_to_group(group, type, name);\n  } else {\n    var group_value;\n    for ( group_value in group ) {\n      if ( Array.isArray( group[group_value] ) ) {\n        group[group_value] = image_grid_split_array_to_group(group[group_value], type, name);\n      } else {\n        image_grid_group_split_all_arrays(group[group_value], type, name);\n      }\n    }\n  }\n}\n\nfunction image_grid_split_array_to_group(img_index_array, attr_type, attr_name) {\n  var grp = {};\n  var img_index, img_id, i;\n  var n = img_index_array.length;\n  var attr_value;\n\n  switch(attr_type) {\n  case 'file':\n    for ( i = 0; i < n; ++i ) {\n      img_index = img_index_array[i];\n      img_id = _via_image_id_list[img_index];\n      if ( _via_img_metadata[img_id].file_attributes.hasOwnProperty(attr_name) ) {\n        attr_value = _via_img_metadata[img_id].file_attributes[attr_name];\n\n        if ( ! grp.hasOwnProperty(attr_value) ) {\n          grp[attr_value] = [];\n        }\n        grp[attr_value].push(img_index);\n      }\n    }\n    break;\n  case 'region':\n    var j;\n    var region_count;\n    for ( i = 0; i < n; ++i ) {\n      img_index    = img_index_array[i];\n      img_id       = _via_image_id_list[img_index];\n      region_count = _via_img_metadata[img_id].regions.length;\n      for ( j = 0; j < region_count; ++j ) {\n        if ( _via_img_metadata[img_id].regions[j].region_attributes.hasOwnProperty(attr_name) ) {\n          attr_value = _via_img_metadata[img_id].regions[j].region_attributes[attr_name];\n\n          if ( ! grp.hasOwnProperty(attr_value) ) {\n            grp[attr_value] = [];\n          }\n          if ( grp[attr_value].includes(img_index) ) {\n            continue;\n          } else {\n            grp[attr_value].push(img_index);\n          }\n        }\n      }\n    }\n    break;\n  }\n  return grp;\n}\n\nfunction image_grid_group_next(p) {\n  var group_index = parseInt( p.value );\n  var group_value_list = _via_image_grid_group_var[group_index].values;\n  var n = group_value_list.length;\n  var current_index = _via_image_grid_group_var[group_index].current_value_index;\n  var next_index = current_index + 1;\n  if ( next_index >= n ) {\n    if ( group_index === 0 ) {\n      next_index = next_index - n;\n      image_grid_jump_to_group(group_index, next_index);\n    } else {\n      // next of parent group\n      var parent_group_index = group_index - 1;\n      var parent_current_val_index = _via_image_grid_group_var[parent_group_index].current_value_index;\n      var parent_next_val_index = parent_current_val_index + 1;\n      while ( parent_group_index !== 0 ) {\n        if ( parent_next_val_index >= _via_image_grid_group_var[parent_group_index].values.length ) {\n          parent_group_index = group_index - 1;\n          parent_current_val_index = _via_image_grid_group_var[parent_group_index].current_value_index;\n          parent_next_val_index = parent_current_val_index + 1;\n        } else {\n          break;\n        }\n      }\n\n      if ( parent_next_val_index >= _via_image_grid_group_var[parent_group_index].values.length ) {\n        parent_next_val_index = 0;\n      }\n      image_grid_jump_to_group(parent_group_index, parent_next_val_index);\n    }\n  } else {\n    image_grid_jump_to_group(group_index, next_index);\n  }\n  image_grid_set_content_to_current_group();\n}\n\nfunction image_grid_group_prev(p) {\n  var group_index = parseInt( p.value );\n  var group_value_list = _via_image_grid_group_var[group_index].values;\n  var n = group_value_list.length;\n  var current_index = _via_image_grid_group_var[group_index].current_value_index;\n  var prev_index = current_index - 1;\n  if ( prev_index < 0 ) {\n    if ( group_index === 0 ) {\n      prev_index = n + prev_index;\n      image_grid_jump_to_group(group_index, prev_index);\n    } else {\n      // prev of parent group\n      var parent_group_index = group_index - 1;\n      var parent_current_val_index = _via_image_grid_group_var[parent_group_index].current_value_index;\n      var parent_prev_val_index = parent_current_val_index - 1;\n      while ( parent_group_index !== 0 ) {\n        if ( parent_prev_val_index < 0 ) {\n          parent_group_index = group_index - 1;\n          parent_current_val_index = _via_image_grid_group_var[parent_group_index].current_value_index;\n          parent_prev_val_index = parent_current_val_index - 1;\n        } else {\n          break;\n        }\n      }\n\n      if ( parent_prev_val_index < 0 ) {\n        parent_prev_val_index = _via_image_grid_group_var[parent_group_index].values.length - 1;\n      }\n      image_grid_jump_to_group(parent_group_index, parent_prev_val_index);\n    }\n  } else {\n    image_grid_jump_to_group(group_index, prev_index);\n  }\n  image_grid_set_content_to_current_group();\n}\n\n\nfunction image_grid_group_value_onchange(p) {\n  var group_index = image_grid_group_select_parse_html_id(p.id);\n  image_grid_jump_to_group(group_index, p.selectedIndex);\n  image_grid_set_content_to_current_group();\n}\n\nfunction image_grid_jump_to_group(group_index, value_index) {\n  var n = _via_image_grid_group_var[group_index].values.length;\n  if ( value_index >=n || value_index < 0 ) {\n    return;\n  }\n\n  _via_image_grid_group_var[group_index].current_value_index = value_index;\n  image_grid_group_panel_set_selected_value( group_index );\n\n  // reset the value of lower groups\n  var i, value;\n  if ( group_index + 1 < _via_image_grid_group_var.length ) {\n    var e = _via_image_grid_group;\n    for ( i = 0; i <= group_index; ++i ) {\n      value = _via_image_grid_group_var[i].values[ _via_image_grid_group_var[i].current_value_index ];\n      e = e[ value ];\n    }\n\n    for ( i = group_index + 1; i < _via_image_grid_group_var.length; ++i ) {\n      _via_image_grid_group_var[i].values = Object.keys(e);\n      if ( _via_image_grid_group_var[i].values.length === 0 ) {\n        _via_image_grid_group_var[i].current_value_index = -1;\n        _via_image_grid_group_var.splice(i);\n        image_grid_group_panel_set_options(i);\n        break;\n      } else {\n        _via_image_grid_group_var[i].current_value_index = 0;\n        value = _via_image_grid_group_var[i].values[0]\n        e = e[value];\n        image_grid_group_panel_set_options(i);\n      }\n    }\n  }\n}\n\nfunction image_grid_set_content_to_current_group() {\n  var n = _via_image_grid_group_var.length;\n\n  if ( n === 0 ) {\n    image_grid_show_all_project_images();\n  } else {\n    var group_img_index_list = [];\n    var img_index_list = _via_image_grid_group;\n    var i, n, value, current_value_index;\n    for ( i = 0; i < n; ++i ) {\n      value = _via_image_grid_group_var[i].values[ _via_image_grid_group_var[i].current_value_index ];\n      img_index_list = img_index_list[ value ];\n    }\n\n    if ( Array.isArray(img_index_list) ) {\n      image_grid_set_content(img_index_list);\n    } else {\n      console.log('Error: image_grid_set_content_to_current_group(): expected array while got ' + typeof(img_index_list));\n    }\n  }\n}\n\nfunction image_grid_page_next() {\n  _via_image_grid_stack_prev_page.push(_via_image_grid_page_first_index);\n  _via_image_grid_page_first_index = _via_image_grid_page_last_index;\n\n  image_grid_clear_content();\n  _via_image_grid_load_ongoing = true;\n  image_grid_page_nav_show_cancel();\n  image_grid_content_append_img( _via_image_grid_page_first_index );\n}\n\nfunction image_grid_page_prev() {\n  _via_image_grid_page_first_index = _via_image_grid_stack_prev_page.pop();\n  _via_image_grid_page_last_index = -1;\n\n  image_grid_clear_content();\n  _via_image_grid_load_ongoing = true;\n  image_grid_page_nav_show_cancel();\n  image_grid_content_append_img( _via_image_grid_page_first_index );\n}\n\nfunction image_grid_page_nav_show_cancel() {\n  var info = document.getElementById('image_grid_nav');\n  var html = [];\n  html.push('<span>Loading images ... </span>');\n  html.push('<span class=\"text_button\" onclick=\"image_grid_cancel_load_ongoing()\">Cancel</span>');\n  info.innerHTML = html.join('');\n}\n\nfunction image_grid_cancel_load_ongoing() {\n  _via_image_grid_load_ongoing = false;\n}\n\n\n// everything to do with image zooming\nfunction image_zoom_init() {\n\n}\n\n//\n// hooks for sub-modules\n// implemented by sub-modules\n//\n//function _via_hook_next_image() {}\n//function _via_hook_prev_image() {}\n\n\n////////////////////////////////////////////////////////////////////////////////\n//\n// Code borrowed from via2 branch\n// - in future, the <canvas> based reigon shape drawing will be replaced by <svg>\n//   because svg allows independent manipulation of individual regions without\n//   requiring to clear the canvas every time some region is updated.\n//\n////////////////////////////////////////////////////////////////////////////////\n\n////////////////////////////////////////////////////////////////////////////////\n//\n// @file        _via_region.js\n// @description Implementation of region shapes like rectangle, circle, etc.\n// @author      Abhishek Dutta <adutta@robots.ox.ac.uk>\n// @date        17 June 2017\n//\n////////////////////////////////////////////////////////////////////////////////\n\nfunction _via_region( shape, id, data_img_space, view_scale_factor, view_offset_x, view_offset_y) {\n  // Note the following terminology:\n  //   view space  :\n  //     - corresponds to the x-y plane on which the scaled version of original image is shown to the user\n  //     - all the region query operations like is_inside(), is_on_edge(), etc are performed in view space\n  //     - all svg draw operations like get_svg() are also in view space\n  //\n  //   image space :\n  //     - corresponds to the x-y plane which corresponds to the spatial space of the original image\n  //     - region save, export, git push operations are performed in image space\n  //     - to avoid any rounding issues (caused by floating scale factor),\n  //        * user drawn regions in view space is first converted to image space\n  //        * this region in image space is now used to initialize region in view space\n  //\n  //   The two spaces are related by _via_model.now.tform.scale which is computed by the method\n  //     _via_ctrl.compute_view_panel_to_nowfile_tform()\n  //   and applied as follows:\n  //     x coordinate in image space = scale_factor * x coordinate in view space\n  //\n  // shape : {rect, circle, ellipse, line, polyline, polygon, point}\n  // id    : unique region-id\n  // d[]   : (in view space) data whose meaning depend on region shape as follows:\n  //        rect     : d[x1,y1,x2,y2] or d[corner1_x, corner1_y, corner2_x, corner2_y]\n  //        circle   : d[x1,y1,x2,y2] or d[center_x, center_y, circumference_x, circumference_y]\n  //        ellipse  : d[x1,y1,x2,y2,transform]\n  //        line     : d[x1,y1,x2,y2]\n  //        polyline : d[x1,y1,...,xn,yn]\n  //        polygon  : d[x1,y1,...,xn,yn]\n  //        point    : d[cx,cy]\n  // scale_factor : for conversion from view space to image space\n  //\n  // Note: no svg data are stored with prefix \"_\". For example: _scale_factor, _x2\n  this.shape  = shape;\n  this.id     = id;\n  this.scale_factor     = view_scale_factor;\n  this.offset_x         = view_offset_x;\n  this.offset_y         = view_offset_y;\n  this.recompute_svg    = false;\n  this.attributes  = {};\n\n  var n = data_img_space.length;\n  var i;\n  this.dview  = new Array(n);\n  this.dimg   = new Array(n);\n\n  if ( n !== 0 ) {\n    // IMPORTANT:\n    // to avoid any rounding issues (caused by floating scale factor), we stick to\n    // the principal that image space coordinates are the ground truth for every region.\n    // Hence, we proceed as:\n    //   * user drawn regions in view space is first converted to image space\n    //   * this region in image space is now used to initialize region in view space\n    for ( i = 0; i < n; i++ ) {\n      this.dimg[i]  = data_img_space[i];\n\n      var offset = this.offset_x;\n      if ( i % 2 !== 0 ) {\n        // y coordinate\n        offset = this.offset_y;\n      }\n      this.dview[i] = Math.round( this.dimg[i] * this.scale_factor ) + offset;\n    }\n  }\n\n  // set svg attributes for each shape\n  switch( this.shape ) {\n  case \"rect\":\n    _via_region_rect.call( this );\n    this.svg_attributes = ['x', 'y', 'width', 'height'];\n    break;\n  case \"circle\":\n    _via_region_circle.call( this );\n    this.svg_attributes = ['cx', 'cy', 'r'];\n    break;\n  case \"ellipse\":\n    _via_region_ellipse.call( this );\n    this.svg_attributes = ['cx', 'cy', 'rx', 'ry','transform'];\n    break;\n  case \"line\":\n    _via_region_line.call( this );\n    this.svg_attributes = ['x1', 'y1', 'x2', 'y2'];\n    break;\n  case \"polyline\":\n    _via_region_polyline.call( this );\n    this.svg_attributes = ['points'];\n    break;\n  case \"polygon\":\n    _via_region_polygon.call( this );\n    this.svg_attributes = ['points'];\n    break;\n  case \"point\":\n    _via_region_point.call( this );\n    // point is a special circle with minimal radius required for visualization\n    this.shape = 'circle';\n    this.svg_attributes = ['cx', 'cy', 'r'];\n    break;\n  }\n\n  this.initialize();\n}\n\n\n_via_region.prototype.prepare_svg_element = function() {\n  var _VIA_SVG_NS = \"http://www.w3.org/2000/svg\";\n  this.svg_element = document.createElementNS(_VIA_SVG_NS, this.shape);\n  this.svg_string  = '<' + this.shape;\n  this.svg_element.setAttributeNS(null, 'id', this.id);\n\n  var n = this.svg_attributes.length;\n  for ( var i = 0; i < n; i++ ) {\n    this.svg_element.setAttributeNS(null, this.svg_attributes[i], this[this.svg_attributes[i]]);\n    this.svg_string += ' ' + this.svg_attributes[i] + '=\"' + this[this.svg_attributes[i]] + '\"';\n  }\n  this.svg_string  += '/>';\n}\n\n_via_region.prototype.get_svg_element = function() {\n  if ( this.recompute_svg ) {\n    this.prepare_svg_element();\n    this.recompute_svg = false;\n  }\n  return this.svg_element;\n}\n\n_via_region.prototype.get_svg_string = function() {\n  if ( this.recompute_svg ) {\n    this.prepare_svg_element();\n    this.recompute_svg = false;\n  }\n  return this.svg_string;\n}\n\n///\n/// Region shape : rectangle\n///\nfunction _via_region_rect() {\n  this.is_inside  = _via_region_rect.prototype.is_inside;\n  this.is_on_edge = _via_region_rect.prototype.is_on_edge;\n  this.move  = _via_region_rect.prototype.move;\n  this.resize  = _via_region_rect.prototype.resize;\n  this.initialize = _via_region_rect.prototype.initialize;\n  this.dist_to_nearest_edge = _via_region_rect.prototype.dist_to_nearest_edge;\n}\n\n_via_region_rect.prototype.initialize = function() {\n  // ensure that this.(x,y) corresponds to top-left corner of rectangle\n  // Note: this.(x2,y2) is defined for convenience in calculations\n  if ( this.dview[0] < this.dview[2] ) {\n    this.x  = this.dview[0];\n    this.x2 = this.dview[2];\n  } else {\n    this.x  = this.dview[2];\n    this.x2 = this.dview[0];\n  }\n  if ( this.dview[1] < this.dview[3] ) {\n    this.y  = this.dview[1];\n    this.y2 = this.dview[3];\n  } else {\n    this.y  = this.dview[3];\n    this.y2 = this.dview[1];\n  }\n  this.width  = this.x2 - this.x;\n  this.height = this.y2 - this.y;\n  this.recompute_svg = true;\n}\n\n///\n/// Region shape : circle\n///\nfunction _via_region_circle() {\n  this.is_inside  = _via_region_circle.prototype.is_inside;\n  this.is_on_edge = _via_region_circle.prototype.is_on_edge;\n  this.move       = _via_region_circle.prototype.move;\n  this.resize     = _via_region_circle.prototype.resize;\n  this.initialize = _via_region_circle.prototype.initialize;\n  this.dist_to_nearest_edge = _via_region_circle.prototype.dist_to_nearest_edge;\n}\n\n_via_region_circle.prototype.initialize = function() {\n  this.cx = this.dview[0];\n  this.cy = this.dview[1];\n  var dx = this.dview[2] - this.dview[0];\n  var dy = this.dview[3] - this.dview[1];\n  this.r  = Math.round( Math.sqrt(dx * dx + dy * dy) );\n  this.r2 = this.r * this.r;\n  this.recompute_svg = true;\n}\n\n\n///\n/// Region shape : ellipse\n///\nfunction _via_region_ellipse() {\n  this.is_inside  = _via_region_ellipse.prototype.is_inside;\n  this.is_on_edge = _via_region_ellipse.prototype.is_on_edge;\n  this.move  = _via_region_ellipse.prototype.move;\n  this.resize  = _via_region_ellipse.prototype.resize;\n  this.initialize = _via_region_ellipse.prototype.initialize;\n  this.dist_to_nearest_edge = _via_region_ellipse.prototype.dist_to_nearest_edge;\n}\n\n_via_region_ellipse.prototype.initialize = function() {\n  this.cx = this.dview[0];\n  this.cy = this.dview[1];\n  this.rx = Math.abs(this.dview[2] - this.dview[0]);\n  this.ry = Math.abs(this.dview[3] - this.dview[1]);\n\n  this.inv_rx2 = 1 / (this.rx * this.rx);\n  this.inv_ry2 = 1 / (this.ry * this.ry);\n\n  this.recompute_svg = true;\n}\n\n\n\n///\n/// Region shape : line\n///\nfunction _via_region_line() {\n  this.is_inside  = _via_region_line.prototype.is_inside;\n  this.is_on_edge = _via_region_line.prototype.is_on_edge;\n  this.move  = _via_region_line.prototype.move;\n  this.resize  = _via_region_line.prototype.resize;\n  this.initialize = _via_region_line.prototype.initialize;\n  this.dist_to_nearest_edge = _via_region_line.prototype.dist_to_nearest_edge;\n}\n\n_via_region_line.prototype.initialize = function() {\n  this.x1 = this.dview[0];\n  this.y1 = this.dview[1];\n  this.x2 = this.dview[2];\n  this.y2 = this.dview[3];\n  this.dx = this.x1 - this.x2;\n  this.dy = this.y1 - this.y2;\n  this.mconst = (this.x1 * this.y2) - (this.x2 * this.y1);\n\n  this.recompute_svg = true;\n}\n\n\n///\n/// Region shape : polyline\n///\nfunction _via_region_polyline() {\n  this.is_inside  = _via_region_polyline.prototype.is_inside;\n  this.is_on_edge = _via_region_polyline.prototype.is_on_edge;\n  this.move  = _via_region_polyline.prototype.move;\n  this.resize  = _via_region_polyline.prototype.resize;\n  this.initialize = _via_region_polyline.prototype.initialize;\n  this.dist_to_nearest_edge = _via_region_polyline.prototype.dist_to_nearest_edge;\n}\n\n_via_region_polyline.prototype.initialize = function() {\n  var n = this.dview.length;\n  var points = new Array(n/2);\n  var points_index = 0;\n  for ( var i = 0; i < n; i += 2 ) {\n    points[points_index] = ( this.dview[i] + ' ' + this.dview[i+1] );\n    points_index++;\n  }\n  this.points = points.join(',');\n  this.recompute_svg = true;\n}\n\n\n///\n/// Region shape : polygon\n///\nfunction _via_region_polygon() {\n  this.is_inside  = _via_region_polygon.prototype.is_inside;\n  this.is_on_edge = _via_region_polygon.prototype.is_on_edge;\n  this.move  = _via_region_polygon.prototype.move;\n  this.resize  = _via_region_polygon.prototype.resize;\n  this.initialize = _via_region_polygon.prototype.initialize;\n  this.dist_to_nearest_edge = _via_region_polygon.prototype.dist_to_nearest_edge;\n}\n\n_via_region_polygon.prototype.initialize = function() {\n  var n = this.dview.length;\n  var points = new Array(n/2);\n  var points_index = 0;\n  for ( var i = 0; i < n; i += 2 ) {\n    points[points_index] = ( this.dview[i] + ' ' + this.dview[i+1] );\n    points_index++;\n  }\n  this.points = points.join(',');\n  this.recompute_svg = true;\n}\n\n\n///\n/// Region shape : point\n///\nfunction _via_region_point() {\n  this.is_inside  = _via_region_point.prototype.is_inside;\n  this.is_on_edge = _via_region_point.prototype.is_on_edge;\n  this.move  = _via_region_point.prototype.move;\n  this.resize  = _via_region_point.prototype.resize\n  this.initialize  = _via_region_point.prototype.initialize;\n  this.dist_to_nearest_edge = _via_region_point.prototype.dist_to_nearest_edge;\n}\n\n_via_region_point.prototype.initialize = function() {\n  this.cx = this.dview[0];\n  this.cy = this.dview[1];\n  this.r  = 2;\n  this.r2 = this.r * this.r;\n  this.recompute_svg = true;\n}\n\n//\n// image buffering\n//\n\nfunction _via_cancel_current_image_loading() {\n  var panel = document.getElementById('project_panel_title');\n  panel.innerHTML = 'Project';\n  _via_is_loading_current_image = false;\n}\n\nfunction _via_show_img(img_index) {\n  if ( _via_is_loading_current_image ) {\n    return;\n  }\n\n  var img_id = _via_image_id_list[img_index];\n\n  if ( ! _via_img_metadata.hasOwnProperty(img_id) ) {\n    console.log('_via_show_img(): [' + img_index + '] ' + img_id + ' does not exist!')\n    show_message('The requested image does not exist!')\n    return;\n  }\n\n  // file_resolve() is not necessary for files selected using browser's file selector\n  if ( typeof(_via_img_fileref[img_id]) === 'undefined' || ! _via_img_fileref[img_id] instanceof File ) {\n    // try preload from local file or url\n    if ( typeof(_via_img_src[img_id]) === 'undefined' || _via_img_src[img_id] === '' ) {\n      if ( is_url( _via_img_metadata[img_id].filename ) ) {\n        _via_img_src[img_id] = _via_img_metadata[img_id].filename;\n        _via_show_img(img_index);\n        return;\n      } else {\n        var search_path_list = _via_file_get_search_path_list();\n        if ( search_path_list.length === 0 ) {\n          search_path_list.push(''); // search using just the filename\n        }\n\n        _via_file_resolve(img_index, search_path_list).then( function(ok_file_index) {\n          _via_show_img(img_index);\n        }, function(err_file_index) {\n          show_page_404(img_index);\n        });\n        return;\n      }\n    }\n  }\n\n  if ( _via_buffer_img_index_list.includes(img_index) ) {\n    _via_current_image_loaded = false;\n    _via_show_img_from_buffer(img_index).then( function(ok_img_index) {\n      // trigger preload of images in buffer corresponding to img_index\n      // but, wait until all previous promises get cancelled\n      Promise.all(_via_preload_img_promise_list).then( function(values) {\n        _via_preload_img_promise_list = [];\n        var preload_promise = _via_img_buffer_start_preload( img_index, 0 )\n        _via_preload_img_promise_list.push(preload_promise);\n      });\n    }, function(err_img_index) {\n      console.log('_via_show_img_from_buffer() failed for file: ' + _via_image_filename_list[err_img_index]);\n      _via_current_image_loaded = false;\n    });\n  } else {\n    // image not in buffer, so first add this image to buffer\n    _via_is_loading_current_image = true;\n    img_loading_spinbar(img_index, true);\n    _via_img_buffer_add_image(img_index).then( function(ok_img_index) {\n      _via_is_loading_current_image = false;\n      img_loading_spinbar(img_index, false);\n      _via_show_img(img_index);\n    }, function(err_img_index) {\n      _via_is_loading_current_image = false;\n      img_loading_spinbar(img_index, false);\n      show_page_404(img_index);\n      console.log('_via_img_buffer_add_image() failed for file: ' + _via_image_filename_list[err_img_index]);\n    });\n  }\n}\n\nfunction _via_buffer_hide_current_image() {\n  img_fn_list_ith_entry_selected(_via_image_index, false);\n  _via_clear_reg_canvas(); // clear old region shapes\n  if ( _via_current_image ) {\n    _via_current_image.classList.remove('visible');\n  }\n}\n\nfunction _via_show_img_from_buffer(img_index) {\n  return new Promise( function(ok_callback, err_callback) {\n    _via_buffer_hide_current_image();\n\n    var cimg_html_id = _via_img_buffer_get_html_id(img_index);\n    _via_current_image = document.getElementById(cimg_html_id);\n    if ( ! _via_current_image ) {\n      // the said image is not present in buffer, which could be because\n      // the image got removed from the buffer\n      err_callback(img_index);\n      return;\n    }\n    _via_current_image.classList.add('visible'); // now show the new image\n\n    _via_image_index = img_index;\n    _via_image_id    = _via_image_id_list[_via_image_index];\n    _via_current_image_filename = _via_img_metadata[_via_image_id].filename;\n    _via_current_image_loaded = true;\n\n    var arr_index = _via_buffer_img_index_list.indexOf(img_index);\n    _via_buffer_img_shown_timestamp[arr_index] = Date.now(); // update shown timestamp\n\n    // update the current state of application\n    _via_click_x0 = 0; _via_click_y0 = 0;\n    _via_click_x1 = 0; _via_click_y1 = 0;\n    _via_is_user_drawing_region = false;\n    _via_is_window_resized = false;\n    _via_is_user_resizing_region = false;\n    _via_is_user_moving_region = false;\n    _via_is_user_drawing_polygon = false;\n    _via_is_region_selected = false;\n    _via_user_sel_region_id = -1;\n    _via_current_image_width = _via_current_image.naturalWidth;\n    _via_current_image_height = _via_current_image.naturalHeight;\n\n    if ( _via_current_image_width === 0 || _via_current_image_height === 0 ) {\n      // for error image icon\n      _via_current_image_width = 640;\n      _via_current_image_height = 480;\n    }\n\n    // set the size of canvas\n    // based on the current dimension of browser window\n    var de = document.documentElement;\n    var image_panel_width = de.clientWidth - leftsidebar.clientWidth - 20;\n    if ( leftsidebar.style.display === 'none' ) {\n      image_panel_width = de.clientWidth;\n    }\n    var image_panel_height = de.clientHeight - 2*ui_top_panel.offsetHeight;\n\n    _via_canvas_width = _via_current_image_width;\n    _via_canvas_height = _via_current_image_height;\n\n    if ( _via_canvas_width > image_panel_width ) {\n      // resize image to match the panel width\n      var scale_width = image_panel_width / _via_current_image.naturalWidth;\n      _via_canvas_width = image_panel_width;\n      _via_canvas_height = _via_current_image.naturalHeight * scale_width;\n    }\n    if ( _via_canvas_height > image_panel_height ) {\n      // resize further image if its height is larger than the image panel\n      var scale_height = image_panel_height / _via_canvas_height;\n      _via_canvas_height = image_panel_height;\n      _via_canvas_width = _via_canvas_width * scale_height;\n    }\n    _via_canvas_width = Math.round(_via_canvas_width);\n    _via_canvas_height = Math.round(_via_canvas_height);\n    _via_canvas_scale = _via_current_image.naturalWidth / _via_canvas_width;\n    _via_canvas_scale_without_zoom = _via_canvas_scale;\n    set_all_canvas_size(_via_canvas_width, _via_canvas_height);\n    //set_all_canvas_scale(_via_canvas_scale_without_zoom);\n\n    // reset all regions to \"not selected\" state\n    toggle_all_regions_selection(false);\n\n    // ensure that all the canvas are visible\n    set_display_area_content( VIA_DISPLAY_AREA_CONTENT_NAME.IMAGE );\n\n    // update img_fn_list\n    img_fn_list_ith_entry_selected(_via_image_index, true);\n    img_fn_list_scroll_to_current_file();\n\n    // refresh the annotations panel\n    annotation_editor_update_content();\n\n    _via_load_canvas_regions(); // image to canvas space transform\n    _via_redraw_reg_canvas();\n    _via_reg_canvas.focus();\n\n    // Preserve zoom level\n    if (_via_is_canvas_zoomed) {\n      set_zoom( _via_canvas_zoom_level_index );\n    }\n    ok_callback(img_index);\n  });\n}\n\nfunction _via_img_buffer_add_image(img_index) {\n  return new Promise( function(ok_callback, err_callback) {\n    if ( _via_buffer_img_index_list.includes(img_index) ) {\n      //console.log('_via_img_buffer_add_image(): image ' + img_index + ' already exists in buffer!')\n      ok_callback(img_index);\n      return;\n    }\n\n    var img_id = _via_image_id_list[img_index];\n    var img_filename = _via_img_metadata[img_id].filename;\n    if ( !_via_img_metadata.hasOwnProperty(img_id)) {\n      err_callback(img_index);\n      return;\n    }\n\n    // check if user has given access to local file using\n    // browser's file selector\n    if ( _via_img_fileref[img_id] instanceof File ) {\n      var tmp_file_object_url = URL.createObjectURL(_via_img_fileref[img_id]);\n      var img_id = _via_image_id_list[img_index];\n      var bimg = document.createElement('img');\n      bimg.setAttribute('id', _via_img_buffer_get_html_id(img_index));\n      bimg.setAttribute('src', tmp_file_object_url);\n      bimg.setAttribute('alt', 'Image loaded from base64 data of a local file selected by user.');\n      bimg.addEventListener('error', function() {\n        URL.revokeObjectURL(tmp_file_object_url);\n        project_file_load_on_fail(img_index);\n        err_callback(img_index);\n      });\n      bimg.addEventListener('load', function() {\n        URL.revokeObjectURL(tmp_file_object_url);\n        img_stat_set(img_index, [bimg.naturalWidth, bimg.naturalHeight]);\n        _via_img_panel.insertBefore(bimg, _via_reg_canvas);\n        project_file_load_on_success(img_index);\n        img_fn_list_ith_entry_add_css_class(img_index, 'buffered')\n        // add timestamp so that we can apply Least Recently Used (LRU)\n        // scheme to remove elements when buffer is full\n        var arr_index = _via_buffer_img_index_list.length;\n        _via_buffer_img_index_list.push(img_index);\n        _via_buffer_img_shown_timestamp[arr_index] = Date.now(); // though, not seen yet\n        ok_callback(img_index);\n      });\n      return;\n    }\n\n    if ( typeof(_via_img_src[img_id]) === 'undefined' || _via_img_src[img_id] === '' ) {\n      err_callback(img_index);\n    } else {\n      var img_id = _via_image_id_list[img_index];\n\n      var bimg = document.createElement('img');\n      bimg.setAttribute('id', _via_img_buffer_get_html_id(img_index));\n      _via_img_src[img_id] = _via_img_src[img_id].replace('#', '%23');\n      bimg.setAttribute('src', _via_img_src[img_id]);\n      if ( _via_img_src[img_id].startsWith('data:image') ) {\n        bimg.setAttribute('alt', 'Source: image data in base64 format');\n      } else {\n        bimg.setAttribute('alt', 'Source: ' + _via_img_src[img_id]);\n      }\n\n      bimg.addEventListener('abort', function() {\n        project_file_load_on_fail(img_index);\n        err_callback(img_index);\n      });\n      bimg.addEventListener('error', function() {\n        project_file_load_on_fail(img_index);\n        err_callback(img_index);\n      });\n\n      // Note: _via_current_image.{naturalWidth,naturalHeight} is only accessible after\n      // the \"load\" event. Therefore, all processing must happen inside this event handler.\n      bimg.addEventListener('load', function() {\n        img_stat_set(img_index, [bimg.naturalWidth, bimg.naturalHeight]);\n        _via_img_panel.insertBefore(bimg, _via_reg_canvas);\n\n        project_file_load_on_success(img_index);\n        img_fn_list_ith_entry_add_css_class(img_index, 'buffered')\n        // add timestamp so that we can apply Least Recently Used (LRU)\n        // scheme to remove elements when buffer is full\n        var arr_index = _via_buffer_img_index_list.length;\n        _via_buffer_img_index_list.push(img_index);\n        _via_buffer_img_shown_timestamp[arr_index] = Date.now(); // though, not seen yet\n        ok_callback(img_index);\n      }, false);\n    }\n  }, false);\n}\n\nfunction _via_img_buffer_get_html_id(img_index) {\n  return 'bim' + img_index;\n}\n\nfunction _via_img_buffer_parse_html_id(html_id) {\n  return parseInt( html_id.substr(3) );\n}\n\nfunction _via_img_buffer_start_preload(img_index, preload_index) {\n  return new Promise( function(ok_callback, err_callback) {\n    _via_buffer_preload_img_index = img_index;\n    _via_img_buffer_preload_img(_via_buffer_preload_img_index, 0).then( function(ok_img_index_list) {\n      ok_callback(ok_img_index_list);\n    });\n  });\n}\n\nfunction _via_img_buffer_preload_img(img_index, preload_index) {\n  return new Promise( function(ok_callback, err_callback) {\n    var preload_img_index = _via_img_buffer_get_preload_img_index(img_index, preload_index);\n\n    if ( _via_buffer_preload_img_index !== _via_image_index ) {\n      ok_callback([]);\n      return;\n    }\n\n    // ensure that there is sufficient buffer space left for preloading image\n    if ( _via_buffer_img_index_list.length > _via_settings.core.buffer_size ) {\n      while( _via_buffer_img_index_list.length > _via_settings.core.buffer_size ) {\n        _via_img_buffer_remove_least_useful_img();\n        if ( _via_image_index !== _via_buffer_preload_img_index ) {\n          // current image has changed therefore, we need to cancel this preload operation\n          ok_callback([]);\n          return;\n        }\n      }\n    }\n\n    _via_img_buffer_add_image(preload_img_index).then( function(ok_img_index) {\n      if ( _via_image_index !== _via_buffer_preload_img_index ) {\n        ok_callback( [ok_img_index] );\n        return;\n      }\n\n      var next_preload_index = preload_index + 1;\n      if ( next_preload_index !== VIA_IMG_PRELOAD_COUNT ) {\n        _via_img_buffer_preload_img(img_index, next_preload_index).then( function(ok_img_index_list) {\n          ok_img_index_list.push( ok_img_index )\n          ok_callback( ok_img_index_list );\n        });\n      } else {\n        ok_callback( [ok_img_index] );\n      }\n    }, function(err_img_index) {\n      // continue with preload of other images in sequence\n      var next_preload_index = preload_index + 1;\n      if ( next_preload_index !== VIA_IMG_PRELOAD_COUNT ) {\n        _via_img_buffer_preload_img(img_index, next_preload_index).then( function(ok_img_index_list) {\n          ok_callback( ok_img_index_list );\n        });\n      } else {\n        ok_callback([]);\n      }\n    });\n  });\n}\n\nfunction _via_img_buffer_get_preload_img_index(img_index, preload_index) {\n  var preload_img_index = img_index + VIA_IMG_PRELOAD_INDICES[preload_index];\n  if ( (preload_img_index < 0) || (preload_img_index >= _via_img_count) ) {\n    if ( preload_img_index < 0 ) {\n      preload_img_index = _via_img_count + preload_img_index;\n    } else {\n      preload_img_index = preload_img_index - _via_img_count;\n    }\n  }\n  return preload_img_index;\n}\n\n// the least useful image is, one with the following properties:\n// - preload list for current image will always get loaded, so there is no point in removing them from buffer\n// - all the other images in buffer were seen more recently by the image\n// - all the other images are closer (in terms of their image index) to the image currently being shown\nfunction _via_img_buffer_remove_least_useful_img() {\n  var not_in_preload_list = _via_buffer_img_not_in_preload_list();\n  var oldest_buffer_index = _via_buffer_get_oldest_in_list(not_in_preload_list);\n\n  if ( _via_buffer_img_index_list[oldest_buffer_index] !== _via_image_index ) {\n    //console.log('removing oldest_buffer index: ' + oldest_buffer_index);\n    _via_buffer_remove(oldest_buffer_index);\n  } else {\n    var furthest_buffer_index = _via_buffer_get_buffer_furthest_from_current_img();\n    _via_buffer_remove(furthest_buffer_index);\n  }\n}\n\nfunction _via_buffer_remove( buffer_index ) {\n  var img_index = _via_buffer_img_index_list[buffer_index];\n  var bimg_html_id = _via_img_buffer_get_html_id(img_index);\n  var bimg = document.getElementById(bimg_html_id);\n  if ( bimg ) {\n    _via_buffer_img_index_list.splice(buffer_index, 1);\n    _via_buffer_img_shown_timestamp.splice(buffer_index, 1);\n    _via_img_panel.removeChild(bimg);\n\n    img_fn_list_ith_entry_remove_css_class(img_index, 'buffered')\n  }\n}\n\nfunction _via_buffer_remove_all() {\n  var i, n;\n  n = _via_buffer_img_index_list.length;\n  for ( i = 0 ; i < n; ++i ) {\n    var img_index = _via_buffer_img_index_list[i];\n    var bimg_html_id = _via_img_buffer_get_html_id(img_index);\n    var bimg = document.getElementById(bimg_html_id);\n    if ( bimg ) {\n      _via_img_panel.removeChild(bimg);\n    }\n  }\n  _via_buffer_img_index_list = [];\n  _via_buffer_img_shown_timestamp = [];\n}\n\nfunction _via_buffer_get_oldest_in_list(not_in_preload_list) {\n  var i;\n  var n = not_in_preload_list.length;\n  var oldest_buffer_index = -1;\n  var oldest_buffer_timestamp = Date.now();\n\n  for ( i = 0; i < n; ++i ) {\n    var _via_buffer_index = not_in_preload_list[i];\n    if ( _via_buffer_img_shown_timestamp[_via_buffer_index] < oldest_buffer_timestamp ) {\n      oldest_buffer_timestamp = _via_buffer_img_shown_timestamp[i];\n      oldest_buffer_index = i;\n    }\n  }\n  return oldest_buffer_index;\n}\n\nfunction _via_buffer_get_buffer_furthest_from_current_img() {\n  var now_img_index = _via_image_index;\n  var i, dist1, dist2, dist;\n  var n = _via_buffer_img_index_list.length;\n  var furthest_buffer_index = 0;\n  dist1 = Math.abs( _via_buffer_img_index_list[0] - now_img_index );\n  dist2 = _via_img_count - dist1; // assuming the list is circular\n  var furthest_buffer_dist = Math.min(dist1, dist2);\n\n  for ( i = 1; i < n; ++i ) {\n    dist1 = Math.abs( _via_buffer_img_index_list[i] - now_img_index );\n    dist2 = _via_img_count - dist1; // assuming the list is circular\n    dist = Math.min(dist1, dist2);\n    // image has been seen by user at least once\n    if ( dist > furthest_buffer_dist ) {\n      furthest_buffer_dist = dist;\n      furthest_buffer_index = i;\n    }\n  }\n  return furthest_buffer_index;\n}\n\nfunction _via_buffer_img_not_in_preload_list() {\n  var preload_list = _via_buffer_get_current_preload_list();\n  var i;\n  var not_in_preload_list = [];\n  for ( i = 0; i < _via_buffer_img_index_list.length; ++i ) {\n    if ( ! preload_list.includes( _via_buffer_img_index_list[i] ) ) {\n      not_in_preload_list.push( i );\n    }\n  }\n  return not_in_preload_list;\n}\n\nfunction _via_buffer_get_current_preload_list() {\n  var i;\n  var preload_list = [_via_image_index];\n  var img_index = _via_image_index;\n  for ( i = 0; i < VIA_IMG_PRELOAD_COUNT; ++i ) {\n    var preload_index = img_index + VIA_IMG_PRELOAD_INDICES[i];\n    if ( preload_index < 0 ) {\n      preload_index = _via_img_count + preload_index;\n    }\n    if ( preload_index >= _via_img_count ) {\n      preload_index = preload_index - _via_img_count;\n    }\n    preload_list.push(preload_index);\n  }\n  return preload_list;\n}\n\n//\n// settings\n//\nfunction settings_panel_toggle() {\n  if ( _via_display_area_content_name === VIA_DISPLAY_AREA_CONTENT_NAME.SETTINGS ) {\n    if ( _via_display_area_content_name_prev !== '' ) {\n      set_display_area_content(_via_display_area_content_name_prev);\n    } else {\n      show_single_image_view();\n      _via_redraw_rleg_canvas();\n    }\n  }\n  else {\n    settings_init();\n    set_display_area_content(VIA_DISPLAY_AREA_CONTENT_NAME.SETTINGS);\n  }\n}\n\nfunction settings_init() {\n  settings_region_visualisation_update_options();\n  settings_filepath_update_html();\n  settings_show_current_value();\n}\n\nfunction settings_save() {\n  // check if default path was updated\n  var default_path_updated = false;\n  if ( document.getElementById('_via_settings.core.default_filepath').value !== _via_settings.core.default_filepath ) {\n    default_path_updated = true;\n  }\n\n  var p = document.getElementById('settings_panel');\n  var vl = p.getElementsByClassName('value');\n  var n = vl.length;\n  var i;\n  for ( i = 0; i < n; ++i ) {\n    var s = vl[i].childNodes[1];\n    var sid_parts = s.id.split('.');\n    if ( sid_parts[0] === '_via_settings' ) {\n      var el = _via_settings;\n      var found = true;\n      var j;\n      for ( j = 1; j < sid_parts.length - 1; ++j ) {\n        if ( el.hasOwnProperty( sid_parts[j] ) ) {\n          el = el[ sid_parts[j] ];\n        } else {\n          // unrecognized setting\n          found = false;\n          break;\n        }\n      }\n      if ( found ) {\n        var param = sid_parts[ sid_parts.length - 1 ];\n        if ( s.value !== '' || typeof(s.value) !== 'undefined' ) {\n          el[param] = s.value;\n        }\n      }\n    }\n  }\n\n  // non-standard settings\n  var p;\n  p = document.getElementById('settings_input_new_filepath');\n  if ( p.value !== '' ) {\n    project_filepath_add(p.value.trim());\n  }\n  p = document.getElementById('project_name');\n  if ( p.value !== _via_settings.project.name ) {\n    p.value = _via_settings.project.name;\n  }\n\n  if ( default_path_updated ) {\n    _via_file_resolve_all_to_default_filepath();\n    _via_show_img(_via_image_index);\n  }\n\n  show_message('Settings saved.');\n  settings_panel_toggle();\n}\n\nfunction settings_show_current_value() {\n  var p = document.getElementById('settings_panel');\n  var vl = p.getElementsByClassName('value');\n  var n = vl.length;\n  var i;\n  for ( i = 0; i < n; ++i ) {\n    var s = vl[i].childNodes[1];\n    var sid_parts = s.id.split('.');\n    if ( sid_parts[0] === '_via_settings' ) {\n      var el = _via_settings;\n      var found = true;\n      var j;\n      for ( j = 1; j < sid_parts.length; ++j ) {\n        if ( el.hasOwnProperty( sid_parts[j] ) ) {\n          el = el[ sid_parts[j] ];\n        } else {\n          // unrecognized setting\n          found = false;\n          break;\n        }\n      }\n\n      if ( found ) {\n        s.value = el;\n      }\n    }\n  }\n}\n\nfunction settings_region_visualisation_update_options() {\n  var region_setting_list = {'region_label': {\n    'default_option':'__via_region_id__',\n    'default_label':'Region id (1, 2, ...)',\n    'label_prefix':'Show value of region attribute: ',\n  }, 'region_color': {\n    'default_option':'__via_default_region_color__',\n    'default_label':'Default Region Colour',\n    'label_prefix':'Based on value of region attribute: ',\n  }};\n\n  for ( var setting in region_setting_list ) {\n    var select = document.getElementById('_via_settings.ui.image.' + setting);\n    select.innerHTML = '';\n    var default_option = document.createElement('option');\n    default_option.setAttribute('value', region_setting_list[setting]['default_option']);\n    if ( _via_settings.ui.image[setting] === region_setting_list[setting]['default_option'] ) {\n      default_option.setAttribute('selected', 'selected');\n    }\n    default_option.innerHTML = region_setting_list[setting]['default_label'];\n    select.appendChild(default_option);\n\n    // options: add region attributes\n    var rattr;\n    for ( rattr in _via_attributes['region'] ) {\n      var o = document.createElement('option');\n      o.setAttribute('value', rattr);\n      o.innerHTML = region_setting_list[setting]['label_prefix'] + rattr;\n      if ( _via_settings.ui.image.region_label === rattr ) {\n        o.setAttribute('selected', 'selected');\n      }\n      select.appendChild(o);\n    }\n  }\n}\n\nfunction settings_filepath_update_html() {\n  var p = document.getElementById('_via_settings.core.filepath');\n  p.innerHTML = '';\n  var i, path, order;\n  for ( path in _via_settings.core.filepath ) {\n    order = _via_settings.core.filepath[path]\n    if ( order !== 0 ) {\n      var li = document.createElement('li');\n      li.innerHTML = path + '<span class=\"text_button\" title=\"Delete image path\" onclick=\"project_filepath_del(\\\"' + path + '\\\"); settings_filepath_update_html();\">&times;</span>';\n      p.appendChild(li);\n    }\n  }\n}\n\n//\n// find location of file\n//\n\nfunction _via_file_resolve_all_to_default_filepath() {\n  var img_id;\n  for ( img_id in _via_img_metadata ) {\n    if ( _via_img_metadata.hasOwnProperty(img_id) ) {\n      _via_file_resolve_file_to_default_filepath(img_id);\n    }\n  }\n}\n\nfunction _via_file_resolve_file_to_default_filepath(img_id) {\n  if ( _via_img_metadata.hasOwnProperty(img_id) ) {\n    if ( typeof(_via_img_fileref[img_id]) === 'undefined' || ! _via_img_fileref[img_id] instanceof File ) {\n      if ( is_url( _via_img_metadata[img_id].filename ) ) {\n        _via_img_src[img_id] = _via_img_metadata[img_id].filename;\n      } else {\n        _via_img_src[img_id] = _via_settings.core.default_filepath + _via_img_metadata[img_id].filename;\n      }\n    }\n  }\n}\n\nfunction _via_file_resolve_all() {\n  return new Promise( function(ok_callback, err_callback) {\n    var all_promises = [];\n\n    var search_path_list = _via_file_get_search_path_list();\n    var i, img_id;\n    for ( i = 0; i < _via_img_count; ++i ) {\n      img_id = _via_image_id_list[i];\n      if ( typeof(_via_img_src[img_id]) === 'undefined' || _via_img_src[img_id] === '' ) {\n        var p = _via_file_resolve(i, search_path_list);\n        all_promises.push(p);\n      }\n    }\n\n    Promise.all( all_promises ).then( function(ok_file_index_list) {\n      console.log(ok_file_index_list);\n      ok_callback();\n      //project_file_load_on_success(ok_file_index);\n    }, function(err_file_index_list) {\n      console.log(err_file_index_list);\n      err_callback();\n      //project_file_load_on_fail(err_file_index);\n    });\n\n  });\n}\n\nfunction _via_file_get_search_path_list() {\n  var search_path_list = [];\n  var path;\n  for ( path in _via_settings.core.filepath ) {\n    if ( _via_settings.core.filepath[path] !== 0 ) {\n      search_path_list.push(path);\n    }\n  }\n  return search_path_list;\n}\n\nfunction _via_file_resolve(file_index, search_path_list) {\n  return new Promise( function(ok_callback, err_callback) {\n    var path_index = 0;\n    var p = _via_file_resolve_check_path(file_index, path_index, search_path_list).then(function(ok) {\n      ok_callback(ok);\n    }, function(err) {\n      err_callback(err);\n    });\n  }, false);\n}\n\nfunction _via_file_resolve_check_path(file_index, path_index, search_path_list) {\n  return new Promise( function(ok_callback, err_callback) {\n    var img_id = _via_image_id_list[file_index];\n    var img = new Image(0,0);\n\n    var img_path = search_path_list[path_index] + _via_img_metadata[img_id].filename;\n    if ( is_url( _via_img_metadata[img_id].filename ) ) {\n      if ( search_path_list[path_index] !== '' ) {\n        // we search for the the image filename pointed by URL in local search paths\n        img_path = search_path_list[path_index] + get_filename_from_url( _via_img_metadata[img_id].filename );\n      }\n    }\n\n    img.setAttribute('src', img_path);\n\n    img.addEventListener('load', function() {\n      _via_img_src[img_id] = img_path;\n      ok_callback(file_index);\n    }, false);\n    img.addEventListener('abort', function() {\n      err_callback(file_index);\n    });\n    img.addEventListener('error', function() {\n      var new_path_index = path_index + 1;\n      if ( new_path_index < search_path_list.length ) {\n        _via_file_resolve_check_path(file_index, new_path_index, search_path_list).then( function(ok) {\n          ok_callback(file_index);\n        }, function(err) {\n          err_callback(file_index);\n        });\n      } else {\n        err_callback(file_index);\n      }\n    }, false);\n  }, false);\n}\n\n//\n// page 404 (file not found)\n//\nfunction show_page_404(img_index) {\n  _via_buffer_hide_current_image();\n\n  set_display_area_content(VIA_DISPLAY_AREA_CONTENT_NAME.PAGE_404);\n\n  _via_image_index = img_index;\n  _via_image_id = _via_image_id_list[_via_image_index];\n  _via_current_image_loaded = false;\n  img_fn_list_ith_entry_selected(_via_image_index, true);\n\n  document.getElementById('page_404_filename').innerHTML = '[' + (_via_image_index+1) + ']' + _via_img_metadata[_via_image_id].filename;\n}\n\n\n//\n// utils\n//\n\nfunction is_url( s ) {\n  // @todo: ensure that this is sufficient to capture all image url\n  if ( s.startsWith('http://') || s.startsWith('https://') || s.startsWith('www.') ) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction get_filename_from_url( url ) {\n  return url.substring( url.lastIndexOf('/') + 1 );\n}\n\nfunction fixfloat(x) {\n  return parseFloat( x.toFixed(VIA_FLOAT_PRECISION) );\n}\n\nfunction shape_attribute_fixfloat(sa) {\n  for ( var attr in sa ) {\n    switch(attr) {\n    case 'x':\n    case 'y':\n    case 'width':\n    case 'height':\n    case 'r':\n    case 'rx':\n    case 'ry':\n      sa[attr] = fixfloat( sa[attr] );\n      break;\n    case 'all_points_x':\n    case 'all_points_y':\n      for ( var i in sa[attr] ) {\n        sa[attr][i] = fixfloat( sa[attr][i] );\n      }\n    }\n  }\n}\n\n// start with the array having smallest number of elements\n// check the remaining arrays if they all contain the elements of this shortest array\nfunction array_intersect( array_list ) {\n  if ( array_list.length === 0 ) {\n    return [];\n  }\n  if ( array_list.length === 1 ) {\n    return array_list[0];\n  }\n\n  var shortest_array = array_list[0];\n  var shortest_array_index = 0;\n  var i;\n  for ( i = 1; i < array_list.length; ++i ) {\n    if ( array_list[i].length < shortest_array.length ) {\n      shortest_array = array_list[i];\n      shortest_array_index = i;\n    }\n  }\n\n  var intersect = [];\n  var element_count = {};\n\n  var array_index_i;\n  for ( i = 0; i < array_list.length; ++i ) {\n    if ( i === 0 ) {\n      // in the first iteration, process the shortest element array\n      array_index_i = shortest_array_index;\n    } else {\n      array_index_i = i;\n    }\n\n    var j;\n    for ( j = 0; j < array_list[array_index_i].length; ++j ) {\n      if ( element_count[ array_list[array_index_i][j] ] === (i-1) ) {\n        if ( i === array_list.length - 1 ) {\n          intersect.push( array_list[array_index_i][j] );\n          element_count[ array_list[array_index_i][j] ] = 0;\n        } else {\n          element_count[ array_list[array_index_i][j] ] = i;\n        }\n      } else {\n        element_count[ array_list[array_index_i][j] ] = 0;\n      }\n    }\n  }\n  return intersect;\n}\n\nfunction generate_img_index_list(input) {\n  var all_img_index_list = [];\n\n  // condition: count format a,b\n  var count_format_img_index_list = [];\n  if ( input.prev_next_count.value !== '' ) {\n    var prev_next_split = input.prev_next_count.value.split(',');\n    if ( prev_next_split.length === 2 ) {\n      var prev = parseInt( prev_next_split[0] );\n      var next = parseInt( prev_next_split[1] );\n      var i;\n      for ( i = (_via_image_index - prev); i <= (_via_image_index + next); i++ ) {\n        count_format_img_index_list.push(i);\n      }\n    }\n  }\n  if ( count_format_img_index_list.length !== 0 ) {\n    all_img_index_list.push(count_format_img_index_list);\n  }\n\n  //condition: image index list expression\n  var expr_img_index_list = [];\n  if ( input.img_index_list.value !== '' ) {\n    var img_index_expr = input.img_index_list.value.split(',');\n    if ( img_index_expr.length !== 0 ) {\n      var i;\n      for ( i = 0; i < img_index_expr.length; ++i ) {\n        if ( img_index_expr[i].includes('-') ) {\n          var ab = img_index_expr[i].split('-');\n          var a = parseInt( ab[0] ) - 1; // 0 based indexing\n          var b = parseInt( ab[1] ) - 1;\n          var j;\n          for ( j = a; j <= b; ++j ) {\n            expr_img_index_list.push(j);\n          }\n        } else {\n          expr_img_index_list.push( parseInt(img_index_expr[i]) - 1 );\n        }\n      }\n    }\n  }\n  if ( expr_img_index_list.length !== 0 ) {\n    all_img_index_list.push(expr_img_index_list);\n  }\n\n\n  // condition: regular expression\n  var regex_img_index_list = [];\n  if ( input.regex.value !== '' ) {\n    var regex = input.regex.value;\n    for ( var i=0; i < _via_image_filename_list.length; ++i ) {\n      var filename = _via_image_filename_list[i];\n      if ( filename.match(regex) !== null ) {\n        regex_img_index_list.push(i);\n      }\n    }\n  }\n  if ( regex_img_index_list.length !== 0 ) {\n    all_img_index_list.push(regex_img_index_list);\n  }\n\n  var intersect = array_intersect(all_img_index_list);\n  return intersect;\n}\n\nif ( ! _via_is_debug_mode ) {\n  // warn user of possible loss of data\n  window.onbeforeunload = function (e) {\n    e = e || window.event;\n\n    // For IE and Firefox prior to version 4\n    if (e) {\n      e.returnValue = 'Did you save your data?';\n    }\n\n    // For Safari\n    return 'Did you save your data?';\n  };\n}\n\n//\n// keep a record of image statistics (e.g. width, height, ...)\n//\nfunction img_stat_set(img_index, stat) {\n  if ( stat.length ) {\n    _via_img_stat[img_index] = stat;\n  } else {\n    delete _via_img_stat[img_index];\n  }\n}\n\nfunction img_stat_set_all() {\n  return new Promise( function(ok_callback, err_callback) {\n    var promise_list = [];\n    var img_id;\n    for ( var img_index in _via_image_id_list ) {\n      if ( ! _via_img_stat.hasOwnProperty(img_index) ) {\n        img_id = _via_image_id_list[img_index];\n        if ( _via_img_metadata[img_id].file_attributes.hasOwnProperty('width') &&\n             _via_img_metadata[img_id].file_attributes.hasOwnProperty('height')\n           ) {\n          _via_img_stat[img_index] = [_via_img_metadata[img_id].file_attributes['width'],\n                                      _via_img_metadata[img_id].file_attributes['height'],\n                                     ];\n        } else {\n          promise_list.push( img_stat_get(img_index) );\n        }\n      }\n    }\n    if ( promise_list.length ) {\n      Promise.all(promise_list).then( function(ok) {\n        ok_callback();\n      }.bind(this), function(err) {\n        console.warn('Failed to read statistics of all images!');\n        err_callback();\n      });\n    } else {\n      ok_callback();\n    }\n  }.bind(this));\n}\n\nfunction img_stat_get(img_index) {\n  return new Promise( function(ok_callback, err_callback) {\n    var img_id = _via_image_id_list[img_index];\n    var tmp_img = document.createElement('img');\n    var tmp_file_object_url = null;\n    tmp_img.addEventListener('load', function() {\n      _via_img_stat[img_index] = [tmp_img.naturalWidth, tmp_img.naturalHeight];\n      if ( tmp_file_object_url !== null ) {\n        URL.revokeObjectURL(tmp_file_object_url);\n      }\n      ok_callback();\n    }.bind(this));\n    tmp_img.addEventListener('error', function() {\n      _via_img_stat[img_index] = [-1, -1];\n      if ( tmp_file_object_url !== null ) {\n        URL.revokeObjectURL(tmp_file_object_url);\n      }\n      ok_callback();\n    }.bind(this));\n\n    if ( _via_img_fileref[img_id] instanceof File ) {\n      tmp_file_object_url = URL.createObjectURL(_via_img_fileref[img_id]);\n      tmp_img.src = tmp_file_object_url;\n    } else {\n      tmp_img.src = _via_img_src[img_id];\n    }\n  }.bind(this));\n}\n\n\n// pts = [x0,y0,x1,y1,....]\nfunction polygon_to_bbox(pts) {\n  var xmin = +Infinity;\n  var xmax = -Infinity;\n  var ymin = +Infinity;\n  var ymax = -Infinity;\n  for ( var i = 0; i < pts.length; i = i + 2 ) {\n    if ( pts[i] > xmax ) {\n      xmax = pts[i];\n    }\n    if ( pts[i] < xmin ) {\n      xmin = pts[i];\n    }\n    if ( pts[i+1] > ymax ) {\n      ymax = pts[i+1];\n    }\n    if ( pts[i+1] < ymin ) {\n      ymin = pts[i+1];\n    }\n  }\n  return [xmin, ymin, xmax-xmin, ymax-ymin];\n}\n"],"sourceRoot":"webpack:///"}